Terminals unused in grammar

   NULLPOINTER


Rules useless in parser due to conflicts

  134 ExprCaseClause: ExprSwitchCase COLON StatementList


State 127 conflicts: 5 shift/reduce
State 134 conflicts: 1 shift/reduce
State 135 conflicts: 11 shift/reduce
State 193 conflicts: 11 shift/reduce
State 257 conflicts: 11 shift/reduce
State 266 conflicts: 11 shift/reduce
State 300 conflicts: 19 shift/reduce
State 390 conflicts: 1 reduce/reduce


Grammar

    0 $accept: SourceFile $end

    1 SourceFile: PackageClause SCOLON
    2           | PackageClause SCOLON ImportDeclList
    3           | PackageClause SCOLON TopLevelDeclList
    4           | PackageClause SCOLON ImportDeclList TopLevelDeclList

    5 PackageClause: PACKAGE PackageName

    6 PackageName: IDENTIFIER

    7 ImportDeclList: ImportDeclList ImportDecl SCOLON
    8               | ImportDecl SCOLON

    9 ImportDecl: IMPORT LEFTPARAN ImportSpecList RIGHTPARAN
   10           | IMPORT LEFTPARAN RIGHTPARAN
   11           | IMPORT ImportSpec

   12 ImportSpecList: ImportSpecList ImportSpec SCOLON
   13               | ImportSpec SCOLON

   14 ImportSpec: PackageName ImportPath
   15           | DOT ImportPath
   16           | ImportPath

   17 ImportPath: String

   18 TopLevelDeclList: TopLevelDeclList TopLevelDecl SCOLON
   19                 | TopLevelDecl SCOLON

   20 TopLevelDecl: Declaration
   21             | FunctionDecl
   22             | MethodDecl

   23 Block: LEFTBRACE StatementList RIGHTBRACE

   24 Condition: Expression

   25 StatementList: StatementList Statement SCOLON
   26              | Statement SCOLON

   27 Statement: Declaration
   28          | LabeledStmt
   29          | SimpleStmt
   30          | ReturnStmt
   31          | BreakStmt
   32          | ContinueStmt
   33          | GotoStmt
   34          | SwitchStmt
   35          | FallthroughStmt
   36          | Block
   37          | IfStmt
   38          | ForStmt

   39 Declaration: TypeDecl
   40            | VarDecl
   41            | ConstDecl

   42 FunctionDecl: FUNC FunctionName Signature FunctionBody
   43             | FUNC FunctionName Signature

   44 FunctionName: IDENTIFIER

   45 MethodDecl: FUNC Receiver IDENTIFIER Signature
   46           | FUNC Receiver IDENTIFIER Signature FunctionBody

   47 LabeledStmt: Label COLON Statement

   48 Label: IDENTIFIER

   49 SimpleStmt: EmptyStmt
   50           | ExpressionStmt
   51           | IncDecStmt
   52           | Assignment
   53           | ShortVarDecl

   54 EmptyStmt: %empty

   55 ExpressionStmt: Expression

   56 IncDecStmt: Expression PLUSPLUS
   57           | Expression MINUSMINUS

   58 Assignment: ExpressionList Assign_OP ExpressionList

   59 ShortVarDecl: IdentifierList INFER_EQ ExpressionList

   60 VarDecl: VAR VarSpec
   61        | VAR LEFTPARAN VarSpecList RIGHTPARAN
   62        | VAR LEFTPARAN RIGHTPARAN

   63 VarSpecList: VarSpecList VarSpec SCOLON
   64            | VarSpec SCOLON

   65 VarSpec: IdentifierList Type
   66        | IdentifierList Type EQ ExpressionList
   67        | IdentifierList EQ ExpressionList

   68 ConstDecl: CONST ConstSpec
   69          | CONST LEFTPARAN ConstSpecList RIGHTPARAN
   70          | CONST LEFTPARAN RIGHTPARAN

   71 ConstSpecList: ConstSpecList ConstSpec SCOLON
   72              | ConstSpec SCOLON

   73 ConstSpec: IdentifierList Type
   74          | IdentifierList Type EQ ExpressionList
   75          | IdentifierList EQ ExpressionList

   76 FunctionBody: Block

   77 Signature: Parameters
   78          | Parameters Result

   79 Result: Parameters
   80       | Type

   81 Parameters: LEFTPARAN RIGHTPARAN
   82           | LEFTPARAN ParameterList RIGHTPARAN
   83           | LEFTPARAN ParameterList COMMA RIGHTPARAN

   84 ParameterList: ParameterDecl
   85              | ParameterList COMMA ParameterDecl

   86 ParameterDecl: IdentifierList Type
   87              | IdentifierList ELIPSIS Type
   88              | ELIPSIS Type

   89 IdentifierList: IdentifierList COMMA IDENTIFIER
   90               | IDENTIFIER

   91 QualifiedIdent: PackageName DOT IDENTIFIER

   92 Receiver: Parameters

   93 CompositeLit: LiteralType LiteralValue

   94 LiteralType: StructType
   95            | ArrayType
   96            | PointerType
   97            | SliceType
   98            | LEFTSQUARE ELIPSIS RIGHTSQUARE Operand
   99            | MapType

  100 Type: LiteralType
  101     | OperandName

  102 Operand: Literal
  103        | OperandName
  104        | LEFTPARAN Expression RIGHTPARAN

  105 OperandName: QualifiedIdent

  106 LiteralValue: LEFTBRACE RIGHTBRACE
  107             | LEFTBRACE ElementList RIGHTBRACE
  108             | LEFTBRACE ElementList COMMA RIGHTBRACE

  109 SliceType: LEFTSQUARE RIGHTSQUARE Type

  110 ElementList: KeyedElement
  111            | ElementList COMMA KeyedElement

  112 KeyedElement: Element
  113             | Key COLON Element

  114 Key: Expression
  115    | LiteralValue

  116 Element: Expression
  117        | LiteralValue

  118 ReturnStmt: RETURN
  119           | RETURN ExpressionList

  120 BreakStmt: BREAK
  121          | BREAK Label

  122 ContinueStmt: CONTINUE
  123             | CONTINUE Label

  124 GotoStmt: GOTO Label

  125 SwitchStmt: ExprSwitchStmt

  126 ExprSwitchStmt: SWITCH LEFTBRACE RIGHTBRACE
  127               | SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE
  128               | SWITCH LEFTBRACE RIGHTBRACE Expression
  129               | SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE Expression
  130               | SWITCH LEFTBRACE RIGHTBRACE ExprCaseClause
  131               | SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE ExprCaseClause
  132               | SWITCH LEFTBRACE RIGHTBRACE Expression ExprCaseClause
  133               | SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE Expression ExprCaseClause

  134 ExprCaseClause: ExprSwitchCase COLON StatementList

  135 ExprSwitchCase: CASE ExpressionList
  136               | DEFAULT

  137 FallthroughStmt: FALLTHROUGH

  138 IfStmt: IF Expression Block
  139       | IF SimpleStmt SCOLON Expression Block
  140       | IF Expression Block ELSE IfStmt
  141       | IF Expression Block ELSE Block
  142       | IF SimpleStmt SCOLON Expression Block ELSE IfStmt
  143       | IF SimpleStmt SCOLON Expression Block ELSE Block

  144 ForStmt: FOR Block
  145        | FOR ForClause Block
  146        | FOR Condition Block
  147        | FOR RangeClause Block

  148 ForClause: InitStmt SCOLON SCOLON PostStmt
  149          | InitStmt SCOLON Condition SCOLON PostStmt

  150 InitStmt: SimpleStmt

  151 PostStmt: SimpleStmt

  152 RangeClause: RANGE Expression
  153            | IdentifierList INFER_EQ RANGE Expression
  154            | ExpressionList EQ RANGE Expression

  155 Expression: UnaryExpr
  156           | Expression Binary_OP Expression

  157 UnaryExpr: PrimaryExpr
  158          | Unary_OP PrimaryExpr

  159 PrimaryExpr: Operand
  160            | MakeExpr
  161            | PrimaryExpr Selector
  162            | PrimaryExpr Index
  163            | PrimaryExpr Slice
  164            | PrimaryExpr Arguments
  165            | OperandName StructLiteral
  166            | PrimaryExpr TypeAssertion

  167 StructLiteral: LEFTBRACE KeyValueList RIGHTBRACE

  168 KeyValueList: Expression COLON Expression
  169             | Expression COLON Expression COMMA KeyValueList

  170 Selector: DOT IDENTIFIER

  171 Index: LEFTSQUARE Expression RIGHTSQUARE

  172 Slice: LEFTSQUARE COLON Expression RIGHTSQUARE
  173      | LEFTSQUARE COLON RIGHTSQUARE
  174      | LEFTSQUARE Expression COLON RIGHTSQUARE
  175      | LEFTSQUARE Expression COLON Expression RIGHTSQUARE
  176      | LEFTSQUARE COLON Expression COLON Expression RIGHTSQUARE
  177      | LEFTSQUARE Expression COLON Expression COLON Expression RIGHTSQUARE

  178 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN
  179         | MAKE LEFTPARAN Type COMMA Expression RIGHTPARAN
  180         | MAKE LEFTPARAN Type RIGHTPARAN
  181         | NEW LEFTPARAN Type RIGHTPARAN

  182 TypeAssertion: DOT LEFTPARAN Type RIGHTPARAN

  183 Arguments: LEFTPARAN RIGHTPARAN
  184          | LEFTPARAN ExpressionList ELIPSIS RIGHTPARAN

  185 ExpressionList: Expression
  186               | Expression COMMA ExpressionList

  187 TypeDecl: TYPE LEFTPARAN TypeSpecList RIGHTPARAN
  188         | TYPE TypeSpec

  189 TypeSpecList: TypeSpecList TypeSpec SCOLON
  190             | TypeSpec SCOLON

  191 TypeSpec: AliasDecl
  192         | TypeDef

  193 AliasDecl: IDENTIFIER EQ Type

  194 TypeDef: IDENTIFIER Type

  195 MapType: MAP LEFTSQUARE Type RIGHTSQUARE Type

  196 StructType: STRUCT LEFTBRACE FieldDeclList RIGHTBRACE
  197           | STRUCT LEFTBRACE RIGHTBRACE

  198 FieldDeclList: FieldDecl SCOLON
  199              | FieldDeclList FieldDecl SCOLON

  200 FieldDecl: IdentifierList Type String
  201          | IdentifierList Type

  202 PointerType: MUL Type

  203 ArrayType: LEFTSQUARE Expression RIGHTSQUARE Type

  204 Literal: BasicLit
  205        | CompositeLit

  206 BasicLit: INTEGER_VAL
  207         | FLOAT_VAL
  208         | BYTE_VAL
  209         | String
  210         | TRUE
  211         | FALSE

  212 String: RAW_STRING
  213       | INTERPRETED_STRING

  214 Assign_OP: EQ
  215          | Add_OP EQ
  216          | Mul_OP EQ

  217 Add_OP: ADD
  218       | SUB
  219       | OR
  220       | XOR

  221 Rel_OP: ISEQ
  222       | NEQ
  223       | LESSEQ
  224       | GRTEQ
  225       | GRT
  226       | LESS

  227 Mul_OP: MUL
  228       | QUOT
  229       | MOD
  230       | SHL
  231       | SHR
  232       | AND
  233       | ANDNOT

  234 Unary_OP: ADD
  235         | SUB
  236         | NOT
  237         | XOR
  238         | MUL
  239         | AND

  240 Binary_OP: LOGAND
  241          | LOGOR
  242          | Rel_OP
  243          | Add_OP
  244          | Mul_OP


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER_VAL (258) 206
FLOAT_VAL (259) 207
TRUE (260) 210
FALSE (261) 211
NULLPOINTER (262)
BREAK (263) 120 121
CONTINUE (264) 122 123
RETURN (265) 118 119
SCOLON (266) 1 2 3 4 7 8 12 13 18 19 25 26 63 64 71 72 127 129 131
    133 139 142 143 148 149 189 190 198 199
FUNC (267) 42 43 45 46
STRUCT (268) 196 197
ELSE (269) 140 141 142 143
PACKAGE (270) 5
IF (271) 138 139 140 141 142 143
FOR (272) 144 145 146 147
RANGE (273) 152 153 154
IMPORT (274) 9 10 11
VAR (275) 60 61 62
SWITCH (276) 126 127 128 129 130 131 132 133
CASE (277) 135
NEW (278) 181
CONST (279) 68 69 70
MAP (280) 195
DEFAULT (281) 136
MAKE (282) 178 179 180
GOTO (283) 124
FALLTHROUGH (284) 137
TYPE (285) 187 188
PLUSPLUS (286) 56
MINUSMINUS (287) 57
ANDNOT (288) 233
ELIPSIS (289) 87 88 98 184
ADD (290) 217 234
SUB (291) 218 235
NOT (292) 236
XOR (293) 220 237
MUL (294) 202 227 238
AND (295) 232 239
OR (296) 219
LOGOR (297) 241
LOGAND (298) 240
ISEQ (299) 221
NEQ (300) 222
LESSEQ (301) 223
GRTEQ (302) 224
GRT (303) 225
LESS (304) 226
MOD (305) 229
QUOT (306) 228
SHL (307) 230
SHR (308) 231
EQ (309) 66 67 74 75 154 193 214 215 216
INFER_EQ (310) 59 153
RIGHTPARAN (311) 9 10 61 62 69 70 81 82 83 104 178 179 180 181 182
    183 184 187
RIGHTBRACE (312) 23 106 107 108 126 127 128 129 130 131 132 133 167
    196 197
RIGHTSQUARE (313) 98 109 171 172 173 174 175 176 177 195 203
LEFTPARAN (314) 9 10 61 62 69 70 81 82 83 104 178 179 180 181 182 183
    184 187
LEFTBRACE (315) 23 106 107 108 126 127 128 129 130 131 132 133 167
    196 197
LEFTSQUARE (316) 98 109 171 172 173 174 175 176 177 195 203
COLON (317) 47 113 134 168 169 172 173 174 175 176 177
DOT (318) 15 91 170 182
COMMA (319) 83 85 89 108 111 169 178 179 186
RAW_STRING (320) 212
INTERPRETED_STRING (321) 213
BYTE_VAL (322) 208
IDENTIFIER (323) 6 44 45 46 48 89 90 91 170 193 194


Nonterminals, with rules where they appear

$accept (69)
    on left: 0
SourceFile (70)
    on left: 1 2 3 4, on right: 0
PackageClause (71)
    on left: 5, on right: 1 2 3 4
PackageName (72)
    on left: 6, on right: 5 14 91
ImportDeclList (73)
    on left: 7 8, on right: 2 4 7
ImportDecl (74)
    on left: 9 10 11, on right: 7 8
ImportSpecList (75)
    on left: 12 13, on right: 9 12
ImportSpec (76)
    on left: 14 15 16, on right: 11 12 13
ImportPath (77)
    on left: 17, on right: 14 15 16
TopLevelDeclList (78)
    on left: 18 19, on right: 3 4 18
TopLevelDecl (79)
    on left: 20 21 22, on right: 18 19
Block (80)
    on left: 23, on right: 36 76 138 139 140 141 142 143 144 145 146
    147
Condition (81)
    on left: 24, on right: 146 149
StatementList (82)
    on left: 25 26, on right: 23 25 134
Statement (83)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38, on right: 25 26 47
Declaration (84)
    on left: 39 40 41, on right: 20 27
FunctionDecl (85)
    on left: 42 43, on right: 21
FunctionName (86)
    on left: 44, on right: 42 43
MethodDecl (87)
    on left: 45 46, on right: 22
LabeledStmt (88)
    on left: 47, on right: 28
Label (89)
    on left: 48, on right: 47 121 123 124
SimpleStmt (90)
    on left: 49 50 51 52 53, on right: 29 127 129 131 133 139 142 143
    150 151
EmptyStmt (91)
    on left: 54, on right: 49
ExpressionStmt (92)
    on left: 55, on right: 50
IncDecStmt (93)
    on left: 56 57, on right: 51
Assignment (94)
    on left: 58, on right: 52
ShortVarDecl (95)
    on left: 59, on right: 53
VarDecl (96)
    on left: 60 61 62, on right: 40
VarSpecList (97)
    on left: 63 64, on right: 61 63
VarSpec (98)
    on left: 65 66 67, on right: 60 63 64
ConstDecl (99)
    on left: 68 69 70, on right: 41
ConstSpecList (100)
    on left: 71 72, on right: 69 71
ConstSpec (101)
    on left: 73 74 75, on right: 68 71 72
FunctionBody (102)
    on left: 76, on right: 42 46
Signature (103)
    on left: 77 78, on right: 42 43 45 46
Result (104)
    on left: 79 80, on right: 78
Parameters (105)
    on left: 81 82 83, on right: 77 78 79 92
ParameterList (106)
    on left: 84 85, on right: 82 83 85
ParameterDecl (107)
    on left: 86 87 88, on right: 84 85
IdentifierList (108)
    on left: 89 90, on right: 59 65 66 67 73 74 75 86 87 89 153 200
    201
QualifiedIdent (109)
    on left: 91, on right: 105
Receiver (110)
    on left: 92, on right: 45 46
CompositeLit (111)
    on left: 93, on right: 205
LiteralType (112)
    on left: 94 95 96 97 98 99, on right: 93 100
Type (113)
    on left: 100 101, on right: 65 66 73 74 80 86 87 88 109 178 179
    180 181 182 193 194 195 200 201 202 203
Operand (114)
    on left: 102 103 104, on right: 98 159
OperandName (115)
    on left: 105, on right: 101 103 165
LiteralValue (116)
    on left: 106 107 108, on right: 93 115 117
SliceType (117)
    on left: 109, on right: 97
ElementList (118)
    on left: 110 111, on right: 107 108 111
KeyedElement (119)
    on left: 112 113, on right: 110 111
Key (120)
    on left: 114 115, on right: 113
Element (121)
    on left: 116 117, on right: 112 113
ReturnStmt (122)
    on left: 118 119, on right: 30
BreakStmt (123)
    on left: 120 121, on right: 31
ContinueStmt (124)
    on left: 122 123, on right: 32
GotoStmt (125)
    on left: 124, on right: 33
SwitchStmt (126)
    on left: 125, on right: 34
ExprSwitchStmt (127)
    on left: 126 127 128 129 130 131 132 133, on right: 125
ExprCaseClause (128)
    on left: 134, on right: 130 131 132 133
ExprSwitchCase (129)
    on left: 135 136, on right: 134
FallthroughStmt (130)
    on left: 137, on right: 35
IfStmt (131)
    on left: 138 139 140 141 142 143, on right: 37 140 142
ForStmt (132)
    on left: 144 145 146 147, on right: 38
ForClause (133)
    on left: 148 149, on right: 145
InitStmt (134)
    on left: 150, on right: 148 149
PostStmt (135)
    on left: 151, on right: 148 149
RangeClause (136)
    on left: 152 153 154, on right: 147
Expression (137)
    on left: 155 156, on right: 24 55 56 57 104 114 116 128 129 132
    133 138 139 140 141 142 143 152 153 154 156 168 169 171 172 174
    175 176 177 178 179 185 186 203
UnaryExpr (138)
    on left: 157 158, on right: 155
PrimaryExpr (139)
    on left: 159 160 161 162 163 164 165 166, on right: 157 158 161
    162 163 164 166
StructLiteral (140)
    on left: 167, on right: 165
KeyValueList (141)
    on left: 168 169, on right: 167 169
Selector (142)
    on left: 170, on right: 161
Index (143)
    on left: 171, on right: 162
Slice (144)
    on left: 172 173 174 175 176 177, on right: 163
MakeExpr (145)
    on left: 178 179 180 181, on right: 160
TypeAssertion (146)
    on left: 182, on right: 166
Arguments (147)
    on left: 183 184, on right: 164
ExpressionList (148)
    on left: 185 186, on right: 58 59 66 67 74 75 119 135 154 184 186
TypeDecl (149)
    on left: 187 188, on right: 39
TypeSpecList (150)
    on left: 189 190, on right: 187 189
TypeSpec (151)
    on left: 191 192, on right: 188 189 190
AliasDecl (152)
    on left: 193, on right: 191
TypeDef (153)
    on left: 194, on right: 192
MapType (154)
    on left: 195, on right: 99
StructType (155)
    on left: 196 197, on right: 94
FieldDeclList (156)
    on left: 198 199, on right: 196 199
FieldDecl (157)
    on left: 200 201, on right: 198 199
PointerType (158)
    on left: 202, on right: 96
ArrayType (159)
    on left: 203, on right: 95
Literal (160)
    on left: 204 205, on right: 102
BasicLit (161)
    on left: 206 207 208 209 210 211, on right: 204
String (162)
    on left: 212 213, on right: 17 200 209
Assign_OP (163)
    on left: 214 215 216, on right: 58
Add_OP (164)
    on left: 217 218 219 220, on right: 215 243
Rel_OP (165)
    on left: 221 222 223 224 225 226, on right: 242
Mul_OP (166)
    on left: 227 228 229 230 231 232 233, on right: 216 244
Unary_OP (167)
    on left: 234 235 236 237 238 239, on right: 158
Binary_OP (168)
    on left: 240 241 242 243 244, on right: 156


State 0

    0 $accept: . SourceFile $end

    PACKAGE  shift, and go to state 1

    SourceFile     go to state 2
    PackageClause  go to state 3


State 1

    5 PackageClause: PACKAGE . PackageName

    IDENTIFIER  shift, and go to state 4

    PackageName  go to state 5


State 2

    0 $accept: SourceFile . $end

    $end  shift, and go to state 6


State 3

    1 SourceFile: PackageClause . SCOLON
    2           | PackageClause . SCOLON ImportDeclList
    3           | PackageClause . SCOLON TopLevelDeclList
    4           | PackageClause . SCOLON ImportDeclList TopLevelDeclList

    SCOLON  shift, and go to state 7


State 4

    6 PackageName: IDENTIFIER .

    $default  reduce using rule 6 (PackageName)


State 5

    5 PackageClause: PACKAGE PackageName .

    $default  reduce using rule 5 (PackageClause)


State 6

    0 $accept: SourceFile $end .

    $default  accept


State 7

    1 SourceFile: PackageClause SCOLON .
    2           | PackageClause SCOLON . ImportDeclList
    3           | PackageClause SCOLON . TopLevelDeclList
    4           | PackageClause SCOLON . ImportDeclList TopLevelDeclList

    FUNC    shift, and go to state 8
    IMPORT  shift, and go to state 9
    VAR     shift, and go to state 10
    CONST   shift, and go to state 11
    TYPE    shift, and go to state 12

    $default  reduce using rule 1 (SourceFile)

    ImportDeclList    go to state 13
    ImportDecl        go to state 14
    TopLevelDeclList  go to state 15
    TopLevelDecl      go to state 16
    Declaration       go to state 17
    FunctionDecl      go to state 18
    MethodDecl        go to state 19
    VarDecl           go to state 20
    ConstDecl         go to state 21
    TypeDecl          go to state 22


State 8

   42 FunctionDecl: FUNC . FunctionName Signature FunctionBody
   43             | FUNC . FunctionName Signature
   45 MethodDecl: FUNC . Receiver IDENTIFIER Signature
   46           | FUNC . Receiver IDENTIFIER Signature FunctionBody

    LEFTPARAN   shift, and go to state 23
    IDENTIFIER  shift, and go to state 24

    FunctionName  go to state 25
    Parameters    go to state 26
    Receiver      go to state 27


State 9

    9 ImportDecl: IMPORT . LEFTPARAN ImportSpecList RIGHTPARAN
   10           | IMPORT . LEFTPARAN RIGHTPARAN
   11           | IMPORT . ImportSpec

    LEFTPARAN           shift, and go to state 28
    DOT                 shift, and go to state 29
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    IDENTIFIER          shift, and go to state 4

    PackageName  go to state 32
    ImportSpec   go to state 33
    ImportPath   go to state 34
    String       go to state 35


State 10

   60 VarDecl: VAR . VarSpec
   61        | VAR . LEFTPARAN VarSpecList RIGHTPARAN
   62        | VAR . LEFTPARAN RIGHTPARAN

    LEFTPARAN   shift, and go to state 36
    IDENTIFIER  shift, and go to state 37

    VarSpec         go to state 38
    IdentifierList  go to state 39


State 11

   68 ConstDecl: CONST . ConstSpec
   69          | CONST . LEFTPARAN ConstSpecList RIGHTPARAN
   70          | CONST . LEFTPARAN RIGHTPARAN

    LEFTPARAN   shift, and go to state 40
    IDENTIFIER  shift, and go to state 37

    ConstSpec       go to state 41
    IdentifierList  go to state 42


State 12

  187 TypeDecl: TYPE . LEFTPARAN TypeSpecList RIGHTPARAN
  188         | TYPE . TypeSpec

    LEFTPARAN   shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    TypeSpec   go to state 45
    AliasDecl  go to state 46
    TypeDef    go to state 47


State 13

    2 SourceFile: PackageClause SCOLON ImportDeclList .
    4           | PackageClause SCOLON ImportDeclList . TopLevelDeclList
    7 ImportDeclList: ImportDeclList . ImportDecl SCOLON

    FUNC    shift, and go to state 8
    IMPORT  shift, and go to state 9
    VAR     shift, and go to state 10
    CONST   shift, and go to state 11
    TYPE    shift, and go to state 12

    $default  reduce using rule 2 (SourceFile)

    ImportDecl        go to state 48
    TopLevelDeclList  go to state 49
    TopLevelDecl      go to state 16
    Declaration       go to state 17
    FunctionDecl      go to state 18
    MethodDecl        go to state 19
    VarDecl           go to state 20
    ConstDecl         go to state 21
    TypeDecl          go to state 22


State 14

    8 ImportDeclList: ImportDecl . SCOLON

    SCOLON  shift, and go to state 50


State 15

    3 SourceFile: PackageClause SCOLON TopLevelDeclList .
   18 TopLevelDeclList: TopLevelDeclList . TopLevelDecl SCOLON

    FUNC   shift, and go to state 8
    VAR    shift, and go to state 10
    CONST  shift, and go to state 11
    TYPE   shift, and go to state 12

    $default  reduce using rule 3 (SourceFile)

    TopLevelDecl  go to state 51
    Declaration   go to state 17
    FunctionDecl  go to state 18
    MethodDecl    go to state 19
    VarDecl       go to state 20
    ConstDecl     go to state 21
    TypeDecl      go to state 22


State 16

   19 TopLevelDeclList: TopLevelDecl . SCOLON

    SCOLON  shift, and go to state 52


State 17

   20 TopLevelDecl: Declaration .

    $default  reduce using rule 20 (TopLevelDecl)


State 18

   21 TopLevelDecl: FunctionDecl .

    $default  reduce using rule 21 (TopLevelDecl)


State 19

   22 TopLevelDecl: MethodDecl .

    $default  reduce using rule 22 (TopLevelDecl)


State 20

   40 Declaration: VarDecl .

    $default  reduce using rule 40 (Declaration)


State 21

   41 Declaration: ConstDecl .

    $default  reduce using rule 41 (Declaration)


State 22

   39 Declaration: TypeDecl .

    $default  reduce using rule 39 (Declaration)


State 23

   81 Parameters: LEFTPARAN . RIGHTPARAN
   82           | LEFTPARAN . ParameterList RIGHTPARAN
   83           | LEFTPARAN . ParameterList COMMA RIGHTPARAN

    ELIPSIS     shift, and go to state 53
    RIGHTPARAN  shift, and go to state 54
    IDENTIFIER  shift, and go to state 37

    ParameterList   go to state 55
    ParameterDecl   go to state 56
    IdentifierList  go to state 57


State 24

   44 FunctionName: IDENTIFIER .

    $default  reduce using rule 44 (FunctionName)


State 25

   42 FunctionDecl: FUNC FunctionName . Signature FunctionBody
   43             | FUNC FunctionName . Signature

    LEFTPARAN  shift, and go to state 23

    Signature   go to state 58
    Parameters  go to state 59


State 26

   92 Receiver: Parameters .

    $default  reduce using rule 92 (Receiver)


State 27

   45 MethodDecl: FUNC Receiver . IDENTIFIER Signature
   46           | FUNC Receiver . IDENTIFIER Signature FunctionBody

    IDENTIFIER  shift, and go to state 60


State 28

    9 ImportDecl: IMPORT LEFTPARAN . ImportSpecList RIGHTPARAN
   10           | IMPORT LEFTPARAN . RIGHTPARAN

    RIGHTPARAN          shift, and go to state 61
    DOT                 shift, and go to state 29
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 32
    ImportSpecList  go to state 62
    ImportSpec      go to state 63
    ImportPath      go to state 34
    String          go to state 35


State 29

   15 ImportSpec: DOT . ImportPath

    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31

    ImportPath  go to state 64
    String      go to state 35


State 30

  212 String: RAW_STRING .

    $default  reduce using rule 212 (String)


State 31

  213 String: INTERPRETED_STRING .

    $default  reduce using rule 213 (String)


State 32

   14 ImportSpec: PackageName . ImportPath

    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31

    ImportPath  go to state 65
    String      go to state 35


State 33

   11 ImportDecl: IMPORT ImportSpec .

    $default  reduce using rule 11 (ImportDecl)


State 34

   16 ImportSpec: ImportPath .

    $default  reduce using rule 16 (ImportSpec)


State 35

   17 ImportPath: String .

    $default  reduce using rule 17 (ImportPath)


State 36

   61 VarDecl: VAR LEFTPARAN . VarSpecList RIGHTPARAN
   62        | VAR LEFTPARAN . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 66
    IDENTIFIER  shift, and go to state 37

    VarSpecList     go to state 67
    VarSpec         go to state 68
    IdentifierList  go to state 39


State 37

   90 IdentifierList: IDENTIFIER .

    $default  reduce using rule 90 (IdentifierList)


State 38

   60 VarDecl: VAR VarSpec .

    $default  reduce using rule 60 (VarDecl)


State 39

   65 VarSpec: IdentifierList . Type
   66        | IdentifierList . Type EQ ExpressionList
   67        | IdentifierList . EQ ExpressionList
   89 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    EQ          shift, and go to state 72
    LEFTSQUARE  shift, and go to state 73
    COMMA       shift, and go to state 74
    IDENTIFIER  shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 78
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 40

   69 ConstDecl: CONST LEFTPARAN . ConstSpecList RIGHTPARAN
   70          | CONST LEFTPARAN . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 85
    IDENTIFIER  shift, and go to state 37

    ConstSpecList   go to state 86
    ConstSpec       go to state 87
    IdentifierList  go to state 42


State 41

   68 ConstDecl: CONST ConstSpec .

    $default  reduce using rule 68 (ConstDecl)


State 42

   73 ConstSpec: IdentifierList . Type
   74          | IdentifierList . Type EQ ExpressionList
   75          | IdentifierList . EQ ExpressionList
   89 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    EQ          shift, and go to state 88
    LEFTSQUARE  shift, and go to state 73
    COMMA       shift, and go to state 74
    IDENTIFIER  shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 89
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 43

  187 TypeDecl: TYPE LEFTPARAN . TypeSpecList RIGHTPARAN

    IDENTIFIER  shift, and go to state 44

    TypeSpecList  go to state 90
    TypeSpec      go to state 91
    AliasDecl     go to state 46
    TypeDef       go to state 47


State 44

  193 AliasDecl: IDENTIFIER . EQ Type
  194 TypeDef: IDENTIFIER . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    EQ          shift, and go to state 92
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 93
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 45

  188 TypeDecl: TYPE TypeSpec .

    $default  reduce using rule 188 (TypeDecl)


State 46

  191 TypeSpec: AliasDecl .

    $default  reduce using rule 191 (TypeSpec)


State 47

  192 TypeSpec: TypeDef .

    $default  reduce using rule 192 (TypeSpec)


State 48

    7 ImportDeclList: ImportDeclList ImportDecl . SCOLON

    SCOLON  shift, and go to state 94


State 49

    4 SourceFile: PackageClause SCOLON ImportDeclList TopLevelDeclList .
   18 TopLevelDeclList: TopLevelDeclList . TopLevelDecl SCOLON

    FUNC   shift, and go to state 8
    VAR    shift, and go to state 10
    CONST  shift, and go to state 11
    TYPE   shift, and go to state 12

    $default  reduce using rule 4 (SourceFile)

    TopLevelDecl  go to state 51
    Declaration   go to state 17
    FunctionDecl  go to state 18
    MethodDecl    go to state 19
    VarDecl       go to state 20
    ConstDecl     go to state 21
    TypeDecl      go to state 22


State 50

    8 ImportDeclList: ImportDecl SCOLON .

    $default  reduce using rule 8 (ImportDeclList)


State 51

   18 TopLevelDeclList: TopLevelDeclList TopLevelDecl . SCOLON

    SCOLON  shift, and go to state 95


State 52

   19 TopLevelDeclList: TopLevelDecl SCOLON .

    $default  reduce using rule 19 (TopLevelDeclList)


State 53

   88 ParameterDecl: ELIPSIS . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 96
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 54

   81 Parameters: LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 81 (Parameters)


State 55

   82 Parameters: LEFTPARAN ParameterList . RIGHTPARAN
   83           | LEFTPARAN ParameterList . COMMA RIGHTPARAN
   85 ParameterList: ParameterList . COMMA ParameterDecl

    RIGHTPARAN  shift, and go to state 97
    COMMA       shift, and go to state 98


State 56

   84 ParameterList: ParameterDecl .

    $default  reduce using rule 84 (ParameterList)


State 57

   86 ParameterDecl: IdentifierList . Type
   87              | IdentifierList . ELIPSIS Type
   89 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    ELIPSIS     shift, and go to state 99
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    COMMA       shift, and go to state 74
    IDENTIFIER  shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 100
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 58

   42 FunctionDecl: FUNC FunctionName Signature . FunctionBody
   43             | FUNC FunctionName Signature .

    LEFTBRACE  shift, and go to state 101

    $default  reduce using rule 43 (FunctionDecl)

    Block         go to state 102
    FunctionBody  go to state 103


State 59

   77 Signature: Parameters .
   78          | Parameters . Result

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTPARAN   shift, and go to state 23
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 4

    $default  reduce using rule 77 (Signature)

    PackageName     go to state 75
    Result          go to state 104
    Parameters      go to state 105
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 106
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 60

   45 MethodDecl: FUNC Receiver IDENTIFIER . Signature
   46           | FUNC Receiver IDENTIFIER . Signature FunctionBody

    LEFTPARAN  shift, and go to state 23

    Signature   go to state 107
    Parameters  go to state 59


State 61

   10 ImportDecl: IMPORT LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 10 (ImportDecl)


State 62

    9 ImportDecl: IMPORT LEFTPARAN ImportSpecList . RIGHTPARAN
   12 ImportSpecList: ImportSpecList . ImportSpec SCOLON

    RIGHTPARAN          shift, and go to state 108
    DOT                 shift, and go to state 29
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    IDENTIFIER          shift, and go to state 4

    PackageName  go to state 32
    ImportSpec   go to state 109
    ImportPath   go to state 34
    String       go to state 35


State 63

   13 ImportSpecList: ImportSpec . SCOLON

    SCOLON  shift, and go to state 110


State 64

   15 ImportSpec: DOT ImportPath .

    $default  reduce using rule 15 (ImportSpec)


State 65

   14 ImportSpec: PackageName ImportPath .

    $default  reduce using rule 14 (ImportSpec)


State 66

   62 VarDecl: VAR LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 62 (VarDecl)


State 67

   61 VarDecl: VAR LEFTPARAN VarSpecList . RIGHTPARAN
   63 VarSpecList: VarSpecList . VarSpec SCOLON

    RIGHTPARAN  shift, and go to state 111
    IDENTIFIER  shift, and go to state 37

    VarSpec         go to state 112
    IdentifierList  go to state 39


State 68

   64 VarSpecList: VarSpec . SCOLON

    SCOLON  shift, and go to state 113


State 69

  196 StructType: STRUCT . LEFTBRACE FieldDeclList RIGHTBRACE
  197           | STRUCT . LEFTBRACE RIGHTBRACE

    LEFTBRACE  shift, and go to state 114


State 70

  195 MapType: MAP . LEFTSQUARE Type RIGHTSQUARE Type

    LEFTSQUARE  shift, and go to state 115


State 71

  202 PointerType: MUL . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 116
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 72

   67 VarSpec: IdentifierList EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 135
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    ExpressionList  go to state 139
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 73

   98 LiteralType: LEFTSQUARE . ELIPSIS RIGHTSQUARE Operand
  109 SliceType: LEFTSQUARE . RIGHTSQUARE Type
  203 ArrayType: LEFTSQUARE . Expression RIGHTSQUARE Type

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ELIPSIS             shift, and go to state 144
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    RIGHTSQUARE         shift, and go to state 145
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 146
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 74

   89 IdentifierList: IdentifierList COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 147


State 75

   91 QualifiedIdent: PackageName . DOT IDENTIFIER

    DOT  shift, and go to state 148


State 76

  105 OperandName: QualifiedIdent .

    $default  reduce using rule 105 (OperandName)


State 77

  100 Type: LiteralType .

    $default  reduce using rule 100 (Type)


State 78

   65 VarSpec: IdentifierList Type .
   66        | IdentifierList Type . EQ ExpressionList

    EQ  shift, and go to state 149

    $default  reduce using rule 65 (VarSpec)


State 79

  101 Type: OperandName .

    $default  reduce using rule 101 (Type)


State 80

   97 LiteralType: SliceType .

    $default  reduce using rule 97 (LiteralType)


State 81

   99 LiteralType: MapType .

    $default  reduce using rule 99 (LiteralType)


State 82

   94 LiteralType: StructType .

    $default  reduce using rule 94 (LiteralType)


State 83

   96 LiteralType: PointerType .

    $default  reduce using rule 96 (LiteralType)


State 84

   95 LiteralType: ArrayType .

    $default  reduce using rule 95 (LiteralType)


State 85

   70 ConstDecl: CONST LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 70 (ConstDecl)


State 86

   69 ConstDecl: CONST LEFTPARAN ConstSpecList . RIGHTPARAN
   71 ConstSpecList: ConstSpecList . ConstSpec SCOLON

    RIGHTPARAN  shift, and go to state 150
    IDENTIFIER  shift, and go to state 37

    ConstSpec       go to state 151
    IdentifierList  go to state 42


State 87

   72 ConstSpecList: ConstSpec . SCOLON

    SCOLON  shift, and go to state 152


State 88

   75 ConstSpec: IdentifierList EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 135
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    ExpressionList  go to state 153
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 89

   73 ConstSpec: IdentifierList Type .
   74          | IdentifierList Type . EQ ExpressionList

    EQ  shift, and go to state 154

    $default  reduce using rule 73 (ConstSpec)


State 90

  187 TypeDecl: TYPE LEFTPARAN TypeSpecList . RIGHTPARAN
  189 TypeSpecList: TypeSpecList . TypeSpec SCOLON

    RIGHTPARAN  shift, and go to state 155
    IDENTIFIER  shift, and go to state 44

    TypeSpec   go to state 156
    AliasDecl  go to state 46
    TypeDef    go to state 47


State 91

  190 TypeSpecList: TypeSpec . SCOLON

    SCOLON  shift, and go to state 157


State 92

  193 AliasDecl: IDENTIFIER EQ . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 158
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 93

  194 TypeDef: IDENTIFIER Type .

    $default  reduce using rule 194 (TypeDef)


State 94

    7 ImportDeclList: ImportDeclList ImportDecl SCOLON .

    $default  reduce using rule 7 (ImportDeclList)


State 95

   18 TopLevelDeclList: TopLevelDeclList TopLevelDecl SCOLON .

    $default  reduce using rule 18 (TopLevelDeclList)


State 96

   88 ParameterDecl: ELIPSIS Type .

    $default  reduce using rule 88 (ParameterDecl)


State 97

   82 Parameters: LEFTPARAN ParameterList RIGHTPARAN .

    $default  reduce using rule 82 (Parameters)


State 98

   83 Parameters: LEFTPARAN ParameterList COMMA . RIGHTPARAN
   85 ParameterList: ParameterList COMMA . ParameterDecl

    ELIPSIS     shift, and go to state 53
    RIGHTPARAN  shift, and go to state 159
    IDENTIFIER  shift, and go to state 37

    ParameterDecl   go to state 160
    IdentifierList  go to state 57


State 99

   87 ParameterDecl: IdentifierList ELIPSIS . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 161
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 100

   86 ParameterDecl: IdentifierList Type .

    $default  reduce using rule 86 (ParameterDecl)


State 101

   23 Block: LEFTBRACE . StatementList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    BREAK               shift, and go to state 162
    CONTINUE            shift, and go to state 163
    RETURN              shift, and go to state 164
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 165
    FOR                 shift, and go to state 166
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 167
    NEW                 shift, and go to state 121
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    GOTO                shift, and go to state 168
    FALLTHROUGH         shift, and go to state 169
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTBRACE           shift, and go to state 101
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 170

    $default  reduce using rule 54 (EmptyStmt)

    PackageName      go to state 75
    Block            go to state 171
    StatementList    go to state 172
    Statement        go to state 173
    Declaration      go to state 174
    LabeledStmt      go to state 175
    Label            go to state 176
    SimpleStmt       go to state 177
    EmptyStmt        go to state 178
    ExpressionStmt   go to state 179
    IncDecStmt       go to state 180
    Assignment       go to state 181
    ShortVarDecl     go to state 182
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 183
    QualifiedIdent   go to state 76
    CompositeLit     go to state 131
    LiteralType      go to state 132
    Operand          go to state 133
    OperandName      go to state 134
    SliceType        go to state 80
    ReturnStmt       go to state 184
    BreakStmt        go to state 185
    ContinueStmt     go to state 186
    GotoStmt         go to state 187
    SwitchStmt       go to state 188
    ExprSwitchStmt   go to state 189
    FallthroughStmt  go to state 190
    IfStmt           go to state 191
    ForStmt          go to state 192
    Expression       go to state 193
    UnaryExpr        go to state 136
    PrimaryExpr      go to state 137
    MakeExpr         go to state 138
    ExpressionList   go to state 194
    TypeDecl         go to state 22
    MapType          go to state 81
    StructType       go to state 82
    PointerType      go to state 83
    ArrayType        go to state 84
    Literal          go to state 140
    BasicLit         go to state 141
    String           go to state 142
    Unary_OP         go to state 143


State 102

   76 FunctionBody: Block .

    $default  reduce using rule 76 (FunctionBody)


State 103

   42 FunctionDecl: FUNC FunctionName Signature FunctionBody .

    $default  reduce using rule 42 (FunctionDecl)


State 104

   78 Signature: Parameters Result .

    $default  reduce using rule 78 (Signature)


State 105

   79 Result: Parameters .

    $default  reduce using rule 79 (Result)


State 106

   80 Result: Type .

    $default  reduce using rule 80 (Result)


State 107

   45 MethodDecl: FUNC Receiver IDENTIFIER Signature .
   46           | FUNC Receiver IDENTIFIER Signature . FunctionBody

    LEFTBRACE  shift, and go to state 101

    $default  reduce using rule 45 (MethodDecl)

    Block         go to state 102
    FunctionBody  go to state 195


State 108

    9 ImportDecl: IMPORT LEFTPARAN ImportSpecList RIGHTPARAN .

    $default  reduce using rule 9 (ImportDecl)


State 109

   12 ImportSpecList: ImportSpecList ImportSpec . SCOLON

    SCOLON  shift, and go to state 196


State 110

   13 ImportSpecList: ImportSpec SCOLON .

    $default  reduce using rule 13 (ImportSpecList)


State 111

   61 VarDecl: VAR LEFTPARAN VarSpecList RIGHTPARAN .

    $default  reduce using rule 61 (VarDecl)


State 112

   63 VarSpecList: VarSpecList VarSpec . SCOLON

    SCOLON  shift, and go to state 197


State 113

   64 VarSpecList: VarSpec SCOLON .

    $default  reduce using rule 64 (VarSpecList)


State 114

  196 StructType: STRUCT LEFTBRACE . FieldDeclList RIGHTBRACE
  197           | STRUCT LEFTBRACE . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 198
    IDENTIFIER  shift, and go to state 37

    IdentifierList  go to state 199
    FieldDeclList   go to state 200
    FieldDecl       go to state 201


State 115

  195 MapType: MAP LEFTSQUARE . Type RIGHTSQUARE Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 202
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 116

  202 PointerType: MUL Type .

    $default  reduce using rule 202 (PointerType)


State 117

  206 BasicLit: INTEGER_VAL .

    $default  reduce using rule 206 (BasicLit)


State 118

  207 BasicLit: FLOAT_VAL .

    $default  reduce using rule 207 (BasicLit)


State 119

  210 BasicLit: TRUE .

    $default  reduce using rule 210 (BasicLit)


State 120

  211 BasicLit: FALSE .

    $default  reduce using rule 211 (BasicLit)


State 121

  181 MakeExpr: NEW . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN  shift, and go to state 203


State 122

  178 MakeExpr: MAKE . LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN
  179         | MAKE . LEFTPARAN Type COMMA Expression RIGHTPARAN
  180         | MAKE . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN  shift, and go to state 204


State 123

  234 Unary_OP: ADD .

    $default  reduce using rule 234 (Unary_OP)


State 124

  235 Unary_OP: SUB .

    $default  reduce using rule 235 (Unary_OP)


State 125

  236 Unary_OP: NOT .

    $default  reduce using rule 236 (Unary_OP)


State 126

  237 Unary_OP: XOR .

    $default  reduce using rule 237 (Unary_OP)


State 127

  202 PointerType: MUL . Type
  238 Unary_OP: MUL .

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 4

    STRUCT      [reduce using rule 238 (Unary_OP)]
    MAP         [reduce using rule 238 (Unary_OP)]
    MUL         [reduce using rule 238 (Unary_OP)]
    LEFTSQUARE  [reduce using rule 238 (Unary_OP)]
    IDENTIFIER  [reduce using rule 238 (Unary_OP)]
    $default    reduce using rule 238 (Unary_OP)

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 116
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 128

  239 Unary_OP: AND .

    $default  reduce using rule 239 (Unary_OP)


State 129

  104 Operand: LEFTPARAN . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 205
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 130

  208 BasicLit: BYTE_VAL .

    $default  reduce using rule 208 (BasicLit)


State 131

  205 Literal: CompositeLit .

    $default  reduce using rule 205 (Literal)


State 132

   93 CompositeLit: LiteralType . LiteralValue

    LEFTBRACE  shift, and go to state 206

    LiteralValue  go to state 207


State 133

  159 PrimaryExpr: Operand .

    $default  reduce using rule 159 (PrimaryExpr)


State 134

  103 Operand: OperandName .
  165 PrimaryExpr: OperandName . StructLiteral

    LEFTBRACE  shift, and go to state 208

    LEFTBRACE  [reduce using rule 103 (Operand)]
    $default   reduce using rule 103 (Operand)

    StructLiteral  go to state 209


State 135

  156 Expression: Expression . Binary_OP Expression
  185 ExpressionList: Expression .
  186               | Expression . COMMA ExpressionList

    ANDNOT  shift, and go to state 210
    ADD     shift, and go to state 211
    SUB     shift, and go to state 212
    XOR     shift, and go to state 213
    MUL     shift, and go to state 214
    AND     shift, and go to state 215
    OR      shift, and go to state 216
    LOGOR   shift, and go to state 217
    LOGAND  shift, and go to state 218
    ISEQ    shift, and go to state 219
    NEQ     shift, and go to state 220
    LESSEQ  shift, and go to state 221
    GRTEQ   shift, and go to state 222
    GRT     shift, and go to state 223
    LESS    shift, and go to state 224
    MOD     shift, and go to state 225
    QUOT    shift, and go to state 226
    SHL     shift, and go to state 227
    SHR     shift, and go to state 228
    COMMA   shift, and go to state 229

    ANDNOT    [reduce using rule 185 (ExpressionList)]
    ADD       [reduce using rule 185 (ExpressionList)]
    SUB       [reduce using rule 185 (ExpressionList)]
    XOR       [reduce using rule 185 (ExpressionList)]
    MUL       [reduce using rule 185 (ExpressionList)]
    AND       [reduce using rule 185 (ExpressionList)]
    OR        [reduce using rule 185 (ExpressionList)]
    MOD       [reduce using rule 185 (ExpressionList)]
    QUOT      [reduce using rule 185 (ExpressionList)]
    SHL       [reduce using rule 185 (ExpressionList)]
    SHR       [reduce using rule 185 (ExpressionList)]
    $default  reduce using rule 185 (ExpressionList)

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 136

  155 Expression: UnaryExpr .

    $default  reduce using rule 155 (Expression)


State 137

  157 UnaryExpr: PrimaryExpr .
  161 PrimaryExpr: PrimaryExpr . Selector
  162            | PrimaryExpr . Index
  163            | PrimaryExpr . Slice
  164            | PrimaryExpr . Arguments
  166            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 234
    LEFTSQUARE  shift, and go to state 235
    DOT         shift, and go to state 236

    $default  reduce using rule 157 (UnaryExpr)

    Selector       go to state 237
    Index          go to state 238
    Slice          go to state 239
    TypeAssertion  go to state 240
    Arguments      go to state 241


State 138

  160 PrimaryExpr: MakeExpr .

    $default  reduce using rule 160 (PrimaryExpr)


State 139

   67 VarSpec: IdentifierList EQ ExpressionList .

    $default  reduce using rule 67 (VarSpec)


State 140

  102 Operand: Literal .

    $default  reduce using rule 102 (Operand)


State 141

  204 Literal: BasicLit .

    $default  reduce using rule 204 (Literal)


State 142

  209 BasicLit: String .

    $default  reduce using rule 209 (BasicLit)


State 143

  158 UnaryExpr: Unary_OP . PrimaryExpr

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    MUL                 shift, and go to state 71
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    PrimaryExpr     go to state 242
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142


State 144

   98 LiteralType: LEFTSQUARE ELIPSIS . RIGHTSQUARE Operand

    RIGHTSQUARE  shift, and go to state 243


State 145

  109 SliceType: LEFTSQUARE RIGHTSQUARE . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 244
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 146

  156 Expression: Expression . Binary_OP Expression
  203 ArrayType: LEFTSQUARE Expression . RIGHTSQUARE Type

    ANDNOT       shift, and go to state 210
    ADD          shift, and go to state 211
    SUB          shift, and go to state 212
    XOR          shift, and go to state 213
    MUL          shift, and go to state 214
    AND          shift, and go to state 215
    OR           shift, and go to state 216
    LOGOR        shift, and go to state 217
    LOGAND       shift, and go to state 218
    ISEQ         shift, and go to state 219
    NEQ          shift, and go to state 220
    LESSEQ       shift, and go to state 221
    GRTEQ        shift, and go to state 222
    GRT          shift, and go to state 223
    LESS         shift, and go to state 224
    MOD          shift, and go to state 225
    QUOT         shift, and go to state 226
    SHL          shift, and go to state 227
    SHR          shift, and go to state 228
    RIGHTSQUARE  shift, and go to state 245

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 147

   89 IdentifierList: IdentifierList COMMA IDENTIFIER .

    $default  reduce using rule 89 (IdentifierList)


State 148

   91 QualifiedIdent: PackageName DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 246


State 149

   66 VarSpec: IdentifierList Type EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 135
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    ExpressionList  go to state 247
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 150

   69 ConstDecl: CONST LEFTPARAN ConstSpecList RIGHTPARAN .

    $default  reduce using rule 69 (ConstDecl)


State 151

   71 ConstSpecList: ConstSpecList ConstSpec . SCOLON

    SCOLON  shift, and go to state 248


State 152

   72 ConstSpecList: ConstSpec SCOLON .

    $default  reduce using rule 72 (ConstSpecList)


State 153

   75 ConstSpec: IdentifierList EQ ExpressionList .

    $default  reduce using rule 75 (ConstSpec)


State 154

   74 ConstSpec: IdentifierList Type EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 135
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    ExpressionList  go to state 249
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 155

  187 TypeDecl: TYPE LEFTPARAN TypeSpecList RIGHTPARAN .

    $default  reduce using rule 187 (TypeDecl)


State 156

  189 TypeSpecList: TypeSpecList TypeSpec . SCOLON

    SCOLON  shift, and go to state 250


State 157

  190 TypeSpecList: TypeSpec SCOLON .

    $default  reduce using rule 190 (TypeSpecList)


State 158

  193 AliasDecl: IDENTIFIER EQ Type .

    $default  reduce using rule 193 (AliasDecl)


State 159

   83 Parameters: LEFTPARAN ParameterList COMMA RIGHTPARAN .

    $default  reduce using rule 83 (Parameters)


State 160

   85 ParameterList: ParameterList COMMA ParameterDecl .

    $default  reduce using rule 85 (ParameterList)


State 161

   87 ParameterDecl: IdentifierList ELIPSIS Type .

    $default  reduce using rule 87 (ParameterDecl)


State 162

  120 BreakStmt: BREAK .
  121          | BREAK . Label

    IDENTIFIER  shift, and go to state 251

    $default  reduce using rule 120 (BreakStmt)

    Label  go to state 252


State 163

  122 ContinueStmt: CONTINUE .
  123             | CONTINUE . Label

    IDENTIFIER  shift, and go to state 251

    $default  reduce using rule 122 (ContinueStmt)

    Label  go to state 253


State 164

  118 ReturnStmt: RETURN .
  119           | RETURN . ExpressionList

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    $default  reduce using rule 118 (ReturnStmt)

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 135
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    ExpressionList  go to state 254
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 165

  138 IfStmt: IF . Expression Block
  139       | IF . SimpleStmt SCOLON Expression Block
  140       | IF . Expression Block ELSE IfStmt
  141       | IF . Expression Block ELSE Block
  142       | IF . SimpleStmt SCOLON Expression Block ELSE IfStmt
  143       | IF . SimpleStmt SCOLON Expression Block ELSE Block

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 255

    $default  reduce using rule 54 (EmptyStmt)

    PackageName     go to state 75
    SimpleStmt      go to state 256
    EmptyStmt       go to state 178
    ExpressionStmt  go to state 179
    IncDecStmt      go to state 180
    Assignment      go to state 181
    ShortVarDecl    go to state 182
    IdentifierList  go to state 183
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 257
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    ExpressionList  go to state 194
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 166

  144 ForStmt: FOR . Block
  145        | FOR . ForClause Block
  146        | FOR . Condition Block
  147        | FOR . RangeClause Block

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    RANGE               shift, and go to state 258
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTBRACE           shift, and go to state 101
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 255

    $default  reduce using rule 54 (EmptyStmt)

    PackageName     go to state 75
    Block           go to state 259
    Condition       go to state 260
    SimpleStmt      go to state 261
    EmptyStmt       go to state 178
    ExpressionStmt  go to state 179
    IncDecStmt      go to state 180
    Assignment      go to state 181
    ShortVarDecl    go to state 182
    IdentifierList  go to state 262
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    ForClause       go to state 263
    InitStmt        go to state 264
    RangeClause     go to state 265
    Expression      go to state 266
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    ExpressionList  go to state 267
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 167

  126 ExprSwitchStmt: SWITCH . LEFTBRACE RIGHTBRACE
  127               | SWITCH . SimpleStmt SCOLON LEFTBRACE RIGHTBRACE
  128               | SWITCH . LEFTBRACE RIGHTBRACE Expression
  129               | SWITCH . SimpleStmt SCOLON LEFTBRACE RIGHTBRACE Expression
  130               | SWITCH . LEFTBRACE RIGHTBRACE ExprCaseClause
  131               | SWITCH . SimpleStmt SCOLON LEFTBRACE RIGHTBRACE ExprCaseClause
  132               | SWITCH . LEFTBRACE RIGHTBRACE Expression ExprCaseClause
  133               | SWITCH . SimpleStmt SCOLON LEFTBRACE RIGHTBRACE Expression ExprCaseClause

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTBRACE           shift, and go to state 268
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 255

    $default  reduce using rule 54 (EmptyStmt)

    PackageName     go to state 75
    SimpleStmt      go to state 269
    EmptyStmt       go to state 178
    ExpressionStmt  go to state 179
    IncDecStmt      go to state 180
    Assignment      go to state 181
    ShortVarDecl    go to state 182
    IdentifierList  go to state 183
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 193
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    ExpressionList  go to state 194
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 168

  124 GotoStmt: GOTO . Label

    IDENTIFIER  shift, and go to state 251

    Label  go to state 270


State 169

  137 FallthroughStmt: FALLTHROUGH .

    $default  reduce using rule 137 (FallthroughStmt)


State 170

    6 PackageName: IDENTIFIER .
   48 Label: IDENTIFIER .
   90 IdentifierList: IDENTIFIER .

    COLON     reduce using rule 48 (Label)
    DOT       reduce using rule 6 (PackageName)
    $default  reduce using rule 90 (IdentifierList)


State 171

   36 Statement: Block .

    $default  reduce using rule 36 (Statement)


State 172

   23 Block: LEFTBRACE StatementList . RIGHTBRACE
   25 StatementList: StatementList . Statement SCOLON

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    BREAK               shift, and go to state 162
    CONTINUE            shift, and go to state 163
    RETURN              shift, and go to state 164
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 165
    FOR                 shift, and go to state 166
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 167
    NEW                 shift, and go to state 121
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    GOTO                shift, and go to state 168
    FALLTHROUGH         shift, and go to state 169
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    RIGHTBRACE          shift, and go to state 271
    LEFTPARAN           shift, and go to state 129
    LEFTBRACE           shift, and go to state 101
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 170

    $default  reduce using rule 54 (EmptyStmt)

    PackageName      go to state 75
    Block            go to state 171
    Statement        go to state 272
    Declaration      go to state 174
    LabeledStmt      go to state 175
    Label            go to state 176
    SimpleStmt       go to state 177
    EmptyStmt        go to state 178
    ExpressionStmt   go to state 179
    IncDecStmt       go to state 180
    Assignment       go to state 181
    ShortVarDecl     go to state 182
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 183
    QualifiedIdent   go to state 76
    CompositeLit     go to state 131
    LiteralType      go to state 132
    Operand          go to state 133
    OperandName      go to state 134
    SliceType        go to state 80
    ReturnStmt       go to state 184
    BreakStmt        go to state 185
    ContinueStmt     go to state 186
    GotoStmt         go to state 187
    SwitchStmt       go to state 188
    ExprSwitchStmt   go to state 189
    FallthroughStmt  go to state 190
    IfStmt           go to state 191
    ForStmt          go to state 192
    Expression       go to state 193
    UnaryExpr        go to state 136
    PrimaryExpr      go to state 137
    MakeExpr         go to state 138
    ExpressionList   go to state 194
    TypeDecl         go to state 22
    MapType          go to state 81
    StructType       go to state 82
    PointerType      go to state 83
    ArrayType        go to state 84
    Literal          go to state 140
    BasicLit         go to state 141
    String           go to state 142
    Unary_OP         go to state 143


State 173

   26 StatementList: Statement . SCOLON

    SCOLON  shift, and go to state 273


State 174

   27 Statement: Declaration .

    $default  reduce using rule 27 (Statement)


State 175

   28 Statement: LabeledStmt .

    $default  reduce using rule 28 (Statement)


State 176

   47 LabeledStmt: Label . COLON Statement

    COLON  shift, and go to state 274


State 177

   29 Statement: SimpleStmt .

    $default  reduce using rule 29 (Statement)


State 178

   49 SimpleStmt: EmptyStmt .

    $default  reduce using rule 49 (SimpleStmt)


State 179

   50 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 50 (SimpleStmt)


State 180

   51 SimpleStmt: IncDecStmt .

    $default  reduce using rule 51 (SimpleStmt)


State 181

   52 SimpleStmt: Assignment .

    $default  reduce using rule 52 (SimpleStmt)


State 182

   53 SimpleStmt: ShortVarDecl .

    $default  reduce using rule 53 (SimpleStmt)


State 183

   59 ShortVarDecl: IdentifierList . INFER_EQ ExpressionList
   89 IdentifierList: IdentifierList . COMMA IDENTIFIER

    INFER_EQ  shift, and go to state 275
    COMMA     shift, and go to state 74


State 184

   30 Statement: ReturnStmt .

    $default  reduce using rule 30 (Statement)


State 185

   31 Statement: BreakStmt .

    $default  reduce using rule 31 (Statement)


State 186

   32 Statement: ContinueStmt .

    $default  reduce using rule 32 (Statement)


State 187

   33 Statement: GotoStmt .

    $default  reduce using rule 33 (Statement)


State 188

   34 Statement: SwitchStmt .

    $default  reduce using rule 34 (Statement)


State 189

  125 SwitchStmt: ExprSwitchStmt .

    $default  reduce using rule 125 (SwitchStmt)


State 190

   35 Statement: FallthroughStmt .

    $default  reduce using rule 35 (Statement)


State 191

   37 Statement: IfStmt .

    $default  reduce using rule 37 (Statement)


State 192

   38 Statement: ForStmt .

    $default  reduce using rule 38 (Statement)


State 193

   55 ExpressionStmt: Expression .
   56 IncDecStmt: Expression . PLUSPLUS
   57           | Expression . MINUSMINUS
  156 Expression: Expression . Binary_OP Expression
  185 ExpressionList: Expression .
  186               | Expression . COMMA ExpressionList

    PLUSPLUS    shift, and go to state 276
    MINUSMINUS  shift, and go to state 277
    ANDNOT      shift, and go to state 210
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    XOR         shift, and go to state 213
    MUL         shift, and go to state 214
    AND         shift, and go to state 215
    OR          shift, and go to state 216
    LOGOR       shift, and go to state 217
    LOGAND      shift, and go to state 218
    ISEQ        shift, and go to state 219
    NEQ         shift, and go to state 220
    LESSEQ      shift, and go to state 221
    GRTEQ       shift, and go to state 222
    GRT         shift, and go to state 223
    LESS        shift, and go to state 224
    MOD         shift, and go to state 225
    QUOT        shift, and go to state 226
    SHL         shift, and go to state 227
    SHR         shift, and go to state 228
    COMMA       shift, and go to state 229

    ANDNOT    [reduce using rule 185 (ExpressionList)]
    ADD       [reduce using rule 185 (ExpressionList)]
    SUB       [reduce using rule 185 (ExpressionList)]
    XOR       [reduce using rule 185 (ExpressionList)]
    MUL       [reduce using rule 185 (ExpressionList)]
    AND       [reduce using rule 185 (ExpressionList)]
    OR        [reduce using rule 185 (ExpressionList)]
    MOD       [reduce using rule 185 (ExpressionList)]
    QUOT      [reduce using rule 185 (ExpressionList)]
    SHL       [reduce using rule 185 (ExpressionList)]
    SHR       [reduce using rule 185 (ExpressionList)]
    EQ        reduce using rule 185 (ExpressionList)
    $default  reduce using rule 55 (ExpressionStmt)

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 194

   58 Assignment: ExpressionList . Assign_OP ExpressionList

    ANDNOT  shift, and go to state 210
    ADD     shift, and go to state 211
    SUB     shift, and go to state 212
    XOR     shift, and go to state 213
    MUL     shift, and go to state 214
    AND     shift, and go to state 215
    OR      shift, and go to state 216
    MOD     shift, and go to state 225
    QUOT    shift, and go to state 226
    SHL     shift, and go to state 227
    SHR     shift, and go to state 228
    EQ      shift, and go to state 278

    Assign_OP  go to state 279
    Add_OP     go to state 280
    Mul_OP     go to state 281


State 195

   46 MethodDecl: FUNC Receiver IDENTIFIER Signature FunctionBody .

    $default  reduce using rule 46 (MethodDecl)


State 196

   12 ImportSpecList: ImportSpecList ImportSpec SCOLON .

    $default  reduce using rule 12 (ImportSpecList)


State 197

   63 VarSpecList: VarSpecList VarSpec SCOLON .

    $default  reduce using rule 63 (VarSpecList)


State 198

  197 StructType: STRUCT LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 197 (StructType)


State 199

   89 IdentifierList: IdentifierList . COMMA IDENTIFIER
  200 FieldDecl: IdentifierList . Type String
  201          | IdentifierList . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    COMMA       shift, and go to state 74
    IDENTIFIER  shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 282
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 200

  196 StructType: STRUCT LEFTBRACE FieldDeclList . RIGHTBRACE
  199 FieldDeclList: FieldDeclList . FieldDecl SCOLON

    RIGHTBRACE  shift, and go to state 283
    IDENTIFIER  shift, and go to state 37

    IdentifierList  go to state 199
    FieldDecl       go to state 284


State 201

  198 FieldDeclList: FieldDecl . SCOLON

    SCOLON  shift, and go to state 285


State 202

  195 MapType: MAP LEFTSQUARE Type . RIGHTSQUARE Type

    RIGHTSQUARE  shift, and go to state 286


State 203

  181 MakeExpr: NEW LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 287
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 204

  178 MakeExpr: MAKE LEFTPARAN . Type COMMA Expression COMMA Expression RIGHTPARAN
  179         | MAKE LEFTPARAN . Type COMMA Expression RIGHTPARAN
  180         | MAKE LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 288
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 205

  104 Operand: LEFTPARAN Expression . RIGHTPARAN
  156 Expression: Expression . Binary_OP Expression

    ANDNOT      shift, and go to state 210
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    XOR         shift, and go to state 213
    MUL         shift, and go to state 214
    AND         shift, and go to state 215
    OR          shift, and go to state 216
    LOGOR       shift, and go to state 217
    LOGAND      shift, and go to state 218
    ISEQ        shift, and go to state 219
    NEQ         shift, and go to state 220
    LESSEQ      shift, and go to state 221
    GRTEQ       shift, and go to state 222
    GRT         shift, and go to state 223
    LESS        shift, and go to state 224
    MOD         shift, and go to state 225
    QUOT        shift, and go to state 226
    SHL         shift, and go to state 227
    SHR         shift, and go to state 228
    RIGHTPARAN  shift, and go to state 289

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 206

  106 LiteralValue: LEFTBRACE . RIGHTBRACE
  107             | LEFTBRACE . ElementList RIGHTBRACE
  108             | LEFTBRACE . ElementList COMMA RIGHTBRACE

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    RIGHTBRACE          shift, and go to state 290
    LEFTPARAN           shift, and go to state 129
    LEFTBRACE           shift, and go to state 206
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    LiteralValue    go to state 291
    SliceType       go to state 80
    ElementList     go to state 292
    KeyedElement    go to state 293
    Key             go to state 294
    Element         go to state 295
    Expression      go to state 296
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 207

   93 CompositeLit: LiteralType LiteralValue .

    $default  reduce using rule 93 (CompositeLit)


State 208

  167 StructLiteral: LEFTBRACE . KeyValueList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 297
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    KeyValueList    go to state 298
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 209

  165 PrimaryExpr: OperandName StructLiteral .

    $default  reduce using rule 165 (PrimaryExpr)


State 210

  233 Mul_OP: ANDNOT .

    $default  reduce using rule 233 (Mul_OP)


State 211

  217 Add_OP: ADD .

    $default  reduce using rule 217 (Add_OP)


State 212

  218 Add_OP: SUB .

    $default  reduce using rule 218 (Add_OP)


State 213

  220 Add_OP: XOR .

    $default  reduce using rule 220 (Add_OP)


State 214

  227 Mul_OP: MUL .

    $default  reduce using rule 227 (Mul_OP)


State 215

  232 Mul_OP: AND .

    $default  reduce using rule 232 (Mul_OP)


State 216

  219 Add_OP: OR .

    $default  reduce using rule 219 (Add_OP)


State 217

  241 Binary_OP: LOGOR .

    $default  reduce using rule 241 (Binary_OP)


State 218

  240 Binary_OP: LOGAND .

    $default  reduce using rule 240 (Binary_OP)


State 219

  221 Rel_OP: ISEQ .

    $default  reduce using rule 221 (Rel_OP)


State 220

  222 Rel_OP: NEQ .

    $default  reduce using rule 222 (Rel_OP)


State 221

  223 Rel_OP: LESSEQ .

    $default  reduce using rule 223 (Rel_OP)


State 222

  224 Rel_OP: GRTEQ .

    $default  reduce using rule 224 (Rel_OP)


State 223

  225 Rel_OP: GRT .

    $default  reduce using rule 225 (Rel_OP)


State 224

  226 Rel_OP: LESS .

    $default  reduce using rule 226 (Rel_OP)


State 225

  229 Mul_OP: MOD .

    $default  reduce using rule 229 (Mul_OP)


State 226

  228 Mul_OP: QUOT .

    $default  reduce using rule 228 (Mul_OP)


State 227

  230 Mul_OP: SHL .

    $default  reduce using rule 230 (Mul_OP)


State 228

  231 Mul_OP: SHR .

    $default  reduce using rule 231 (Mul_OP)


State 229

  186 ExpressionList: Expression COMMA . ExpressionList

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 135
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    ExpressionList  go to state 299
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 230

  243 Binary_OP: Add_OP .

    $default  reduce using rule 243 (Binary_OP)


State 231

  242 Binary_OP: Rel_OP .

    $default  reduce using rule 242 (Binary_OP)


State 232

  244 Binary_OP: Mul_OP .

    $default  reduce using rule 244 (Binary_OP)


State 233

  156 Expression: Expression Binary_OP . Expression

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 300
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 234

  183 Arguments: LEFTPARAN . RIGHTPARAN
  184          | LEFTPARAN . ExpressionList ELIPSIS RIGHTPARAN

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    RIGHTPARAN          shift, and go to state 301
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 135
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    ExpressionList  go to state 302
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 235

  171 Index: LEFTSQUARE . Expression RIGHTSQUARE
  172 Slice: LEFTSQUARE . COLON Expression RIGHTSQUARE
  173      | LEFTSQUARE . COLON RIGHTSQUARE
  174      | LEFTSQUARE . Expression COLON RIGHTSQUARE
  175      | LEFTSQUARE . Expression COLON Expression RIGHTSQUARE
  176      | LEFTSQUARE . COLON Expression COLON Expression RIGHTSQUARE
  177      | LEFTSQUARE . Expression COLON Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    COLON               shift, and go to state 303
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 304
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 236

  170 Selector: DOT . IDENTIFIER
  182 TypeAssertion: DOT . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN   shift, and go to state 305
    IDENTIFIER  shift, and go to state 306


State 237

  161 PrimaryExpr: PrimaryExpr Selector .

    $default  reduce using rule 161 (PrimaryExpr)


State 238

  162 PrimaryExpr: PrimaryExpr Index .

    $default  reduce using rule 162 (PrimaryExpr)


State 239

  163 PrimaryExpr: PrimaryExpr Slice .

    $default  reduce using rule 163 (PrimaryExpr)


State 240

  166 PrimaryExpr: PrimaryExpr TypeAssertion .

    $default  reduce using rule 166 (PrimaryExpr)


State 241

  164 PrimaryExpr: PrimaryExpr Arguments .

    $default  reduce using rule 164 (PrimaryExpr)


State 242

  158 UnaryExpr: Unary_OP PrimaryExpr .
  161 PrimaryExpr: PrimaryExpr . Selector
  162            | PrimaryExpr . Index
  163            | PrimaryExpr . Slice
  164            | PrimaryExpr . Arguments
  166            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 234
    LEFTSQUARE  shift, and go to state 235
    DOT         shift, and go to state 236

    $default  reduce using rule 158 (UnaryExpr)

    Selector       go to state 237
    Index          go to state 238
    Slice          go to state 239
    TypeAssertion  go to state 240
    Arguments      go to state 241


State 243

   98 LiteralType: LEFTSQUARE ELIPSIS RIGHTSQUARE . Operand

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    MAP                 shift, and go to state 70
    MUL                 shift, and go to state 71
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 307
    OperandName     go to state 308
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142


State 244

  109 SliceType: LEFTSQUARE RIGHTSQUARE Type .

    $default  reduce using rule 109 (SliceType)


State 245

  203 ArrayType: LEFTSQUARE Expression RIGHTSQUARE . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 309
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 246

   91 QualifiedIdent: PackageName DOT IDENTIFIER .

    $default  reduce using rule 91 (QualifiedIdent)


State 247

   66 VarSpec: IdentifierList Type EQ ExpressionList .

    $default  reduce using rule 66 (VarSpec)


State 248

   71 ConstSpecList: ConstSpecList ConstSpec SCOLON .

    $default  reduce using rule 71 (ConstSpecList)


State 249

   74 ConstSpec: IdentifierList Type EQ ExpressionList .

    $default  reduce using rule 74 (ConstSpec)


State 250

  189 TypeSpecList: TypeSpecList TypeSpec SCOLON .

    $default  reduce using rule 189 (TypeSpecList)


State 251

   48 Label: IDENTIFIER .

    $default  reduce using rule 48 (Label)


State 252

  121 BreakStmt: BREAK Label .

    $default  reduce using rule 121 (BreakStmt)


State 253

  123 ContinueStmt: CONTINUE Label .

    $default  reduce using rule 123 (ContinueStmt)


State 254

  119 ReturnStmt: RETURN ExpressionList .

    $default  reduce using rule 119 (ReturnStmt)


State 255

    6 PackageName: IDENTIFIER .
   90 IdentifierList: IDENTIFIER .

    DOT       reduce using rule 6 (PackageName)
    $default  reduce using rule 90 (IdentifierList)


State 256

  139 IfStmt: IF SimpleStmt . SCOLON Expression Block
  142       | IF SimpleStmt . SCOLON Expression Block ELSE IfStmt
  143       | IF SimpleStmt . SCOLON Expression Block ELSE Block

    SCOLON  shift, and go to state 310


State 257

   55 ExpressionStmt: Expression .
   56 IncDecStmt: Expression . PLUSPLUS
   57           | Expression . MINUSMINUS
  138 IfStmt: IF Expression . Block
  140       | IF Expression . Block ELSE IfStmt
  141       | IF Expression . Block ELSE Block
  156 Expression: Expression . Binary_OP Expression
  185 ExpressionList: Expression .
  186               | Expression . COMMA ExpressionList

    PLUSPLUS    shift, and go to state 276
    MINUSMINUS  shift, and go to state 277
    ANDNOT      shift, and go to state 210
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    XOR         shift, and go to state 213
    MUL         shift, and go to state 214
    AND         shift, and go to state 215
    OR          shift, and go to state 216
    LOGOR       shift, and go to state 217
    LOGAND      shift, and go to state 218
    ISEQ        shift, and go to state 219
    NEQ         shift, and go to state 220
    LESSEQ      shift, and go to state 221
    GRTEQ       shift, and go to state 222
    GRT         shift, and go to state 223
    LESS        shift, and go to state 224
    MOD         shift, and go to state 225
    QUOT        shift, and go to state 226
    SHL         shift, and go to state 227
    SHR         shift, and go to state 228
    LEFTBRACE   shift, and go to state 101
    COMMA       shift, and go to state 229

    ANDNOT    [reduce using rule 185 (ExpressionList)]
    ADD       [reduce using rule 185 (ExpressionList)]
    SUB       [reduce using rule 185 (ExpressionList)]
    XOR       [reduce using rule 185 (ExpressionList)]
    MUL       [reduce using rule 185 (ExpressionList)]
    AND       [reduce using rule 185 (ExpressionList)]
    OR        [reduce using rule 185 (ExpressionList)]
    MOD       [reduce using rule 185 (ExpressionList)]
    QUOT      [reduce using rule 185 (ExpressionList)]
    SHL       [reduce using rule 185 (ExpressionList)]
    SHR       [reduce using rule 185 (ExpressionList)]
    EQ        reduce using rule 185 (ExpressionList)
    $default  reduce using rule 55 (ExpressionStmt)

    Block      go to state 311
    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 258

  152 RangeClause: RANGE . Expression

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 312
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 259

  144 ForStmt: FOR Block .

    $default  reduce using rule 144 (ForStmt)


State 260

  146 ForStmt: FOR Condition . Block

    LEFTBRACE  shift, and go to state 101

    Block  go to state 313


State 261

  150 InitStmt: SimpleStmt .

    $default  reduce using rule 150 (InitStmt)


State 262

   59 ShortVarDecl: IdentifierList . INFER_EQ ExpressionList
   89 IdentifierList: IdentifierList . COMMA IDENTIFIER
  153 RangeClause: IdentifierList . INFER_EQ RANGE Expression

    INFER_EQ  shift, and go to state 314
    COMMA     shift, and go to state 74


State 263

  145 ForStmt: FOR ForClause . Block

    LEFTBRACE  shift, and go to state 101

    Block  go to state 315


State 264

  148 ForClause: InitStmt . SCOLON SCOLON PostStmt
  149          | InitStmt . SCOLON Condition SCOLON PostStmt

    SCOLON  shift, and go to state 316


State 265

  147 ForStmt: FOR RangeClause . Block

    LEFTBRACE  shift, and go to state 101

    Block  go to state 317


State 266

   24 Condition: Expression .
   55 ExpressionStmt: Expression .
   56 IncDecStmt: Expression . PLUSPLUS
   57           | Expression . MINUSMINUS
  156 Expression: Expression . Binary_OP Expression
  185 ExpressionList: Expression .
  186               | Expression . COMMA ExpressionList

    PLUSPLUS    shift, and go to state 276
    MINUSMINUS  shift, and go to state 277
    ANDNOT      shift, and go to state 210
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    XOR         shift, and go to state 213
    MUL         shift, and go to state 214
    AND         shift, and go to state 215
    OR          shift, and go to state 216
    LOGOR       shift, and go to state 217
    LOGAND      shift, and go to state 218
    ISEQ        shift, and go to state 219
    NEQ         shift, and go to state 220
    LESSEQ      shift, and go to state 221
    GRTEQ       shift, and go to state 222
    GRT         shift, and go to state 223
    LESS        shift, and go to state 224
    MOD         shift, and go to state 225
    QUOT        shift, and go to state 226
    SHL         shift, and go to state 227
    SHR         shift, and go to state 228
    COMMA       shift, and go to state 229

    SCOLON    reduce using rule 55 (ExpressionStmt)
    ANDNOT    [reduce using rule 185 (ExpressionList)]
    ADD       [reduce using rule 185 (ExpressionList)]
    SUB       [reduce using rule 185 (ExpressionList)]
    XOR       [reduce using rule 185 (ExpressionList)]
    MUL       [reduce using rule 185 (ExpressionList)]
    AND       [reduce using rule 185 (ExpressionList)]
    OR        [reduce using rule 185 (ExpressionList)]
    MOD       [reduce using rule 185 (ExpressionList)]
    QUOT      [reduce using rule 185 (ExpressionList)]
    SHL       [reduce using rule 185 (ExpressionList)]
    SHR       [reduce using rule 185 (ExpressionList)]
    EQ        reduce using rule 185 (ExpressionList)
    $default  reduce using rule 24 (Condition)

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 267

   58 Assignment: ExpressionList . Assign_OP ExpressionList
  154 RangeClause: ExpressionList . EQ RANGE Expression

    ANDNOT  shift, and go to state 210
    ADD     shift, and go to state 211
    SUB     shift, and go to state 212
    XOR     shift, and go to state 213
    MUL     shift, and go to state 214
    AND     shift, and go to state 215
    OR      shift, and go to state 216
    MOD     shift, and go to state 225
    QUOT    shift, and go to state 226
    SHL     shift, and go to state 227
    SHR     shift, and go to state 228
    EQ      shift, and go to state 318

    Assign_OP  go to state 279
    Add_OP     go to state 280
    Mul_OP     go to state 281


State 268

  126 ExprSwitchStmt: SWITCH LEFTBRACE . RIGHTBRACE
  128               | SWITCH LEFTBRACE . RIGHTBRACE Expression
  130               | SWITCH LEFTBRACE . RIGHTBRACE ExprCaseClause
  132               | SWITCH LEFTBRACE . RIGHTBRACE Expression ExprCaseClause

    RIGHTBRACE  shift, and go to state 319


State 269

  127 ExprSwitchStmt: SWITCH SimpleStmt . SCOLON LEFTBRACE RIGHTBRACE
  129               | SWITCH SimpleStmt . SCOLON LEFTBRACE RIGHTBRACE Expression
  131               | SWITCH SimpleStmt . SCOLON LEFTBRACE RIGHTBRACE ExprCaseClause
  133               | SWITCH SimpleStmt . SCOLON LEFTBRACE RIGHTBRACE Expression ExprCaseClause

    SCOLON  shift, and go to state 320


State 270

  124 GotoStmt: GOTO Label .

    $default  reduce using rule 124 (GotoStmt)


State 271

   23 Block: LEFTBRACE StatementList RIGHTBRACE .

    $default  reduce using rule 23 (Block)


State 272

   25 StatementList: StatementList Statement . SCOLON

    SCOLON  shift, and go to state 321


State 273

   26 StatementList: Statement SCOLON .

    $default  reduce using rule 26 (StatementList)


State 274

   47 LabeledStmt: Label COLON . Statement

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    BREAK               shift, and go to state 162
    CONTINUE            shift, and go to state 163
    RETURN              shift, and go to state 164
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 165
    FOR                 shift, and go to state 166
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 167
    NEW                 shift, and go to state 121
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    GOTO                shift, and go to state 168
    FALLTHROUGH         shift, and go to state 169
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTBRACE           shift, and go to state 101
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 170

    $default  reduce using rule 54 (EmptyStmt)

    PackageName      go to state 75
    Block            go to state 171
    Statement        go to state 322
    Declaration      go to state 174
    LabeledStmt      go to state 175
    Label            go to state 176
    SimpleStmt       go to state 177
    EmptyStmt        go to state 178
    ExpressionStmt   go to state 179
    IncDecStmt       go to state 180
    Assignment       go to state 181
    ShortVarDecl     go to state 182
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 183
    QualifiedIdent   go to state 76
    CompositeLit     go to state 131
    LiteralType      go to state 132
    Operand          go to state 133
    OperandName      go to state 134
    SliceType        go to state 80
    ReturnStmt       go to state 184
    BreakStmt        go to state 185
    ContinueStmt     go to state 186
    GotoStmt         go to state 187
    SwitchStmt       go to state 188
    ExprSwitchStmt   go to state 189
    FallthroughStmt  go to state 190
    IfStmt           go to state 191
    ForStmt          go to state 192
    Expression       go to state 193
    UnaryExpr        go to state 136
    PrimaryExpr      go to state 137
    MakeExpr         go to state 138
    ExpressionList   go to state 194
    TypeDecl         go to state 22
    MapType          go to state 81
    StructType       go to state 82
    PointerType      go to state 83
    ArrayType        go to state 84
    Literal          go to state 140
    BasicLit         go to state 141
    String           go to state 142
    Unary_OP         go to state 143


State 275

   59 ShortVarDecl: IdentifierList INFER_EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 135
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    ExpressionList  go to state 323
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 276

   56 IncDecStmt: Expression PLUSPLUS .

    $default  reduce using rule 56 (IncDecStmt)


State 277

   57 IncDecStmt: Expression MINUSMINUS .

    $default  reduce using rule 57 (IncDecStmt)


State 278

  214 Assign_OP: EQ .

    $default  reduce using rule 214 (Assign_OP)


State 279

   58 Assignment: ExpressionList Assign_OP . ExpressionList

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 135
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    ExpressionList  go to state 324
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 280

  215 Assign_OP: Add_OP . EQ

    EQ  shift, and go to state 325


State 281

  216 Assign_OP: Mul_OP . EQ

    EQ  shift, and go to state 326


State 282

  200 FieldDecl: IdentifierList Type . String
  201          | IdentifierList Type .

    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31

    $default  reduce using rule 201 (FieldDecl)

    String  go to state 327


State 283

  196 StructType: STRUCT LEFTBRACE FieldDeclList RIGHTBRACE .

    $default  reduce using rule 196 (StructType)


State 284

  199 FieldDeclList: FieldDeclList FieldDecl . SCOLON

    SCOLON  shift, and go to state 328


State 285

  198 FieldDeclList: FieldDecl SCOLON .

    $default  reduce using rule 198 (FieldDeclList)


State 286

  195 MapType: MAP LEFTSQUARE Type RIGHTSQUARE . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 329
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 287

  181 MakeExpr: NEW LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 330


State 288

  178 MakeExpr: MAKE LEFTPARAN Type . COMMA Expression COMMA Expression RIGHTPARAN
  179         | MAKE LEFTPARAN Type . COMMA Expression RIGHTPARAN
  180         | MAKE LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 331
    COMMA       shift, and go to state 332


State 289

  104 Operand: LEFTPARAN Expression RIGHTPARAN .

    $default  reduce using rule 104 (Operand)


State 290

  106 LiteralValue: LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 106 (LiteralValue)


State 291

  115 Key: LiteralValue .
  117 Element: LiteralValue .

    COLON     reduce using rule 115 (Key)
    $default  reduce using rule 117 (Element)


State 292

  107 LiteralValue: LEFTBRACE ElementList . RIGHTBRACE
  108             | LEFTBRACE ElementList . COMMA RIGHTBRACE
  111 ElementList: ElementList . COMMA KeyedElement

    RIGHTBRACE  shift, and go to state 333
    COMMA       shift, and go to state 334


State 293

  110 ElementList: KeyedElement .

    $default  reduce using rule 110 (ElementList)


State 294

  113 KeyedElement: Key . COLON Element

    COLON  shift, and go to state 335


State 295

  112 KeyedElement: Element .

    $default  reduce using rule 112 (KeyedElement)


State 296

  114 Key: Expression .
  116 Element: Expression .
  156 Expression: Expression . Binary_OP Expression

    ANDNOT  shift, and go to state 210
    ADD     shift, and go to state 211
    SUB     shift, and go to state 212
    XOR     shift, and go to state 213
    MUL     shift, and go to state 214
    AND     shift, and go to state 215
    OR      shift, and go to state 216
    LOGOR   shift, and go to state 217
    LOGAND  shift, and go to state 218
    ISEQ    shift, and go to state 219
    NEQ     shift, and go to state 220
    LESSEQ  shift, and go to state 221
    GRTEQ   shift, and go to state 222
    GRT     shift, and go to state 223
    LESS    shift, and go to state 224
    MOD     shift, and go to state 225
    QUOT    shift, and go to state 226
    SHL     shift, and go to state 227
    SHR     shift, and go to state 228

    COLON     reduce using rule 114 (Key)
    $default  reduce using rule 116 (Element)

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 297

  156 Expression: Expression . Binary_OP Expression
  168 KeyValueList: Expression . COLON Expression
  169             | Expression . COLON Expression COMMA KeyValueList

    ANDNOT  shift, and go to state 210
    ADD     shift, and go to state 211
    SUB     shift, and go to state 212
    XOR     shift, and go to state 213
    MUL     shift, and go to state 214
    AND     shift, and go to state 215
    OR      shift, and go to state 216
    LOGOR   shift, and go to state 217
    LOGAND  shift, and go to state 218
    ISEQ    shift, and go to state 219
    NEQ     shift, and go to state 220
    LESSEQ  shift, and go to state 221
    GRTEQ   shift, and go to state 222
    GRT     shift, and go to state 223
    LESS    shift, and go to state 224
    MOD     shift, and go to state 225
    QUOT    shift, and go to state 226
    SHL     shift, and go to state 227
    SHR     shift, and go to state 228
    COLON   shift, and go to state 336

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 298

  167 StructLiteral: LEFTBRACE KeyValueList . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 337


State 299

  186 ExpressionList: Expression COMMA ExpressionList .

    $default  reduce using rule 186 (ExpressionList)


State 300

  156 Expression: Expression . Binary_OP Expression
  156           | Expression Binary_OP Expression .

    ANDNOT  shift, and go to state 210
    ADD     shift, and go to state 211
    SUB     shift, and go to state 212
    XOR     shift, and go to state 213
    MUL     shift, and go to state 214
    AND     shift, and go to state 215
    OR      shift, and go to state 216
    LOGOR   shift, and go to state 217
    LOGAND  shift, and go to state 218
    ISEQ    shift, and go to state 219
    NEQ     shift, and go to state 220
    LESSEQ  shift, and go to state 221
    GRTEQ   shift, and go to state 222
    GRT     shift, and go to state 223
    LESS    shift, and go to state 224
    MOD     shift, and go to state 225
    QUOT    shift, and go to state 226
    SHL     shift, and go to state 227
    SHR     shift, and go to state 228

    ANDNOT    [reduce using rule 156 (Expression)]
    ADD       [reduce using rule 156 (Expression)]
    SUB       [reduce using rule 156 (Expression)]
    XOR       [reduce using rule 156 (Expression)]
    MUL       [reduce using rule 156 (Expression)]
    AND       [reduce using rule 156 (Expression)]
    OR        [reduce using rule 156 (Expression)]
    LOGOR     [reduce using rule 156 (Expression)]
    LOGAND    [reduce using rule 156 (Expression)]
    ISEQ      [reduce using rule 156 (Expression)]
    NEQ       [reduce using rule 156 (Expression)]
    LESSEQ    [reduce using rule 156 (Expression)]
    GRTEQ     [reduce using rule 156 (Expression)]
    GRT       [reduce using rule 156 (Expression)]
    LESS      [reduce using rule 156 (Expression)]
    MOD       [reduce using rule 156 (Expression)]
    QUOT      [reduce using rule 156 (Expression)]
    SHL       [reduce using rule 156 (Expression)]
    SHR       [reduce using rule 156 (Expression)]
    $default  reduce using rule 156 (Expression)

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 301

  183 Arguments: LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 183 (Arguments)


State 302

  184 Arguments: LEFTPARAN ExpressionList . ELIPSIS RIGHTPARAN

    ELIPSIS  shift, and go to state 338


State 303

  172 Slice: LEFTSQUARE COLON . Expression RIGHTSQUARE
  173      | LEFTSQUARE COLON . RIGHTSQUARE
  176      | LEFTSQUARE COLON . Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    RIGHTSQUARE         shift, and go to state 339
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 340
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 304

  156 Expression: Expression . Binary_OP Expression
  171 Index: LEFTSQUARE Expression . RIGHTSQUARE
  174 Slice: LEFTSQUARE Expression . COLON RIGHTSQUARE
  175      | LEFTSQUARE Expression . COLON Expression RIGHTSQUARE
  177      | LEFTSQUARE Expression . COLON Expression COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 210
    ADD          shift, and go to state 211
    SUB          shift, and go to state 212
    XOR          shift, and go to state 213
    MUL          shift, and go to state 214
    AND          shift, and go to state 215
    OR           shift, and go to state 216
    LOGOR        shift, and go to state 217
    LOGAND       shift, and go to state 218
    ISEQ         shift, and go to state 219
    NEQ          shift, and go to state 220
    LESSEQ       shift, and go to state 221
    GRTEQ        shift, and go to state 222
    GRT          shift, and go to state 223
    LESS         shift, and go to state 224
    MOD          shift, and go to state 225
    QUOT         shift, and go to state 226
    SHL          shift, and go to state 227
    SHR          shift, and go to state 228
    RIGHTSQUARE  shift, and go to state 341
    COLON        shift, and go to state 342

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 305

  182 TypeAssertion: DOT LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    LiteralType     go to state 77
    Type            go to state 343
    OperandName     go to state 79
    SliceType       go to state 80
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84


State 306

  170 Selector: DOT IDENTIFIER .

    $default  reduce using rule 170 (Selector)


State 307

   98 LiteralType: LEFTSQUARE ELIPSIS RIGHTSQUARE Operand .

    $default  reduce using rule 98 (LiteralType)


State 308

  103 Operand: OperandName .

    $default  reduce using rule 103 (Operand)


State 309

  203 ArrayType: LEFTSQUARE Expression RIGHTSQUARE Type .

    $default  reduce using rule 203 (ArrayType)


State 310

  139 IfStmt: IF SimpleStmt SCOLON . Expression Block
  142       | IF SimpleStmt SCOLON . Expression Block ELSE IfStmt
  143       | IF SimpleStmt SCOLON . Expression Block ELSE Block

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 344
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 311

  138 IfStmt: IF Expression Block .
  140       | IF Expression Block . ELSE IfStmt
  141       | IF Expression Block . ELSE Block

    ELSE  shift, and go to state 345

    $default  reduce using rule 138 (IfStmt)


State 312

  152 RangeClause: RANGE Expression .
  156 Expression: Expression . Binary_OP Expression

    ANDNOT  shift, and go to state 210
    ADD     shift, and go to state 211
    SUB     shift, and go to state 212
    XOR     shift, and go to state 213
    MUL     shift, and go to state 214
    AND     shift, and go to state 215
    OR      shift, and go to state 216
    LOGOR   shift, and go to state 217
    LOGAND  shift, and go to state 218
    ISEQ    shift, and go to state 219
    NEQ     shift, and go to state 220
    LESSEQ  shift, and go to state 221
    GRTEQ   shift, and go to state 222
    GRT     shift, and go to state 223
    LESS    shift, and go to state 224
    MOD     shift, and go to state 225
    QUOT    shift, and go to state 226
    SHL     shift, and go to state 227
    SHR     shift, and go to state 228

    $default  reduce using rule 152 (RangeClause)

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 313

  146 ForStmt: FOR Condition Block .

    $default  reduce using rule 146 (ForStmt)


State 314

   59 ShortVarDecl: IdentifierList INFER_EQ . ExpressionList
  153 RangeClause: IdentifierList INFER_EQ . RANGE Expression

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    RANGE               shift, and go to state 346
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 135
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    ExpressionList  go to state 323
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 315

  145 ForStmt: FOR ForClause Block .

    $default  reduce using rule 145 (ForStmt)


State 316

  148 ForClause: InitStmt SCOLON . SCOLON PostStmt
  149          | InitStmt SCOLON . Condition SCOLON PostStmt

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    SCOLON              shift, and go to state 347
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    Condition       go to state 348
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 349
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 317

  147 ForStmt: FOR RangeClause Block .

    $default  reduce using rule 147 (ForStmt)


State 318

  154 RangeClause: ExpressionList EQ . RANGE Expression
  214 Assign_OP: EQ .

    RANGE  shift, and go to state 350

    $default  reduce using rule 214 (Assign_OP)


State 319

  126 ExprSwitchStmt: SWITCH LEFTBRACE RIGHTBRACE .
  128               | SWITCH LEFTBRACE RIGHTBRACE . Expression
  130               | SWITCH LEFTBRACE RIGHTBRACE . ExprCaseClause
  132               | SWITCH LEFTBRACE RIGHTBRACE . Expression ExprCaseClause

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    CASE                shift, and go to state 351
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    DEFAULT             shift, and go to state 352
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    $default  reduce using rule 126 (ExprSwitchStmt)

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    ExprCaseClause  go to state 353
    ExprSwitchCase  go to state 354
    Expression      go to state 355
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 320

  127 ExprSwitchStmt: SWITCH SimpleStmt SCOLON . LEFTBRACE RIGHTBRACE
  129               | SWITCH SimpleStmt SCOLON . LEFTBRACE RIGHTBRACE Expression
  131               | SWITCH SimpleStmt SCOLON . LEFTBRACE RIGHTBRACE ExprCaseClause
  133               | SWITCH SimpleStmt SCOLON . LEFTBRACE RIGHTBRACE Expression ExprCaseClause

    LEFTBRACE  shift, and go to state 356


State 321

   25 StatementList: StatementList Statement SCOLON .

    $default  reduce using rule 25 (StatementList)


State 322

   47 LabeledStmt: Label COLON Statement .

    $default  reduce using rule 47 (LabeledStmt)


State 323

   59 ShortVarDecl: IdentifierList INFER_EQ ExpressionList .

    $default  reduce using rule 59 (ShortVarDecl)


State 324

   58 Assignment: ExpressionList Assign_OP ExpressionList .

    $default  reduce using rule 58 (Assignment)


State 325

  215 Assign_OP: Add_OP EQ .

    $default  reduce using rule 215 (Assign_OP)


State 326

  216 Assign_OP: Mul_OP EQ .

    $default  reduce using rule 216 (Assign_OP)


State 327

  200 FieldDecl: IdentifierList Type String .

    $default  reduce using rule 200 (FieldDecl)


State 328

  199 FieldDeclList: FieldDeclList FieldDecl SCOLON .

    $default  reduce using rule 199 (FieldDeclList)


State 329

  195 MapType: MAP LEFTSQUARE Type RIGHTSQUARE Type .

    $default  reduce using rule 195 (MapType)


State 330

  181 MakeExpr: NEW LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 181 (MakeExpr)


State 331

  180 MakeExpr: MAKE LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 180 (MakeExpr)


State 332

  178 MakeExpr: MAKE LEFTPARAN Type COMMA . Expression COMMA Expression RIGHTPARAN
  179         | MAKE LEFTPARAN Type COMMA . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 357
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 333

  107 LiteralValue: LEFTBRACE ElementList RIGHTBRACE .

    $default  reduce using rule 107 (LiteralValue)


State 334

  108 LiteralValue: LEFTBRACE ElementList COMMA . RIGHTBRACE
  111 ElementList: ElementList COMMA . KeyedElement

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    RIGHTBRACE          shift, and go to state 358
    LEFTPARAN           shift, and go to state 129
    LEFTBRACE           shift, and go to state 206
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    LiteralValue    go to state 291
    SliceType       go to state 80
    KeyedElement    go to state 359
    Key             go to state 294
    Element         go to state 295
    Expression      go to state 296
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 335

  113 KeyedElement: Key COLON . Element

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTBRACE           shift, and go to state 206
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    LiteralValue    go to state 360
    SliceType       go to state 80
    Element         go to state 361
    Expression      go to state 362
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 336

  168 KeyValueList: Expression COLON . Expression
  169             | Expression COLON . Expression COMMA KeyValueList

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 363
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 337

  167 StructLiteral: LEFTBRACE KeyValueList RIGHTBRACE .

    $default  reduce using rule 167 (StructLiteral)


State 338

  184 Arguments: LEFTPARAN ExpressionList ELIPSIS . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 364


State 339

  173 Slice: LEFTSQUARE COLON RIGHTSQUARE .

    $default  reduce using rule 173 (Slice)


State 340

  156 Expression: Expression . Binary_OP Expression
  172 Slice: LEFTSQUARE COLON Expression . RIGHTSQUARE
  176      | LEFTSQUARE COLON Expression . COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 210
    ADD          shift, and go to state 211
    SUB          shift, and go to state 212
    XOR          shift, and go to state 213
    MUL          shift, and go to state 214
    AND          shift, and go to state 215
    OR           shift, and go to state 216
    LOGOR        shift, and go to state 217
    LOGAND       shift, and go to state 218
    ISEQ         shift, and go to state 219
    NEQ          shift, and go to state 220
    LESSEQ       shift, and go to state 221
    GRTEQ        shift, and go to state 222
    GRT          shift, and go to state 223
    LESS         shift, and go to state 224
    MOD          shift, and go to state 225
    QUOT         shift, and go to state 226
    SHL          shift, and go to state 227
    SHR          shift, and go to state 228
    RIGHTSQUARE  shift, and go to state 365
    COLON        shift, and go to state 366

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 341

  171 Index: LEFTSQUARE Expression RIGHTSQUARE .

    $default  reduce using rule 171 (Index)


State 342

  174 Slice: LEFTSQUARE Expression COLON . RIGHTSQUARE
  175      | LEFTSQUARE Expression COLON . Expression RIGHTSQUARE
  177      | LEFTSQUARE Expression COLON . Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    RIGHTSQUARE         shift, and go to state 367
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 368
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 343

  182 TypeAssertion: DOT LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 369


State 344

  139 IfStmt: IF SimpleStmt SCOLON Expression . Block
  142       | IF SimpleStmt SCOLON Expression . Block ELSE IfStmt
  143       | IF SimpleStmt SCOLON Expression . Block ELSE Block
  156 Expression: Expression . Binary_OP Expression

    ANDNOT     shift, and go to state 210
    ADD        shift, and go to state 211
    SUB        shift, and go to state 212
    XOR        shift, and go to state 213
    MUL        shift, and go to state 214
    AND        shift, and go to state 215
    OR         shift, and go to state 216
    LOGOR      shift, and go to state 217
    LOGAND     shift, and go to state 218
    ISEQ       shift, and go to state 219
    NEQ        shift, and go to state 220
    LESSEQ     shift, and go to state 221
    GRTEQ      shift, and go to state 222
    GRT        shift, and go to state 223
    LESS       shift, and go to state 224
    MOD        shift, and go to state 225
    QUOT       shift, and go to state 226
    SHL        shift, and go to state 227
    SHR        shift, and go to state 228
    LEFTBRACE  shift, and go to state 101

    Block      go to state 370
    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 345

  140 IfStmt: IF Expression Block ELSE . IfStmt
  141       | IF Expression Block ELSE . Block

    IF         shift, and go to state 165
    LEFTBRACE  shift, and go to state 101

    Block   go to state 371
    IfStmt  go to state 372


State 346

  153 RangeClause: IdentifierList INFER_EQ RANGE . Expression

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 373
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 347

  148 ForClause: InitStmt SCOLON SCOLON . PostStmt

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 255

    $default  reduce using rule 54 (EmptyStmt)

    PackageName     go to state 75
    SimpleStmt      go to state 374
    EmptyStmt       go to state 178
    ExpressionStmt  go to state 179
    IncDecStmt      go to state 180
    Assignment      go to state 181
    ShortVarDecl    go to state 182
    IdentifierList  go to state 183
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    PostStmt        go to state 375
    Expression      go to state 193
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    ExpressionList  go to state 194
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 348

  149 ForClause: InitStmt SCOLON Condition . SCOLON PostStmt

    SCOLON  shift, and go to state 376


State 349

   24 Condition: Expression .
  156 Expression: Expression . Binary_OP Expression

    ANDNOT  shift, and go to state 210
    ADD     shift, and go to state 211
    SUB     shift, and go to state 212
    XOR     shift, and go to state 213
    MUL     shift, and go to state 214
    AND     shift, and go to state 215
    OR      shift, and go to state 216
    LOGOR   shift, and go to state 217
    LOGAND  shift, and go to state 218
    ISEQ    shift, and go to state 219
    NEQ     shift, and go to state 220
    LESSEQ  shift, and go to state 221
    GRTEQ   shift, and go to state 222
    GRT     shift, and go to state 223
    LESS    shift, and go to state 224
    MOD     shift, and go to state 225
    QUOT    shift, and go to state 226
    SHL     shift, and go to state 227
    SHR     shift, and go to state 228

    $default  reduce using rule 24 (Condition)

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 350

  154 RangeClause: ExpressionList EQ RANGE . Expression

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 377
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 351

  135 ExprSwitchCase: CASE . ExpressionList

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 135
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    ExpressionList  go to state 378
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 352

  136 ExprSwitchCase: DEFAULT .

    $default  reduce using rule 136 (ExprSwitchCase)


State 353

  130 ExprSwitchStmt: SWITCH LEFTBRACE RIGHTBRACE ExprCaseClause .

    $default  reduce using rule 130 (ExprSwitchStmt)


State 354

  134 ExprCaseClause: ExprSwitchCase . COLON StatementList

    COLON  shift, and go to state 379


State 355

  128 ExprSwitchStmt: SWITCH LEFTBRACE RIGHTBRACE Expression .
  132               | SWITCH LEFTBRACE RIGHTBRACE Expression . ExprCaseClause
  156 Expression: Expression . Binary_OP Expression

    CASE     shift, and go to state 351
    DEFAULT  shift, and go to state 352
    ANDNOT   shift, and go to state 210
    ADD      shift, and go to state 211
    SUB      shift, and go to state 212
    XOR      shift, and go to state 213
    MUL      shift, and go to state 214
    AND      shift, and go to state 215
    OR       shift, and go to state 216
    LOGOR    shift, and go to state 217
    LOGAND   shift, and go to state 218
    ISEQ     shift, and go to state 219
    NEQ      shift, and go to state 220
    LESSEQ   shift, and go to state 221
    GRTEQ    shift, and go to state 222
    GRT      shift, and go to state 223
    LESS     shift, and go to state 224
    MOD      shift, and go to state 225
    QUOT     shift, and go to state 226
    SHL      shift, and go to state 227
    SHR      shift, and go to state 228

    $default  reduce using rule 128 (ExprSwitchStmt)

    ExprCaseClause  go to state 380
    ExprSwitchCase  go to state 354
    Add_OP          go to state 230
    Rel_OP          go to state 231
    Mul_OP          go to state 232
    Binary_OP       go to state 233


State 356

  127 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE . RIGHTBRACE
  129               | SWITCH SimpleStmt SCOLON LEFTBRACE . RIGHTBRACE Expression
  131               | SWITCH SimpleStmt SCOLON LEFTBRACE . RIGHTBRACE ExprCaseClause
  133               | SWITCH SimpleStmt SCOLON LEFTBRACE . RIGHTBRACE Expression ExprCaseClause

    RIGHTBRACE  shift, and go to state 381


State 357

  156 Expression: Expression . Binary_OP Expression
  178 MakeExpr: MAKE LEFTPARAN Type COMMA Expression . COMMA Expression RIGHTPARAN
  179         | MAKE LEFTPARAN Type COMMA Expression . RIGHTPARAN

    ANDNOT      shift, and go to state 210
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    XOR         shift, and go to state 213
    MUL         shift, and go to state 214
    AND         shift, and go to state 215
    OR          shift, and go to state 216
    LOGOR       shift, and go to state 217
    LOGAND      shift, and go to state 218
    ISEQ        shift, and go to state 219
    NEQ         shift, and go to state 220
    LESSEQ      shift, and go to state 221
    GRTEQ       shift, and go to state 222
    GRT         shift, and go to state 223
    LESS        shift, and go to state 224
    MOD         shift, and go to state 225
    QUOT        shift, and go to state 226
    SHL         shift, and go to state 227
    SHR         shift, and go to state 228
    RIGHTPARAN  shift, and go to state 382
    COMMA       shift, and go to state 383

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 358

  108 LiteralValue: LEFTBRACE ElementList COMMA RIGHTBRACE .

    $default  reduce using rule 108 (LiteralValue)


State 359

  111 ElementList: ElementList COMMA KeyedElement .

    $default  reduce using rule 111 (ElementList)


State 360

  117 Element: LiteralValue .

    $default  reduce using rule 117 (Element)


State 361

  113 KeyedElement: Key COLON Element .

    $default  reduce using rule 113 (KeyedElement)


State 362

  116 Element: Expression .
  156 Expression: Expression . Binary_OP Expression

    ANDNOT  shift, and go to state 210
    ADD     shift, and go to state 211
    SUB     shift, and go to state 212
    XOR     shift, and go to state 213
    MUL     shift, and go to state 214
    AND     shift, and go to state 215
    OR      shift, and go to state 216
    LOGOR   shift, and go to state 217
    LOGAND  shift, and go to state 218
    ISEQ    shift, and go to state 219
    NEQ     shift, and go to state 220
    LESSEQ  shift, and go to state 221
    GRTEQ   shift, and go to state 222
    GRT     shift, and go to state 223
    LESS    shift, and go to state 224
    MOD     shift, and go to state 225
    QUOT    shift, and go to state 226
    SHL     shift, and go to state 227
    SHR     shift, and go to state 228

    $default  reduce using rule 116 (Element)

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 363

  156 Expression: Expression . Binary_OP Expression
  168 KeyValueList: Expression COLON Expression .
  169             | Expression COLON Expression . COMMA KeyValueList

    ANDNOT  shift, and go to state 210
    ADD     shift, and go to state 211
    SUB     shift, and go to state 212
    XOR     shift, and go to state 213
    MUL     shift, and go to state 214
    AND     shift, and go to state 215
    OR      shift, and go to state 216
    LOGOR   shift, and go to state 217
    LOGAND  shift, and go to state 218
    ISEQ    shift, and go to state 219
    NEQ     shift, and go to state 220
    LESSEQ  shift, and go to state 221
    GRTEQ   shift, and go to state 222
    GRT     shift, and go to state 223
    LESS    shift, and go to state 224
    MOD     shift, and go to state 225
    QUOT    shift, and go to state 226
    SHL     shift, and go to state 227
    SHR     shift, and go to state 228
    COMMA   shift, and go to state 384

    $default  reduce using rule 168 (KeyValueList)

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 364

  184 Arguments: LEFTPARAN ExpressionList ELIPSIS RIGHTPARAN .

    $default  reduce using rule 184 (Arguments)


State 365

  172 Slice: LEFTSQUARE COLON Expression RIGHTSQUARE .

    $default  reduce using rule 172 (Slice)


State 366

  176 Slice: LEFTSQUARE COLON Expression COLON . Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 385
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 367

  174 Slice: LEFTSQUARE Expression COLON RIGHTSQUARE .

    $default  reduce using rule 174 (Slice)


State 368

  156 Expression: Expression . Binary_OP Expression
  175 Slice: LEFTSQUARE Expression COLON Expression . RIGHTSQUARE
  177      | LEFTSQUARE Expression COLON Expression . COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 210
    ADD          shift, and go to state 211
    SUB          shift, and go to state 212
    XOR          shift, and go to state 213
    MUL          shift, and go to state 214
    AND          shift, and go to state 215
    OR           shift, and go to state 216
    LOGOR        shift, and go to state 217
    LOGAND       shift, and go to state 218
    ISEQ         shift, and go to state 219
    NEQ          shift, and go to state 220
    LESSEQ       shift, and go to state 221
    GRTEQ        shift, and go to state 222
    GRT          shift, and go to state 223
    LESS         shift, and go to state 224
    MOD          shift, and go to state 225
    QUOT         shift, and go to state 226
    SHL          shift, and go to state 227
    SHR          shift, and go to state 228
    RIGHTSQUARE  shift, and go to state 386
    COLON        shift, and go to state 387

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 369

  182 TypeAssertion: DOT LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 182 (TypeAssertion)


State 370

  139 IfStmt: IF SimpleStmt SCOLON Expression Block .
  142       | IF SimpleStmt SCOLON Expression Block . ELSE IfStmt
  143       | IF SimpleStmt SCOLON Expression Block . ELSE Block

    ELSE  shift, and go to state 388

    $default  reduce using rule 139 (IfStmt)


State 371

  141 IfStmt: IF Expression Block ELSE Block .

    $default  reduce using rule 141 (IfStmt)


State 372

  140 IfStmt: IF Expression Block ELSE IfStmt .

    $default  reduce using rule 140 (IfStmt)


State 373

  153 RangeClause: IdentifierList INFER_EQ RANGE Expression .
  156 Expression: Expression . Binary_OP Expression

    ANDNOT  shift, and go to state 210
    ADD     shift, and go to state 211
    SUB     shift, and go to state 212
    XOR     shift, and go to state 213
    MUL     shift, and go to state 214
    AND     shift, and go to state 215
    OR      shift, and go to state 216
    LOGOR   shift, and go to state 217
    LOGAND  shift, and go to state 218
    ISEQ    shift, and go to state 219
    NEQ     shift, and go to state 220
    LESSEQ  shift, and go to state 221
    GRTEQ   shift, and go to state 222
    GRT     shift, and go to state 223
    LESS    shift, and go to state 224
    MOD     shift, and go to state 225
    QUOT    shift, and go to state 226
    SHL     shift, and go to state 227
    SHR     shift, and go to state 228

    $default  reduce using rule 153 (RangeClause)

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 374

  151 PostStmt: SimpleStmt .

    $default  reduce using rule 151 (PostStmt)


State 375

  148 ForClause: InitStmt SCOLON SCOLON PostStmt .

    $default  reduce using rule 148 (ForClause)


State 376

  149 ForClause: InitStmt SCOLON Condition SCOLON . PostStmt

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 255

    $default  reduce using rule 54 (EmptyStmt)

    PackageName     go to state 75
    SimpleStmt      go to state 374
    EmptyStmt       go to state 178
    ExpressionStmt  go to state 179
    IncDecStmt      go to state 180
    Assignment      go to state 181
    ShortVarDecl    go to state 182
    IdentifierList  go to state 183
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    PostStmt        go to state 389
    Expression      go to state 193
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    ExpressionList  go to state 194
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 377

  154 RangeClause: ExpressionList EQ RANGE Expression .
  156 Expression: Expression . Binary_OP Expression

    ANDNOT  shift, and go to state 210
    ADD     shift, and go to state 211
    SUB     shift, and go to state 212
    XOR     shift, and go to state 213
    MUL     shift, and go to state 214
    AND     shift, and go to state 215
    OR      shift, and go to state 216
    LOGOR   shift, and go to state 217
    LOGAND  shift, and go to state 218
    ISEQ    shift, and go to state 219
    NEQ     shift, and go to state 220
    LESSEQ  shift, and go to state 221
    GRTEQ   shift, and go to state 222
    GRT     shift, and go to state 223
    LESS    shift, and go to state 224
    MOD     shift, and go to state 225
    QUOT    shift, and go to state 226
    SHL     shift, and go to state 227
    SHR     shift, and go to state 228

    $default  reduce using rule 154 (RangeClause)

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 378

  135 ExprSwitchCase: CASE ExpressionList .

    $default  reduce using rule 135 (ExprSwitchCase)


State 379

  134 ExprCaseClause: ExprSwitchCase COLON . StatementList

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    BREAK               shift, and go to state 162
    CONTINUE            shift, and go to state 163
    RETURN              shift, and go to state 164
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 165
    FOR                 shift, and go to state 166
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 167
    NEW                 shift, and go to state 121
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    GOTO                shift, and go to state 168
    FALLTHROUGH         shift, and go to state 169
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTBRACE           shift, and go to state 101
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 170

    $default  reduce using rule 54 (EmptyStmt)

    PackageName      go to state 75
    Block            go to state 171
    StatementList    go to state 390
    Statement        go to state 173
    Declaration      go to state 174
    LabeledStmt      go to state 175
    Label            go to state 176
    SimpleStmt       go to state 177
    EmptyStmt        go to state 178
    ExpressionStmt   go to state 179
    IncDecStmt       go to state 180
    Assignment       go to state 181
    ShortVarDecl     go to state 182
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 183
    QualifiedIdent   go to state 76
    CompositeLit     go to state 131
    LiteralType      go to state 132
    Operand          go to state 133
    OperandName      go to state 134
    SliceType        go to state 80
    ReturnStmt       go to state 184
    BreakStmt        go to state 185
    ContinueStmt     go to state 186
    GotoStmt         go to state 187
    SwitchStmt       go to state 188
    ExprSwitchStmt   go to state 189
    FallthroughStmt  go to state 190
    IfStmt           go to state 191
    ForStmt          go to state 192
    Expression       go to state 193
    UnaryExpr        go to state 136
    PrimaryExpr      go to state 137
    MakeExpr         go to state 138
    ExpressionList   go to state 194
    TypeDecl         go to state 22
    MapType          go to state 81
    StructType       go to state 82
    PointerType      go to state 83
    ArrayType        go to state 84
    Literal          go to state 140
    BasicLit         go to state 141
    String           go to state 142
    Unary_OP         go to state 143


State 380

  132 ExprSwitchStmt: SWITCH LEFTBRACE RIGHTBRACE Expression ExprCaseClause .

    $default  reduce using rule 132 (ExprSwitchStmt)


State 381

  127 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE .
  129               | SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE . Expression
  131               | SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE . ExprCaseClause
  133               | SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE . Expression ExprCaseClause

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    CASE                shift, and go to state 351
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    DEFAULT             shift, and go to state 352
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    $default  reduce using rule 127 (ExprSwitchStmt)

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    ExprCaseClause  go to state 391
    ExprSwitchCase  go to state 354
    Expression      go to state 392
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 382

  179 MakeExpr: MAKE LEFTPARAN Type COMMA Expression RIGHTPARAN .

    $default  reduce using rule 179 (MakeExpr)


State 383

  178 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 393
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 384

  169 KeyValueList: Expression COLON Expression COMMA . KeyValueList

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 297
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    KeyValueList    go to state 394
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 385

  156 Expression: Expression . Binary_OP Expression
  176 Slice: LEFTSQUARE COLON Expression COLON Expression . RIGHTSQUARE

    ANDNOT       shift, and go to state 210
    ADD          shift, and go to state 211
    SUB          shift, and go to state 212
    XOR          shift, and go to state 213
    MUL          shift, and go to state 214
    AND          shift, and go to state 215
    OR           shift, and go to state 216
    LOGOR        shift, and go to state 217
    LOGAND       shift, and go to state 218
    ISEQ         shift, and go to state 219
    NEQ          shift, and go to state 220
    LESSEQ       shift, and go to state 221
    GRTEQ        shift, and go to state 222
    GRT          shift, and go to state 223
    LESS         shift, and go to state 224
    MOD          shift, and go to state 225
    QUOT         shift, and go to state 226
    SHL          shift, and go to state 227
    SHR          shift, and go to state 228
    RIGHTSQUARE  shift, and go to state 395

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 386

  175 Slice: LEFTSQUARE Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 175 (Slice)


State 387

  177 Slice: LEFTSQUARE Expression COLON Expression COLON . Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 121
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 75
    QualifiedIdent  go to state 76
    CompositeLit    go to state 131
    LiteralType     go to state 132
    Operand         go to state 133
    OperandName     go to state 134
    SliceType       go to state 80
    Expression      go to state 396
    UnaryExpr       go to state 136
    PrimaryExpr     go to state 137
    MakeExpr        go to state 138
    MapType         go to state 81
    StructType      go to state 82
    PointerType     go to state 83
    ArrayType       go to state 84
    Literal         go to state 140
    BasicLit        go to state 141
    String          go to state 142
    Unary_OP        go to state 143


State 388

  142 IfStmt: IF SimpleStmt SCOLON Expression Block ELSE . IfStmt
  143       | IF SimpleStmt SCOLON Expression Block ELSE . Block

    IF         shift, and go to state 165
    LEFTBRACE  shift, and go to state 101

    Block   go to state 397
    IfStmt  go to state 398


State 389

  149 ForClause: InitStmt SCOLON Condition SCOLON PostStmt .

    $default  reduce using rule 149 (ForClause)


State 390

   25 StatementList: StatementList . Statement SCOLON
  134 ExprCaseClause: ExprSwitchCase COLON StatementList .

    INTEGER_VAL         shift, and go to state 117
    FLOAT_VAL           shift, and go to state 118
    TRUE                shift, and go to state 119
    FALSE               shift, and go to state 120
    BREAK               shift, and go to state 162
    CONTINUE            shift, and go to state 163
    RETURN              shift, and go to state 164
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 165
    FOR                 shift, and go to state 166
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 167
    NEW                 shift, and go to state 121
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 122
    GOTO                shift, and go to state 168
    FALLTHROUGH         shift, and go to state 169
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 123
    SUB                 shift, and go to state 124
    NOT                 shift, and go to state 125
    XOR                 shift, and go to state 126
    MUL                 shift, and go to state 127
    AND                 shift, and go to state 128
    LEFTPARAN           shift, and go to state 129
    LEFTBRACE           shift, and go to state 101
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 130
    IDENTIFIER          shift, and go to state 170

    SCOLON    reduce using rule 54 (EmptyStmt)
    SCOLON    [reduce using rule 134 (ExprCaseClause)]
    $default  reduce using rule 54 (EmptyStmt)

    PackageName      go to state 75
    Block            go to state 171
    Statement        go to state 272
    Declaration      go to state 174
    LabeledStmt      go to state 175
    Label            go to state 176
    SimpleStmt       go to state 177
    EmptyStmt        go to state 178
    ExpressionStmt   go to state 179
    IncDecStmt       go to state 180
    Assignment       go to state 181
    ShortVarDecl     go to state 182
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 183
    QualifiedIdent   go to state 76
    CompositeLit     go to state 131
    LiteralType      go to state 132
    Operand          go to state 133
    OperandName      go to state 134
    SliceType        go to state 80
    ReturnStmt       go to state 184
    BreakStmt        go to state 185
    ContinueStmt     go to state 186
    GotoStmt         go to state 187
    SwitchStmt       go to state 188
    ExprSwitchStmt   go to state 189
    FallthroughStmt  go to state 190
    IfStmt           go to state 191
    ForStmt          go to state 192
    Expression       go to state 193
    UnaryExpr        go to state 136
    PrimaryExpr      go to state 137
    MakeExpr         go to state 138
    ExpressionList   go to state 194
    TypeDecl         go to state 22
    MapType          go to state 81
    StructType       go to state 82
    PointerType      go to state 83
    ArrayType        go to state 84
    Literal          go to state 140
    BasicLit         go to state 141
    String           go to state 142
    Unary_OP         go to state 143


State 391

  131 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE ExprCaseClause .

    $default  reduce using rule 131 (ExprSwitchStmt)


State 392

  129 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE Expression .
  133               | SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE Expression . ExprCaseClause
  156 Expression: Expression . Binary_OP Expression

    CASE     shift, and go to state 351
    DEFAULT  shift, and go to state 352
    ANDNOT   shift, and go to state 210
    ADD      shift, and go to state 211
    SUB      shift, and go to state 212
    XOR      shift, and go to state 213
    MUL      shift, and go to state 214
    AND      shift, and go to state 215
    OR       shift, and go to state 216
    LOGOR    shift, and go to state 217
    LOGAND   shift, and go to state 218
    ISEQ     shift, and go to state 219
    NEQ      shift, and go to state 220
    LESSEQ   shift, and go to state 221
    GRTEQ    shift, and go to state 222
    GRT      shift, and go to state 223
    LESS     shift, and go to state 224
    MOD      shift, and go to state 225
    QUOT     shift, and go to state 226
    SHL      shift, and go to state 227
    SHR      shift, and go to state 228

    $default  reduce using rule 129 (ExprSwitchStmt)

    ExprCaseClause  go to state 399
    ExprSwitchCase  go to state 354
    Add_OP          go to state 230
    Rel_OP          go to state 231
    Mul_OP          go to state 232
    Binary_OP       go to state 233


State 393

  156 Expression: Expression . Binary_OP Expression
  178 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression . RIGHTPARAN

    ANDNOT      shift, and go to state 210
    ADD         shift, and go to state 211
    SUB         shift, and go to state 212
    XOR         shift, and go to state 213
    MUL         shift, and go to state 214
    AND         shift, and go to state 215
    OR          shift, and go to state 216
    LOGOR       shift, and go to state 217
    LOGAND      shift, and go to state 218
    ISEQ        shift, and go to state 219
    NEQ         shift, and go to state 220
    LESSEQ      shift, and go to state 221
    GRTEQ       shift, and go to state 222
    GRT         shift, and go to state 223
    LESS        shift, and go to state 224
    MOD         shift, and go to state 225
    QUOT        shift, and go to state 226
    SHL         shift, and go to state 227
    SHR         shift, and go to state 228
    RIGHTPARAN  shift, and go to state 400

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 394

  169 KeyValueList: Expression COLON Expression COMMA KeyValueList .

    $default  reduce using rule 169 (KeyValueList)


State 395

  176 Slice: LEFTSQUARE COLON Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 176 (Slice)


State 396

  156 Expression: Expression . Binary_OP Expression
  177 Slice: LEFTSQUARE Expression COLON Expression COLON Expression . RIGHTSQUARE

    ANDNOT       shift, and go to state 210
    ADD          shift, and go to state 211
    SUB          shift, and go to state 212
    XOR          shift, and go to state 213
    MUL          shift, and go to state 214
    AND          shift, and go to state 215
    OR           shift, and go to state 216
    LOGOR        shift, and go to state 217
    LOGAND       shift, and go to state 218
    ISEQ         shift, and go to state 219
    NEQ          shift, and go to state 220
    LESSEQ       shift, and go to state 221
    GRTEQ        shift, and go to state 222
    GRT          shift, and go to state 223
    LESS         shift, and go to state 224
    MOD          shift, and go to state 225
    QUOT         shift, and go to state 226
    SHL          shift, and go to state 227
    SHR          shift, and go to state 228
    RIGHTSQUARE  shift, and go to state 401

    Add_OP     go to state 230
    Rel_OP     go to state 231
    Mul_OP     go to state 232
    Binary_OP  go to state 233


State 397

  143 IfStmt: IF SimpleStmt SCOLON Expression Block ELSE Block .

    $default  reduce using rule 143 (IfStmt)


State 398

  142 IfStmt: IF SimpleStmt SCOLON Expression Block ELSE IfStmt .

    $default  reduce using rule 142 (IfStmt)


State 399

  133 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE Expression ExprCaseClause .

    $default  reduce using rule 133 (ExprSwitchStmt)


State 400

  178 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN .

    $default  reduce using rule 178 (MakeExpr)


State 401

  177 Slice: LEFTSQUARE Expression COLON Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 177 (Slice)
