Terminals unused in grammar

   NULLPOINTER
   ASSIGN


State 75 conflicts: 1 reduce/reduce
State 129 conflicts: 3 shift/reduce
State 137 conflicts: 1 shift/reduce
State 177 conflicts: 2 reduce/reduce
State 261 conflicts: 2 reduce/reduce


Grammar

    0 $accept: SourceFile $end

    1 SourceFile: PackageClause SCOLON
    2           | PackageClause SCOLON ImportDeclList
    3           | PackageClause SCOLON TopLevelDeclList
    4           | PackageClause SCOLON ImportDeclList TopLevelDeclList

    5 Rel_OP: ISEQ
    6       | NEQ
    7       | LESSEQ
    8       | GRTEQ
    9       | GRT
   10       | LESS

   11 Mul_OP: MUL
   12       | QUOT
   13       | MOD
   14       | SHL
   15       | SHR
   16       | AND
   17       | ANDNOT

   18 Unary_OP: ADD
   19         | SUB
   20         | NOT
   21         | XOR
   22         | MUL
   23         | AND

   24 PackageClause: PACKAGE PackageName

   25 PackageName: IDENTIFIER

   26 ImportDeclList: ImportDeclList ImportDecl SCOLON
   27               | ImportDecl SCOLON

   28 ImportDecl: IMPORT LEFTPARAN ImportSpecList RIGHTPARAN
   29           | IMPORT LEFTPARAN RIGHTPARAN
   30           | IMPORT ImportSpec

   31 ImportSpecList: ImportSpecList ImportSpec SCOLON
   32               | ImportSpec SCOLON

   33 ImportSpec: PackageName ImportPath
   34           | DOT ImportPath
   35           | ImportPath

   36 ImportPath: String

   37 TopLevelDeclList: TopLevelDeclList TopLevelDecl SCOLON
   38                 | TopLevelDecl SCOLON

   39 TopLevelDecl: Declaration
   40             | FunctionDecl
   41             | MethodDecl

   42 Block: LEFTBRACE StatementList RIGHTBRACE

   43 Condition: Expression

   44 StatementList: StatementList Statement SCOLON
   45              | Statement SCOLON

   46 Statement: Declaration
   47          | LabeledStmt
   48          | SimpleStmt
   49          | ReturnStmt
   50          | BreakStmt
   51          | ContinueStmt
   52          | GotoStmt
   53          | SwitchStmt
   54          | FallthroughStmt
   55          | Block
   56          | IfStmt
   57          | ForStmt

   58 Declaration: TypeDecl
   59            | VarDecl
   60            | ConstDecl

   61 FunctionDecl: FUNC FunctionName Signature FunctionBody
   62             | FUNC FunctionName Signature

   63 FunctionName: IDENTIFIER

   64 MethodDecl: FUNC Receiver IDENTIFIER Signature
   65           | FUNC Receiver IDENTIFIER Signature FunctionBody

   66 LabeledStmt: Label COLON Statement

   67 Label: IDENTIFIER

   68 SimpleStmt: EmptyStmt
   69           | ExpressionStmt
   70           | IncDecStmt
   71           | Assignment
   72           | ShortVarDecl

   73 EmptyStmt: %empty

   74 ExpressionStmt: Expression

   75 IncDecStmt: Expression PLUSPLUS
   76           | Expression MINUSMINUS

   77 Assignment: ExpressionList Assign_OP ExpressionList

   78 ShortVarDecl: IdentifierList INFER_EQ ExpressionList

   79 VarDecl: VAR VarSpec
   80        | VAR LEFTPARAN VarSpecList RIGHTPARAN
   81        | VAR LEFTPARAN RIGHTPARAN

   82 VarSpecList: VarSpecList VarSpec SCOLON
   83            | VarSpec SCOLON

   84 VarSpec: IdentifierList Type
   85        | IdentifierList Type EQ ExpressionList
   86        | IdentifierList EQ ExpressionList

   87 ConstDecl: CONST ConstSpec
   88          | CONST LEFTPARAN ConstSpecList RIGHTPARAN
   89          | CONST LEFTPARAN RIGHTPARAN

   90 ConstSpecList: ConstSpecList ConstSpec SCOLON
   91              | ConstSpec SCOLON

   92 ConstSpec: IdentifierList Type
   93          | IdentifierList Type EQ ExpressionList
   94          | IdentifierList EQ ExpressionList

   95 FunctionBody: Block

   96 Signature: Parameters
   97          | Parameters Result

   98 Result: Parameters
   99       | Type

  100 Parameters: LEFTPARAN RIGHTPARAN
  101           | LEFTPARAN ParameterList RIGHTPARAN
  102           | LEFTPARAN ParameterList COMMA RIGHTPARAN

  103 ParameterList: ParameterDecl
  104              | ParameterList COMMA ParameterDecl

  105 ParameterDecl: IdentifierList Type
  106              | IdentifierList ELIPSIS Type
  107              | ELIPSIS Type

  108 IdentifierList: IdentifierList COMMA IDENTIFIER
  109               | IDENTIFIER

  110 QualifiedIdent: PackageName DOT IDENTIFIER

  111 Receiver: Parameters

  112 CompositeLit: LiteralType LiteralValue

  113 LiteralType: StructType
  114            | ArrayType
  115            | PointerType
  116            | SliceType
  117            | LEFTSQUARE ELIPSIS RIGHTSQUARE Operand
  118            | MapType

  119 Type: LiteralType
  120     | OperandName

  121 Operand: Literal
  122        | OperandName
  123        | LEFTPARAN Expression RIGHTPARAN

  124 OperandName: IDENTIFIER
  125            | QualifiedIdent

  126 LiteralValue: LEFTBRACE RIGHTBRACE
  127             | LEFTBRACE ElementList RIGHTBRACE
  128             | LEFTBRACE ElementList COMMA RIGHTBRACE

  129 SliceType: LEFTSQUARE RIGHTSQUARE Type

  130 ElementList: KeyedElement
  131            | ElementList COMMA KeyedElement

  132 KeyedElement: Element
  133             | Key COLON Element

  134 Key: Expression
  135    | LiteralValue

  136 Element: Expression
  137        | LiteralValue

  138 ReturnStmt: RETURN
  139           | RETURN ExpressionList

  140 BreakStmt: BREAK
  141          | BREAK Label

  142 ContinueStmt: CONTINUE
  143             | CONTINUE Label

  144 GotoStmt: GOTO Label

  145 SwitchStmt: ExprSwitchStmt

  146 ExprSwitchStmt: SWITCH LEFTBRACE RIGHTBRACE
  147               | SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE
  148               | SWITCH Expression LEFTBRACE RIGHTBRACE
  149               | SWITCH SimpleStmt SCOLON Expression LEFTBRACE RIGHTBRACE
  150               | SWITCH LEFTBRACE ExprCaseClauseList RIGHTBRACE
  151               | SWITCH SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE
  152               | SWITCH Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE
  153               | SWITCH SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

  154 ExprCaseClauseList: ExprCaseClauseList ExprCaseClause
  155                   | ExprCaseClause

  156 ExprCaseClause: ExprSwitchCase COLON StatementList

  157 ExprSwitchCase: CASE ExpressionList
  158               | DEFAULT

  159 FallthroughStmt: FALLTHROUGH

  160 IfStmt: IF Expression Block
  161       | IF SimpleStmt SCOLON Expression Block
  162       | IF Expression Block ELSE IfStmt
  163       | IF Expression Block ELSE Block
  164       | IF SimpleStmt SCOLON Expression Block ELSE IfStmt
  165       | IF SimpleStmt SCOLON Expression Block ELSE Block

  166 ForStmt: FOR Block
  167        | FOR ForClause Block
  168        | FOR Condition Block
  169        | FOR RangeClause Block

  170 ForClause: InitStmt SCOLON SCOLON PostStmt
  171          | InitStmt SCOLON Condition SCOLON PostStmt

  172 InitStmt: SimpleStmt

  173 PostStmt: SimpleStmt

  174 RangeClause: RANGE Expression
  175            | IdentifierList INFER_EQ RANGE Expression
  176            | ExpressionList EQ RANGE Expression

  177 Expression: ExpressionOR

  178 ExpressionOR: ExpressionOR LOGOR ExpressionAND
  179             | ExpressionAND

  180 ExpressionAND: ExpressionAND LOGAND ExpressionREL
  181              | ExpressionREL

  182 ExpressionREL: ExpressionREL Rel_OP ExpressionADD
  183              | ExpressionADD

  184 ExpressionADD: ExpressionADD Add_OP ExpressionMUL
  185              | ExpressionMUL

  186 ExpressionMUL: ExpressionMUL Mul_OP PrimaryExpr
  187              | UnaryExpr

  188 UnaryExpr: PrimaryExpr
  189          | Unary_OP PrimaryExpr

  190 PrimaryExpr: Operand
  191            | MakeExpr
  192            | PrimaryExpr Selector
  193            | PrimaryExpr Index
  194            | PrimaryExpr Slice
  195            | PrimaryExpr Arguments
  196            | OperandName StructLiteral
  197            | PrimaryExpr TypeAssertion

  198 StructLiteral: LEFTBRACE KeyValueList RIGHTBRACE

  199 KeyValueList: Expression COLON Expression
  200             | Expression COLON Expression COMMA KeyValueList

  201 Selector: DOT IDENTIFIER

  202 Index: LEFTSQUARE Expression RIGHTSQUARE

  203 Slice: LEFTSQUARE COLON Expression RIGHTSQUARE
  204      | LEFTSQUARE COLON RIGHTSQUARE
  205      | LEFTSQUARE Expression COLON RIGHTSQUARE
  206      | LEFTSQUARE Expression COLON Expression RIGHTSQUARE
  207      | LEFTSQUARE COLON Expression COLON Expression RIGHTSQUARE
  208      | LEFTSQUARE Expression COLON Expression COLON Expression RIGHTSQUARE

  209 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN
  210         | MAKE LEFTPARAN Type COMMA Expression RIGHTPARAN
  211         | MAKE LEFTPARAN Type RIGHTPARAN
  212         | NEW LEFTPARAN Type RIGHTPARAN

  213 TypeAssertion: DOT LEFTPARAN Type RIGHTPARAN

  214 Arguments: LEFTPARAN RIGHTPARAN
  215          | LEFTPARAN ExpressionList ELIPSIS RIGHTPARAN

  216 ExpressionList: Expression
  217               | Expression COMMA Expression

  218 TypeDecl: TYPE LEFTPARAN TypeSpecList RIGHTPARAN
  219         | TYPE TypeSpec

  220 TypeSpecList: TypeSpecList TypeSpec SCOLON
  221             | TypeSpec SCOLON

  222 TypeSpec: AliasDecl
  223         | TypeDef

  224 AliasDecl: IDENTIFIER EQ Type

  225 TypeDef: IDENTIFIER Type

  226 MapType: MAP LEFTSQUARE Type RIGHTSQUARE Type

  227 StructType: STRUCT LEFTBRACE FieldDeclList RIGHTBRACE
  228           | STRUCT LEFTBRACE RIGHTBRACE

  229 FieldDeclList: FieldDecl SCOLON
  230              | FieldDeclList FieldDecl SCOLON

  231 FieldDecl: IdentifierList Type String
  232          | IdentifierList Type

  233 PointerType: MUL BaseType

  234 BaseType: Type

  235 ArrayType: LEFTSQUARE Expression RIGHTSQUARE Type

  236 Literal: BasicLit
  237        | CompositeLit

  238 BasicLit: INTEGER_VAL
  239         | FLOAT_VAL
  240         | BYTE_VAL
  241         | String
  242         | TRUE
  243         | FALSE

  244 String: RAW_STRING
  245       | INTERPRETED_STRING

  246 Assign_OP: EQ
  247          | Add_OP EQ
  248          | Mul_OP EQ

  249 Add_OP: ADD
  250       | SUB
  251       | OR
  252       | XOR


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER_VAL (258) 238
FLOAT_VAL (259) 239
TRUE (260) 242
FALSE (261) 243
NULLPOINTER (262)
BREAK (263) 140 141
CONTINUE (264) 142 143
RETURN (265) 138 139
SCOLON (266) 1 2 3 4 26 27 31 32 37 38 44 45 82 83 90 91 147 149 151
    153 161 164 165 170 171 220 221 229 230
FUNC (267) 61 62 64 65
STRUCT (268) 227 228
ELSE (269) 162 163 164 165
PACKAGE (270) 24
IF (271) 160 161 162 163 164 165
FOR (272) 166 167 168 169
RANGE (273) 174 175 176
IMPORT (274) 28 29 30
VAR (275) 79 80 81
SWITCH (276) 146 147 148 149 150 151 152 153
CASE (277) 157
NEW (278) 212
CONST (279) 87 88 89
MAP (280) 226
DEFAULT (281) 158
MAKE (282) 209 210 211
GOTO (283) 144
FALLTHROUGH (284) 159
TYPE (285) 218 219
PLUSPLUS (286) 75
MINUSMINUS (287) 76
ANDNOT (288) 17
ELIPSIS (289) 106 107 117 215
ADD (290) 18 249
SUB (291) 19 250
NOT (292) 20
XOR (293) 21 252
MUL (294) 11 22 233
AND (295) 16 23
OR (296) 251
LOGOR (297) 178
LOGAND (298) 180
ISEQ (299) 5
NEQ (300) 6
LESSEQ (301) 7
GRTEQ (302) 8
GRT (303) 9
LESS (304) 10
MOD (305) 13
QUOT (306) 12
SHL (307) 14
SHR (308) 15
EQ (309) 85 86 93 94 176 224 246 247 248
INFER_EQ (310) 78 175
RIGHTPARAN (311) 28 29 80 81 88 89 100 101 102 123 209 210 211 212
    213 214 215 218
RIGHTBRACE (312) 42 126 127 128 146 147 148 149 150 151 152 153 198
    227 228
RIGHTSQUARE (313) 117 129 202 203 204 205 206 207 208 226 235
LEFTPARAN (314) 28 29 80 81 88 89 100 101 102 123 209 210 211 212 213
    214 215 218
LEFTBRACE (315) 42 126 127 128 146 147 148 149 150 151 152 153 198
    227 228
LEFTSQUARE (316) 117 129 202 203 204 205 206 207 208 226 235
COLON (317) 66 133 156 199 200 203 204 205 206 207 208
DOT (318) 34 110 201 213
COMMA (319) 102 104 108 128 131 200 209 210 217
RAW_STRING (320) 244
INTERPRETED_STRING (321) 245
BYTE_VAL (322) 240
IDENTIFIER (323) 25 63 64 65 67 108 109 110 124 201 224 225
ASSIGN (324)


Nonterminals, with rules where they appear

$accept (70)
    on left: 0
SourceFile (71)
    on left: 1 2 3 4, on right: 0
Rel_OP (72)
    on left: 5 6 7 8 9 10, on right: 182
Mul_OP (73)
    on left: 11 12 13 14 15 16 17, on right: 186 248
Unary_OP (74)
    on left: 18 19 20 21 22 23, on right: 189
PackageClause (75)
    on left: 24, on right: 1 2 3 4
PackageName (76)
    on left: 25, on right: 24 33 110
ImportDeclList (77)
    on left: 26 27, on right: 2 4 26
ImportDecl (78)
    on left: 28 29 30, on right: 26 27
ImportSpecList (79)
    on left: 31 32, on right: 28 31
ImportSpec (80)
    on left: 33 34 35, on right: 30 31 32
ImportPath (81)
    on left: 36, on right: 33 34 35
TopLevelDeclList (82)
    on left: 37 38, on right: 3 4 37
TopLevelDecl (83)
    on left: 39 40 41, on right: 37 38
Block (84)
    on left: 42, on right: 55 95 160 161 162 163 164 165 166 167 168
    169
Condition (85)
    on left: 43, on right: 168 171
StatementList (86)
    on left: 44 45, on right: 42 44 156
Statement (87)
    on left: 46 47 48 49 50 51 52 53 54 55 56 57, on right: 44 45 66
Declaration (88)
    on left: 58 59 60, on right: 39 46
FunctionDecl (89)
    on left: 61 62, on right: 40
FunctionName (90)
    on left: 63, on right: 61 62
MethodDecl (91)
    on left: 64 65, on right: 41
LabeledStmt (92)
    on left: 66, on right: 47
Label (93)
    on left: 67, on right: 66 141 143 144
SimpleStmt (94)
    on left: 68 69 70 71 72, on right: 48 147 149 151 153 161 164 165
    172 173
EmptyStmt (95)
    on left: 73, on right: 68
ExpressionStmt (96)
    on left: 74, on right: 69
IncDecStmt (97)
    on left: 75 76, on right: 70
Assignment (98)
    on left: 77, on right: 71
ShortVarDecl (99)
    on left: 78, on right: 72
VarDecl (100)
    on left: 79 80 81, on right: 59
VarSpecList (101)
    on left: 82 83, on right: 80 82
VarSpec (102)
    on left: 84 85 86, on right: 79 82 83
ConstDecl (103)
    on left: 87 88 89, on right: 60
ConstSpecList (104)
    on left: 90 91, on right: 88 90
ConstSpec (105)
    on left: 92 93 94, on right: 87 90 91
FunctionBody (106)
    on left: 95, on right: 61 65
Signature (107)
    on left: 96 97, on right: 61 62 64 65
Result (108)
    on left: 98 99, on right: 97
Parameters (109)
    on left: 100 101 102, on right: 96 97 98 111
ParameterList (110)
    on left: 103 104, on right: 101 102 104
ParameterDecl (111)
    on left: 105 106 107, on right: 103 104
IdentifierList (112)
    on left: 108 109, on right: 78 84 85 86 92 93 94 105 106 108 175
    231 232
QualifiedIdent (113)
    on left: 110, on right: 125
Receiver (114)
    on left: 111, on right: 64 65
CompositeLit (115)
    on left: 112, on right: 237
LiteralType (116)
    on left: 113 114 115 116 117 118, on right: 112 119
Type (117)
    on left: 119 120, on right: 84 85 92 93 99 105 106 107 129 209
    210 211 212 213 224 225 226 231 232 234 235
Operand (118)
    on left: 121 122 123, on right: 117 190
OperandName (119)
    on left: 124 125, on right: 120 122 196
LiteralValue (120)
    on left: 126 127 128, on right: 112 135 137
SliceType (121)
    on left: 129, on right: 116
ElementList (122)
    on left: 130 131, on right: 127 128 131
KeyedElement (123)
    on left: 132 133, on right: 130 131
Key (124)
    on left: 134 135, on right: 133
Element (125)
    on left: 136 137, on right: 132 133
ReturnStmt (126)
    on left: 138 139, on right: 49
BreakStmt (127)
    on left: 140 141, on right: 50
ContinueStmt (128)
    on left: 142 143, on right: 51
GotoStmt (129)
    on left: 144, on right: 52
SwitchStmt (130)
    on left: 145, on right: 53
ExprSwitchStmt (131)
    on left: 146 147 148 149 150 151 152 153, on right: 145
ExprCaseClauseList (132)
    on left: 154 155, on right: 150 151 152 153 154
ExprCaseClause (133)
    on left: 156, on right: 154 155
ExprSwitchCase (134)
    on left: 157 158, on right: 156
FallthroughStmt (135)
    on left: 159, on right: 54
IfStmt (136)
    on left: 160 161 162 163 164 165, on right: 56 162 164
ForStmt (137)
    on left: 166 167 168 169, on right: 57
ForClause (138)
    on left: 170 171, on right: 167
InitStmt (139)
    on left: 172, on right: 170 171
PostStmt (140)
    on left: 173, on right: 170 171
RangeClause (141)
    on left: 174 175 176, on right: 169
Expression (142)
    on left: 177, on right: 43 74 75 76 123 134 136 148 149 152 153
    160 161 162 163 164 165 174 175 176 199 200 202 203 205 206 207
    208 209 210 216 217 235
ExpressionOR (143)
    on left: 178 179, on right: 177 178
ExpressionAND (144)
    on left: 180 181, on right: 178 179 180
ExpressionREL (145)
    on left: 182 183, on right: 180 181 182
ExpressionADD (146)
    on left: 184 185, on right: 182 183 184
ExpressionMUL (147)
    on left: 186 187, on right: 184 185 186
UnaryExpr (148)
    on left: 188 189, on right: 187
PrimaryExpr (149)
    on left: 190 191 192 193 194 195 196 197, on right: 186 188 189
    192 193 194 195 197
StructLiteral (150)
    on left: 198, on right: 196
KeyValueList (151)
    on left: 199 200, on right: 198 200
Selector (152)
    on left: 201, on right: 192
Index (153)
    on left: 202, on right: 193
Slice (154)
    on left: 203 204 205 206 207 208, on right: 194
MakeExpr (155)
    on left: 209 210 211 212, on right: 191
TypeAssertion (156)
    on left: 213, on right: 197
Arguments (157)
    on left: 214 215, on right: 195
ExpressionList (158)
    on left: 216 217, on right: 77 78 85 86 93 94 139 157 176 215
TypeDecl (159)
    on left: 218 219, on right: 58
TypeSpecList (160)
    on left: 220 221, on right: 218 220
TypeSpec (161)
    on left: 222 223, on right: 219 220 221
AliasDecl (162)
    on left: 224, on right: 222
TypeDef (163)
    on left: 225, on right: 223
MapType (164)
    on left: 226, on right: 118
StructType (165)
    on left: 227 228, on right: 113
FieldDeclList (166)
    on left: 229 230, on right: 227 230
FieldDecl (167)
    on left: 231 232, on right: 229 230
PointerType (168)
    on left: 233, on right: 115
BaseType (169)
    on left: 234, on right: 233
ArrayType (170)
    on left: 235, on right: 114
Literal (171)
    on left: 236 237, on right: 121
BasicLit (172)
    on left: 238 239 240 241 242 243, on right: 236
String (173)
    on left: 244 245, on right: 36 231 241
Assign_OP (174)
    on left: 246 247 248, on right: 77
Add_OP (175)
    on left: 249 250 251 252, on right: 184 247


State 0

    0 $accept: . SourceFile $end

    PACKAGE  shift, and go to state 1

    SourceFile     go to state 2
    PackageClause  go to state 3


State 1

   24 PackageClause: PACKAGE . PackageName

    IDENTIFIER  shift, and go to state 4

    PackageName  go to state 5


State 2

    0 $accept: SourceFile . $end

    $end  shift, and go to state 6


State 3

    1 SourceFile: PackageClause . SCOLON
    2           | PackageClause . SCOLON ImportDeclList
    3           | PackageClause . SCOLON TopLevelDeclList
    4           | PackageClause . SCOLON ImportDeclList TopLevelDeclList

    SCOLON  shift, and go to state 7


State 4

   25 PackageName: IDENTIFIER .

    $default  reduce using rule 25 (PackageName)


State 5

   24 PackageClause: PACKAGE PackageName .

    $default  reduce using rule 24 (PackageClause)


State 6

    0 $accept: SourceFile $end .

    $default  accept


State 7

    1 SourceFile: PackageClause SCOLON .
    2           | PackageClause SCOLON . ImportDeclList
    3           | PackageClause SCOLON . TopLevelDeclList
    4           | PackageClause SCOLON . ImportDeclList TopLevelDeclList

    FUNC    shift, and go to state 8
    IMPORT  shift, and go to state 9
    VAR     shift, and go to state 10
    CONST   shift, and go to state 11
    TYPE    shift, and go to state 12

    $default  reduce using rule 1 (SourceFile)

    ImportDeclList    go to state 13
    ImportDecl        go to state 14
    TopLevelDeclList  go to state 15
    TopLevelDecl      go to state 16
    Declaration       go to state 17
    FunctionDecl      go to state 18
    MethodDecl        go to state 19
    VarDecl           go to state 20
    ConstDecl         go to state 21
    TypeDecl          go to state 22


State 8

   61 FunctionDecl: FUNC . FunctionName Signature FunctionBody
   62             | FUNC . FunctionName Signature
   64 MethodDecl: FUNC . Receiver IDENTIFIER Signature
   65           | FUNC . Receiver IDENTIFIER Signature FunctionBody

    LEFTPARAN   shift, and go to state 23
    IDENTIFIER  shift, and go to state 24

    FunctionName  go to state 25
    Parameters    go to state 26
    Receiver      go to state 27


State 9

   28 ImportDecl: IMPORT . LEFTPARAN ImportSpecList RIGHTPARAN
   29           | IMPORT . LEFTPARAN RIGHTPARAN
   30           | IMPORT . ImportSpec

    LEFTPARAN           shift, and go to state 28
    DOT                 shift, and go to state 29
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    IDENTIFIER          shift, and go to state 4

    PackageName  go to state 32
    ImportSpec   go to state 33
    ImportPath   go to state 34
    String       go to state 35


State 10

   79 VarDecl: VAR . VarSpec
   80        | VAR . LEFTPARAN VarSpecList RIGHTPARAN
   81        | VAR . LEFTPARAN RIGHTPARAN

    LEFTPARAN   shift, and go to state 36
    IDENTIFIER  shift, and go to state 37

    VarSpec         go to state 38
    IdentifierList  go to state 39


State 11

   87 ConstDecl: CONST . ConstSpec
   88          | CONST . LEFTPARAN ConstSpecList RIGHTPARAN
   89          | CONST . LEFTPARAN RIGHTPARAN

    LEFTPARAN   shift, and go to state 40
    IDENTIFIER  shift, and go to state 37

    ConstSpec       go to state 41
    IdentifierList  go to state 42


State 12

  218 TypeDecl: TYPE . LEFTPARAN TypeSpecList RIGHTPARAN
  219         | TYPE . TypeSpec

    LEFTPARAN   shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    TypeSpec   go to state 45
    AliasDecl  go to state 46
    TypeDef    go to state 47


State 13

    2 SourceFile: PackageClause SCOLON ImportDeclList .
    4           | PackageClause SCOLON ImportDeclList . TopLevelDeclList
   26 ImportDeclList: ImportDeclList . ImportDecl SCOLON

    FUNC    shift, and go to state 8
    IMPORT  shift, and go to state 9
    VAR     shift, and go to state 10
    CONST   shift, and go to state 11
    TYPE    shift, and go to state 12

    $default  reduce using rule 2 (SourceFile)

    ImportDecl        go to state 48
    TopLevelDeclList  go to state 49
    TopLevelDecl      go to state 16
    Declaration       go to state 17
    FunctionDecl      go to state 18
    MethodDecl        go to state 19
    VarDecl           go to state 20
    ConstDecl         go to state 21
    TypeDecl          go to state 22


State 14

   27 ImportDeclList: ImportDecl . SCOLON

    SCOLON  shift, and go to state 50


State 15

    3 SourceFile: PackageClause SCOLON TopLevelDeclList .
   37 TopLevelDeclList: TopLevelDeclList . TopLevelDecl SCOLON

    FUNC   shift, and go to state 8
    VAR    shift, and go to state 10
    CONST  shift, and go to state 11
    TYPE   shift, and go to state 12

    $default  reduce using rule 3 (SourceFile)

    TopLevelDecl  go to state 51
    Declaration   go to state 17
    FunctionDecl  go to state 18
    MethodDecl    go to state 19
    VarDecl       go to state 20
    ConstDecl     go to state 21
    TypeDecl      go to state 22


State 16

   38 TopLevelDeclList: TopLevelDecl . SCOLON

    SCOLON  shift, and go to state 52


State 17

   39 TopLevelDecl: Declaration .

    $default  reduce using rule 39 (TopLevelDecl)


State 18

   40 TopLevelDecl: FunctionDecl .

    $default  reduce using rule 40 (TopLevelDecl)


State 19

   41 TopLevelDecl: MethodDecl .

    $default  reduce using rule 41 (TopLevelDecl)


State 20

   59 Declaration: VarDecl .

    $default  reduce using rule 59 (Declaration)


State 21

   60 Declaration: ConstDecl .

    $default  reduce using rule 60 (Declaration)


State 22

   58 Declaration: TypeDecl .

    $default  reduce using rule 58 (Declaration)


State 23

  100 Parameters: LEFTPARAN . RIGHTPARAN
  101           | LEFTPARAN . ParameterList RIGHTPARAN
  102           | LEFTPARAN . ParameterList COMMA RIGHTPARAN

    ELIPSIS     shift, and go to state 53
    RIGHTPARAN  shift, and go to state 54
    IDENTIFIER  shift, and go to state 37

    ParameterList   go to state 55
    ParameterDecl   go to state 56
    IdentifierList  go to state 57


State 24

   63 FunctionName: IDENTIFIER .

    $default  reduce using rule 63 (FunctionName)


State 25

   61 FunctionDecl: FUNC FunctionName . Signature FunctionBody
   62             | FUNC FunctionName . Signature

    LEFTPARAN  shift, and go to state 23

    Signature   go to state 58
    Parameters  go to state 59


State 26

  111 Receiver: Parameters .

    $default  reduce using rule 111 (Receiver)


State 27

   64 MethodDecl: FUNC Receiver . IDENTIFIER Signature
   65           | FUNC Receiver . IDENTIFIER Signature FunctionBody

    IDENTIFIER  shift, and go to state 60


State 28

   28 ImportDecl: IMPORT LEFTPARAN . ImportSpecList RIGHTPARAN
   29           | IMPORT LEFTPARAN . RIGHTPARAN

    RIGHTPARAN          shift, and go to state 61
    DOT                 shift, and go to state 29
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 32
    ImportSpecList  go to state 62
    ImportSpec      go to state 63
    ImportPath      go to state 34
    String          go to state 35


State 29

   34 ImportSpec: DOT . ImportPath

    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31

    ImportPath  go to state 64
    String      go to state 35


State 30

  244 String: RAW_STRING .

    $default  reduce using rule 244 (String)


State 31

  245 String: INTERPRETED_STRING .

    $default  reduce using rule 245 (String)


State 32

   33 ImportSpec: PackageName . ImportPath

    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31

    ImportPath  go to state 65
    String      go to state 35


State 33

   30 ImportDecl: IMPORT ImportSpec .

    $default  reduce using rule 30 (ImportDecl)


State 34

   35 ImportSpec: ImportPath .

    $default  reduce using rule 35 (ImportSpec)


State 35

   36 ImportPath: String .

    $default  reduce using rule 36 (ImportPath)


State 36

   80 VarDecl: VAR LEFTPARAN . VarSpecList RIGHTPARAN
   81        | VAR LEFTPARAN . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 66
    IDENTIFIER  shift, and go to state 37

    VarSpecList     go to state 67
    VarSpec         go to state 68
    IdentifierList  go to state 39


State 37

  109 IdentifierList: IDENTIFIER .

    $default  reduce using rule 109 (IdentifierList)


State 38

   79 VarDecl: VAR VarSpec .

    $default  reduce using rule 79 (VarDecl)


State 39

   84 VarSpec: IdentifierList . Type
   85        | IdentifierList . Type EQ ExpressionList
   86        | IdentifierList . EQ ExpressionList
  108 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    EQ          shift, and go to state 72
    LEFTSQUARE  shift, and go to state 73
    COMMA       shift, and go to state 74
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 79
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 40

   88 ConstDecl: CONST LEFTPARAN . ConstSpecList RIGHTPARAN
   89          | CONST LEFTPARAN . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 86
    IDENTIFIER  shift, and go to state 37

    ConstSpecList   go to state 87
    ConstSpec       go to state 88
    IdentifierList  go to state 42


State 41

   87 ConstDecl: CONST ConstSpec .

    $default  reduce using rule 87 (ConstDecl)


State 42

   92 ConstSpec: IdentifierList . Type
   93          | IdentifierList . Type EQ ExpressionList
   94          | IdentifierList . EQ ExpressionList
  108 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    EQ          shift, and go to state 89
    LEFTSQUARE  shift, and go to state 73
    COMMA       shift, and go to state 74
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 90
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 43

  218 TypeDecl: TYPE LEFTPARAN . TypeSpecList RIGHTPARAN

    IDENTIFIER  shift, and go to state 44

    TypeSpecList  go to state 91
    TypeSpec      go to state 92
    AliasDecl     go to state 46
    TypeDef       go to state 47


State 44

  224 AliasDecl: IDENTIFIER . EQ Type
  225 TypeDef: IDENTIFIER . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    EQ          shift, and go to state 93
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 94
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 45

  219 TypeDecl: TYPE TypeSpec .

    $default  reduce using rule 219 (TypeDecl)


State 46

  222 TypeSpec: AliasDecl .

    $default  reduce using rule 222 (TypeSpec)


State 47

  223 TypeSpec: TypeDef .

    $default  reduce using rule 223 (TypeSpec)


State 48

   26 ImportDeclList: ImportDeclList ImportDecl . SCOLON

    SCOLON  shift, and go to state 95


State 49

    4 SourceFile: PackageClause SCOLON ImportDeclList TopLevelDeclList .
   37 TopLevelDeclList: TopLevelDeclList . TopLevelDecl SCOLON

    FUNC   shift, and go to state 8
    VAR    shift, and go to state 10
    CONST  shift, and go to state 11
    TYPE   shift, and go to state 12

    $default  reduce using rule 4 (SourceFile)

    TopLevelDecl  go to state 51
    Declaration   go to state 17
    FunctionDecl  go to state 18
    MethodDecl    go to state 19
    VarDecl       go to state 20
    ConstDecl     go to state 21
    TypeDecl      go to state 22


State 50

   27 ImportDeclList: ImportDecl SCOLON .

    $default  reduce using rule 27 (ImportDeclList)


State 51

   37 TopLevelDeclList: TopLevelDeclList TopLevelDecl . SCOLON

    SCOLON  shift, and go to state 96


State 52

   38 TopLevelDeclList: TopLevelDecl SCOLON .

    $default  reduce using rule 38 (TopLevelDeclList)


State 53

  107 ParameterDecl: ELIPSIS . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 97
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 54

  100 Parameters: LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 100 (Parameters)


State 55

  101 Parameters: LEFTPARAN ParameterList . RIGHTPARAN
  102           | LEFTPARAN ParameterList . COMMA RIGHTPARAN
  104 ParameterList: ParameterList . COMMA ParameterDecl

    RIGHTPARAN  shift, and go to state 98
    COMMA       shift, and go to state 99


State 56

  103 ParameterList: ParameterDecl .

    $default  reduce using rule 103 (ParameterList)


State 57

  105 ParameterDecl: IdentifierList . Type
  106              | IdentifierList . ELIPSIS Type
  108 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    ELIPSIS     shift, and go to state 100
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    COMMA       shift, and go to state 74
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 101
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 58

   61 FunctionDecl: FUNC FunctionName Signature . FunctionBody
   62             | FUNC FunctionName Signature .

    LEFTBRACE  shift, and go to state 102

    $default  reduce using rule 62 (FunctionDecl)

    Block         go to state 103
    FunctionBody  go to state 104


State 59

   96 Signature: Parameters .
   97          | Parameters . Result

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTPARAN   shift, and go to state 23
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    $default  reduce using rule 96 (Signature)

    PackageName     go to state 76
    Result          go to state 105
    Parameters      go to state 106
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 107
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 60

   64 MethodDecl: FUNC Receiver IDENTIFIER . Signature
   65           | FUNC Receiver IDENTIFIER . Signature FunctionBody

    LEFTPARAN  shift, and go to state 23

    Signature   go to state 108
    Parameters  go to state 59


State 61

   29 ImportDecl: IMPORT LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 29 (ImportDecl)


State 62

   28 ImportDecl: IMPORT LEFTPARAN ImportSpecList . RIGHTPARAN
   31 ImportSpecList: ImportSpecList . ImportSpec SCOLON

    RIGHTPARAN          shift, and go to state 109
    DOT                 shift, and go to state 29
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    IDENTIFIER          shift, and go to state 4

    PackageName  go to state 32
    ImportSpec   go to state 110
    ImportPath   go to state 34
    String       go to state 35


State 63

   32 ImportSpecList: ImportSpec . SCOLON

    SCOLON  shift, and go to state 111


State 64

   34 ImportSpec: DOT ImportPath .

    $default  reduce using rule 34 (ImportSpec)


State 65

   33 ImportSpec: PackageName ImportPath .

    $default  reduce using rule 33 (ImportSpec)


State 66

   81 VarDecl: VAR LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 81 (VarDecl)


State 67

   80 VarDecl: VAR LEFTPARAN VarSpecList . RIGHTPARAN
   82 VarSpecList: VarSpecList . VarSpec SCOLON

    RIGHTPARAN  shift, and go to state 112
    IDENTIFIER  shift, and go to state 37

    VarSpec         go to state 113
    IdentifierList  go to state 39


State 68

   83 VarSpecList: VarSpec . SCOLON

    SCOLON  shift, and go to state 114


State 69

  227 StructType: STRUCT . LEFTBRACE FieldDeclList RIGHTBRACE
  228           | STRUCT . LEFTBRACE RIGHTBRACE

    LEFTBRACE  shift, and go to state 115


State 70

  226 MapType: MAP . LEFTSQUARE Type RIGHTSQUARE Type

    LEFTSQUARE  shift, and go to state 116


State 71

  233 PointerType: MUL . BaseType

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 117
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    BaseType        go to state 118
    ArrayType       go to state 85


State 72

   86 VarSpec: IdentifierList EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 138
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    ExpressionList  go to state 147
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 73

  117 LiteralType: LEFTSQUARE . ELIPSIS RIGHTSQUARE Operand
  129 SliceType: LEFTSQUARE . RIGHTSQUARE Type
  235 ArrayType: LEFTSQUARE . Expression RIGHTSQUARE Type

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ELIPSIS             shift, and go to state 151
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTSQUARE         shift, and go to state 152
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 153
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 74

  108 IdentifierList: IdentifierList COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 154


State 75

   25 PackageName: IDENTIFIER .
  124 OperandName: IDENTIFIER .

    DOT       reduce using rule 25 (PackageName)
    DOT       [reduce using rule 124 (OperandName)]
    $default  reduce using rule 124 (OperandName)


State 76

  110 QualifiedIdent: PackageName . DOT IDENTIFIER

    DOT  shift, and go to state 155


State 77

  125 OperandName: QualifiedIdent .

    $default  reduce using rule 125 (OperandName)


State 78

  119 Type: LiteralType .

    $default  reduce using rule 119 (Type)


State 79

   84 VarSpec: IdentifierList Type .
   85        | IdentifierList Type . EQ ExpressionList

    EQ  shift, and go to state 156

    $default  reduce using rule 84 (VarSpec)


State 80

  120 Type: OperandName .

    $default  reduce using rule 120 (Type)


State 81

  116 LiteralType: SliceType .

    $default  reduce using rule 116 (LiteralType)


State 82

  118 LiteralType: MapType .

    $default  reduce using rule 118 (LiteralType)


State 83

  113 LiteralType: StructType .

    $default  reduce using rule 113 (LiteralType)


State 84

  115 LiteralType: PointerType .

    $default  reduce using rule 115 (LiteralType)


State 85

  114 LiteralType: ArrayType .

    $default  reduce using rule 114 (LiteralType)


State 86

   89 ConstDecl: CONST LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 89 (ConstDecl)


State 87

   88 ConstDecl: CONST LEFTPARAN ConstSpecList . RIGHTPARAN
   90 ConstSpecList: ConstSpecList . ConstSpec SCOLON

    RIGHTPARAN  shift, and go to state 157
    IDENTIFIER  shift, and go to state 37

    ConstSpec       go to state 158
    IdentifierList  go to state 42


State 88

   91 ConstSpecList: ConstSpec . SCOLON

    SCOLON  shift, and go to state 159


State 89

   94 ConstSpec: IdentifierList EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 138
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    ExpressionList  go to state 160
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 90

   92 ConstSpec: IdentifierList Type .
   93          | IdentifierList Type . EQ ExpressionList

    EQ  shift, and go to state 161

    $default  reduce using rule 92 (ConstSpec)


State 91

  218 TypeDecl: TYPE LEFTPARAN TypeSpecList . RIGHTPARAN
  220 TypeSpecList: TypeSpecList . TypeSpec SCOLON

    RIGHTPARAN  shift, and go to state 162
    IDENTIFIER  shift, and go to state 44

    TypeSpec   go to state 163
    AliasDecl  go to state 46
    TypeDef    go to state 47


State 92

  221 TypeSpecList: TypeSpec . SCOLON

    SCOLON  shift, and go to state 164


State 93

  224 AliasDecl: IDENTIFIER EQ . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 165
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 94

  225 TypeDef: IDENTIFIER Type .

    $default  reduce using rule 225 (TypeDef)


State 95

   26 ImportDeclList: ImportDeclList ImportDecl SCOLON .

    $default  reduce using rule 26 (ImportDeclList)


State 96

   37 TopLevelDeclList: TopLevelDeclList TopLevelDecl SCOLON .

    $default  reduce using rule 37 (TopLevelDeclList)


State 97

  107 ParameterDecl: ELIPSIS Type .

    $default  reduce using rule 107 (ParameterDecl)


State 98

  101 Parameters: LEFTPARAN ParameterList RIGHTPARAN .

    $default  reduce using rule 101 (Parameters)


State 99

  102 Parameters: LEFTPARAN ParameterList COMMA . RIGHTPARAN
  104 ParameterList: ParameterList COMMA . ParameterDecl

    ELIPSIS     shift, and go to state 53
    RIGHTPARAN  shift, and go to state 166
    IDENTIFIER  shift, and go to state 37

    ParameterDecl   go to state 167
    IdentifierList  go to state 57


State 100

  106 ParameterDecl: IdentifierList ELIPSIS . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 168
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 101

  105 ParameterDecl: IdentifierList Type .

    $default  reduce using rule 105 (ParameterDecl)


State 102

   42 Block: LEFTBRACE . StatementList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    BREAK               shift, and go to state 169
    CONTINUE            shift, and go to state 170
    RETURN              shift, and go to state 171
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 172
    FOR                 shift, and go to state 173
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 174
    NEW                 shift, and go to state 123
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    GOTO                shift, and go to state 175
    FALLTHROUGH         shift, and go to state 176
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 177

    $default  reduce using rule 73 (EmptyStmt)

    Unary_OP         go to state 133
    PackageName      go to state 76
    Block            go to state 178
    StatementList    go to state 179
    Statement        go to state 180
    Declaration      go to state 181
    LabeledStmt      go to state 182
    Label            go to state 183
    SimpleStmt       go to state 184
    EmptyStmt        go to state 185
    ExpressionStmt   go to state 186
    IncDecStmt       go to state 187
    Assignment       go to state 188
    ShortVarDecl     go to state 189
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 190
    QualifiedIdent   go to state 77
    CompositeLit     go to state 134
    LiteralType      go to state 135
    Operand          go to state 136
    OperandName      go to state 137
    SliceType        go to state 81
    ReturnStmt       go to state 191
    BreakStmt        go to state 192
    ContinueStmt     go to state 193
    GotoStmt         go to state 194
    SwitchStmt       go to state 195
    ExprSwitchStmt   go to state 196
    FallthroughStmt  go to state 197
    IfStmt           go to state 198
    ForStmt          go to state 199
    Expression       go to state 200
    ExpressionOR     go to state 139
    ExpressionAND    go to state 140
    ExpressionREL    go to state 141
    ExpressionADD    go to state 142
    ExpressionMUL    go to state 143
    UnaryExpr        go to state 144
    PrimaryExpr      go to state 145
    MakeExpr         go to state 146
    ExpressionList   go to state 201
    TypeDecl         go to state 22
    MapType          go to state 82
    StructType       go to state 83
    PointerType      go to state 84
    ArrayType        go to state 85
    Literal          go to state 148
    BasicLit         go to state 149
    String           go to state 150


State 103

   95 FunctionBody: Block .

    $default  reduce using rule 95 (FunctionBody)


State 104

   61 FunctionDecl: FUNC FunctionName Signature FunctionBody .

    $default  reduce using rule 61 (FunctionDecl)


State 105

   97 Signature: Parameters Result .

    $default  reduce using rule 97 (Signature)


State 106

   98 Result: Parameters .

    $default  reduce using rule 98 (Result)


State 107

   99 Result: Type .

    $default  reduce using rule 99 (Result)


State 108

   64 MethodDecl: FUNC Receiver IDENTIFIER Signature .
   65           | FUNC Receiver IDENTIFIER Signature . FunctionBody

    LEFTBRACE  shift, and go to state 102

    $default  reduce using rule 64 (MethodDecl)

    Block         go to state 103
    FunctionBody  go to state 202


State 109

   28 ImportDecl: IMPORT LEFTPARAN ImportSpecList RIGHTPARAN .

    $default  reduce using rule 28 (ImportDecl)


State 110

   31 ImportSpecList: ImportSpecList ImportSpec . SCOLON

    SCOLON  shift, and go to state 203


State 111

   32 ImportSpecList: ImportSpec SCOLON .

    $default  reduce using rule 32 (ImportSpecList)


State 112

   80 VarDecl: VAR LEFTPARAN VarSpecList RIGHTPARAN .

    $default  reduce using rule 80 (VarDecl)


State 113

   82 VarSpecList: VarSpecList VarSpec . SCOLON

    SCOLON  shift, and go to state 204


State 114

   83 VarSpecList: VarSpec SCOLON .

    $default  reduce using rule 83 (VarSpecList)


State 115

  227 StructType: STRUCT LEFTBRACE . FieldDeclList RIGHTBRACE
  228           | STRUCT LEFTBRACE . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 205
    IDENTIFIER  shift, and go to state 37

    IdentifierList  go to state 206
    FieldDeclList   go to state 207
    FieldDecl       go to state 208


State 116

  226 MapType: MAP LEFTSQUARE . Type RIGHTSQUARE Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 209
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 117

  234 BaseType: Type .

    $default  reduce using rule 234 (BaseType)


State 118

  233 PointerType: MUL BaseType .

    $default  reduce using rule 233 (PointerType)


State 119

  238 BasicLit: INTEGER_VAL .

    $default  reduce using rule 238 (BasicLit)


State 120

  239 BasicLit: FLOAT_VAL .

    $default  reduce using rule 239 (BasicLit)


State 121

  242 BasicLit: TRUE .

    $default  reduce using rule 242 (BasicLit)


State 122

  243 BasicLit: FALSE .

    $default  reduce using rule 243 (BasicLit)


State 123

  212 MakeExpr: NEW . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN  shift, and go to state 210


State 124

  209 MakeExpr: MAKE . LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN
  210         | MAKE . LEFTPARAN Type COMMA Expression RIGHTPARAN
  211         | MAKE . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN  shift, and go to state 211


State 125

   18 Unary_OP: ADD .

    $default  reduce using rule 18 (Unary_OP)


State 126

   19 Unary_OP: SUB .

    $default  reduce using rule 19 (Unary_OP)


State 127

   20 Unary_OP: NOT .

    $default  reduce using rule 20 (Unary_OP)


State 128

   21 Unary_OP: XOR .

    $default  reduce using rule 21 (Unary_OP)


State 129

   22 Unary_OP: MUL .
  233 PointerType: MUL . BaseType

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    STRUCT      [reduce using rule 22 (Unary_OP)]
    MAP         [reduce using rule 22 (Unary_OP)]
    IDENTIFIER  [reduce using rule 22 (Unary_OP)]
    $default    reduce using rule 22 (Unary_OP)

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 117
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    BaseType        go to state 118
    ArrayType       go to state 85


State 130

   23 Unary_OP: AND .

    $default  reduce using rule 23 (Unary_OP)


State 131

  123 Operand: LEFTPARAN . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 212
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 132

  240 BasicLit: BYTE_VAL .

    $default  reduce using rule 240 (BasicLit)


State 133

  189 UnaryExpr: Unary_OP . PrimaryExpr

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    MUL                 shift, and go to state 71
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    PrimaryExpr     go to state 213
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 134

  237 Literal: CompositeLit .

    $default  reduce using rule 237 (Literal)


State 135

  112 CompositeLit: LiteralType . LiteralValue

    LEFTBRACE  shift, and go to state 214

    LiteralValue  go to state 215


State 136

  190 PrimaryExpr: Operand .

    $default  reduce using rule 190 (PrimaryExpr)


State 137

  122 Operand: OperandName .
  196 PrimaryExpr: OperandName . StructLiteral

    LEFTBRACE  shift, and go to state 216

    LEFTBRACE  [reduce using rule 122 (Operand)]
    $default   reduce using rule 122 (Operand)

    StructLiteral  go to state 217


State 138

  216 ExpressionList: Expression .
  217               | Expression . COMMA Expression

    COMMA  shift, and go to state 218

    $default  reduce using rule 216 (ExpressionList)


State 139

  177 Expression: ExpressionOR .
  178 ExpressionOR: ExpressionOR . LOGOR ExpressionAND

    LOGOR  shift, and go to state 219

    $default  reduce using rule 177 (Expression)


State 140

  179 ExpressionOR: ExpressionAND .
  180 ExpressionAND: ExpressionAND . LOGAND ExpressionREL

    LOGAND  shift, and go to state 220

    $default  reduce using rule 179 (ExpressionOR)


State 141

  181 ExpressionAND: ExpressionREL .
  182 ExpressionREL: ExpressionREL . Rel_OP ExpressionADD

    ISEQ    shift, and go to state 221
    NEQ     shift, and go to state 222
    LESSEQ  shift, and go to state 223
    GRTEQ   shift, and go to state 224
    GRT     shift, and go to state 225
    LESS    shift, and go to state 226

    $default  reduce using rule 181 (ExpressionAND)

    Rel_OP  go to state 227


State 142

  183 ExpressionREL: ExpressionADD .
  184 ExpressionADD: ExpressionADD . Add_OP ExpressionMUL

    $default  reduce using rule 183 (ExpressionREL)

    Add_OP  go to state 232


State 143

  185 ExpressionADD: ExpressionMUL .
  186 ExpressionMUL: ExpressionMUL . Mul_OP PrimaryExpr

    $default  reduce using rule 185 (ExpressionADD)

    Mul_OP  go to state 240


State 144

  187 ExpressionMUL: UnaryExpr .

    $default  reduce using rule 187 (ExpressionMUL)


State 145

  188 UnaryExpr: PrimaryExpr .
  192 PrimaryExpr: PrimaryExpr . Selector
  193            | PrimaryExpr . Index
  194            | PrimaryExpr . Slice
  195            | PrimaryExpr . Arguments
  197            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 241
    LEFTSQUARE  shift, and go to state 242
    DOT         shift, and go to state 243

    $default  reduce using rule 188 (UnaryExpr)

    Selector       go to state 244
    Index          go to state 245
    Slice          go to state 246
    TypeAssertion  go to state 247
    Arguments      go to state 248


State 146

  191 PrimaryExpr: MakeExpr .

    $default  reduce using rule 191 (PrimaryExpr)


State 147

   86 VarSpec: IdentifierList EQ ExpressionList .

    $default  reduce using rule 86 (VarSpec)


State 148

  121 Operand: Literal .

    $default  reduce using rule 121 (Operand)


State 149

  236 Literal: BasicLit .

    $default  reduce using rule 236 (Literal)


State 150

  241 BasicLit: String .

    $default  reduce using rule 241 (BasicLit)


State 151

  117 LiteralType: LEFTSQUARE ELIPSIS . RIGHTSQUARE Operand

    RIGHTSQUARE  shift, and go to state 249


State 152

  129 SliceType: LEFTSQUARE RIGHTSQUARE . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 250
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 153

  235 ArrayType: LEFTSQUARE Expression . RIGHTSQUARE Type

    RIGHTSQUARE  shift, and go to state 251


State 154

  108 IdentifierList: IdentifierList COMMA IDENTIFIER .

    $default  reduce using rule 108 (IdentifierList)


State 155

  110 QualifiedIdent: PackageName DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 252


State 156

   85 VarSpec: IdentifierList Type EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 138
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    ExpressionList  go to state 253
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 157

   88 ConstDecl: CONST LEFTPARAN ConstSpecList RIGHTPARAN .

    $default  reduce using rule 88 (ConstDecl)


State 158

   90 ConstSpecList: ConstSpecList ConstSpec . SCOLON

    SCOLON  shift, and go to state 254


State 159

   91 ConstSpecList: ConstSpec SCOLON .

    $default  reduce using rule 91 (ConstSpecList)


State 160

   94 ConstSpec: IdentifierList EQ ExpressionList .

    $default  reduce using rule 94 (ConstSpec)


State 161

   93 ConstSpec: IdentifierList Type EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 138
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    ExpressionList  go to state 255
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 162

  218 TypeDecl: TYPE LEFTPARAN TypeSpecList RIGHTPARAN .

    $default  reduce using rule 218 (TypeDecl)


State 163

  220 TypeSpecList: TypeSpecList TypeSpec . SCOLON

    SCOLON  shift, and go to state 256


State 164

  221 TypeSpecList: TypeSpec SCOLON .

    $default  reduce using rule 221 (TypeSpecList)


State 165

  224 AliasDecl: IDENTIFIER EQ Type .

    $default  reduce using rule 224 (AliasDecl)


State 166

  102 Parameters: LEFTPARAN ParameterList COMMA RIGHTPARAN .

    $default  reduce using rule 102 (Parameters)


State 167

  104 ParameterList: ParameterList COMMA ParameterDecl .

    $default  reduce using rule 104 (ParameterList)


State 168

  106 ParameterDecl: IdentifierList ELIPSIS Type .

    $default  reduce using rule 106 (ParameterDecl)


State 169

  140 BreakStmt: BREAK .
  141          | BREAK . Label

    IDENTIFIER  shift, and go to state 257

    $default  reduce using rule 140 (BreakStmt)

    Label  go to state 258


State 170

  142 ContinueStmt: CONTINUE .
  143             | CONTINUE . Label

    IDENTIFIER  shift, and go to state 257

    $default  reduce using rule 142 (ContinueStmt)

    Label  go to state 259


State 171

  138 ReturnStmt: RETURN .
  139           | RETURN . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    $default  reduce using rule 138 (ReturnStmt)

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 138
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    ExpressionList  go to state 260
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 172

  160 IfStmt: IF . Expression Block
  161       | IF . SimpleStmt SCOLON Expression Block
  162       | IF . Expression Block ELSE IfStmt
  163       | IF . Expression Block ELSE Block
  164       | IF . SimpleStmt SCOLON Expression Block ELSE IfStmt
  165       | IF . SimpleStmt SCOLON Expression Block ELSE Block

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 261

    $default  reduce using rule 73 (EmptyStmt)

    Unary_OP        go to state 133
    PackageName     go to state 76
    SimpleStmt      go to state 262
    EmptyStmt       go to state 185
    ExpressionStmt  go to state 186
    IncDecStmt      go to state 187
    Assignment      go to state 188
    ShortVarDecl    go to state 189
    IdentifierList  go to state 190
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 263
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    ExpressionList  go to state 201
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 173

  166 ForStmt: FOR . Block
  167        | FOR . ForClause Block
  168        | FOR . Condition Block
  169        | FOR . RangeClause Block

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    RANGE               shift, and go to state 264
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 261

    $default  reduce using rule 73 (EmptyStmt)

    Unary_OP        go to state 133
    PackageName     go to state 76
    Block           go to state 265
    Condition       go to state 266
    SimpleStmt      go to state 267
    EmptyStmt       go to state 185
    ExpressionStmt  go to state 186
    IncDecStmt      go to state 187
    Assignment      go to state 188
    ShortVarDecl    go to state 189
    IdentifierList  go to state 268
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    ForClause       go to state 269
    InitStmt        go to state 270
    RangeClause     go to state 271
    Expression      go to state 272
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    ExpressionList  go to state 273
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 174

  146 ExprSwitchStmt: SWITCH . LEFTBRACE RIGHTBRACE
  147               | SWITCH . SimpleStmt SCOLON LEFTBRACE RIGHTBRACE
  148               | SWITCH . Expression LEFTBRACE RIGHTBRACE
  149               | SWITCH . SimpleStmt SCOLON Expression LEFTBRACE RIGHTBRACE
  150               | SWITCH . LEFTBRACE ExprCaseClauseList RIGHTBRACE
  151               | SWITCH . SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE
  152               | SWITCH . Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE
  153               | SWITCH . SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 274
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 261

    $default  reduce using rule 73 (EmptyStmt)

    Unary_OP        go to state 133
    PackageName     go to state 76
    SimpleStmt      go to state 275
    EmptyStmt       go to state 185
    ExpressionStmt  go to state 186
    IncDecStmt      go to state 187
    Assignment      go to state 188
    ShortVarDecl    go to state 189
    IdentifierList  go to state 190
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 276
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    ExpressionList  go to state 201
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 175

  144 GotoStmt: GOTO . Label

    IDENTIFIER  shift, and go to state 257

    Label  go to state 277


State 176

  159 FallthroughStmt: FALLTHROUGH .

    $default  reduce using rule 159 (FallthroughStmt)


State 177

   25 PackageName: IDENTIFIER .
   67 Label: IDENTIFIER .
  109 IdentifierList: IDENTIFIER .
  124 OperandName: IDENTIFIER .

    INFER_EQ  reduce using rule 109 (IdentifierList)
    COLON     reduce using rule 67 (Label)
    DOT       reduce using rule 25 (PackageName)
    DOT       [reduce using rule 124 (OperandName)]
    COMMA     reduce using rule 109 (IdentifierList)
    COMMA     [reduce using rule 124 (OperandName)]
    $default  reduce using rule 124 (OperandName)


State 178

   55 Statement: Block .

    $default  reduce using rule 55 (Statement)


State 179

   42 Block: LEFTBRACE StatementList . RIGHTBRACE
   44 StatementList: StatementList . Statement SCOLON

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    BREAK               shift, and go to state 169
    CONTINUE            shift, and go to state 170
    RETURN              shift, and go to state 171
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 172
    FOR                 shift, and go to state 173
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 174
    NEW                 shift, and go to state 123
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    GOTO                shift, and go to state 175
    FALLTHROUGH         shift, and go to state 176
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTBRACE          shift, and go to state 278
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 177

    $default  reduce using rule 73 (EmptyStmt)

    Unary_OP         go to state 133
    PackageName      go to state 76
    Block            go to state 178
    Statement        go to state 279
    Declaration      go to state 181
    LabeledStmt      go to state 182
    Label            go to state 183
    SimpleStmt       go to state 184
    EmptyStmt        go to state 185
    ExpressionStmt   go to state 186
    IncDecStmt       go to state 187
    Assignment       go to state 188
    ShortVarDecl     go to state 189
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 190
    QualifiedIdent   go to state 77
    CompositeLit     go to state 134
    LiteralType      go to state 135
    Operand          go to state 136
    OperandName      go to state 137
    SliceType        go to state 81
    ReturnStmt       go to state 191
    BreakStmt        go to state 192
    ContinueStmt     go to state 193
    GotoStmt         go to state 194
    SwitchStmt       go to state 195
    ExprSwitchStmt   go to state 196
    FallthroughStmt  go to state 197
    IfStmt           go to state 198
    ForStmt          go to state 199
    Expression       go to state 200
    ExpressionOR     go to state 139
    ExpressionAND    go to state 140
    ExpressionREL    go to state 141
    ExpressionADD    go to state 142
    ExpressionMUL    go to state 143
    UnaryExpr        go to state 144
    PrimaryExpr      go to state 145
    MakeExpr         go to state 146
    ExpressionList   go to state 201
    TypeDecl         go to state 22
    MapType          go to state 82
    StructType       go to state 83
    PointerType      go to state 84
    ArrayType        go to state 85
    Literal          go to state 148
    BasicLit         go to state 149
    String           go to state 150


State 180

   45 StatementList: Statement . SCOLON

    SCOLON  shift, and go to state 280


State 181

   46 Statement: Declaration .

    $default  reduce using rule 46 (Statement)


State 182

   47 Statement: LabeledStmt .

    $default  reduce using rule 47 (Statement)


State 183

   66 LabeledStmt: Label . COLON Statement

    COLON  shift, and go to state 281


State 184

   48 Statement: SimpleStmt .

    $default  reduce using rule 48 (Statement)


State 185

   68 SimpleStmt: EmptyStmt .

    $default  reduce using rule 68 (SimpleStmt)


State 186

   69 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 69 (SimpleStmt)


State 187

   70 SimpleStmt: IncDecStmt .

    $default  reduce using rule 70 (SimpleStmt)


State 188

   71 SimpleStmt: Assignment .

    $default  reduce using rule 71 (SimpleStmt)


State 189

   72 SimpleStmt: ShortVarDecl .

    $default  reduce using rule 72 (SimpleStmt)


State 190

   78 ShortVarDecl: IdentifierList . INFER_EQ ExpressionList
  108 IdentifierList: IdentifierList . COMMA IDENTIFIER

    INFER_EQ  shift, and go to state 282
    COMMA     shift, and go to state 74


State 191

   49 Statement: ReturnStmt .

    $default  reduce using rule 49 (Statement)


State 192

   50 Statement: BreakStmt .

    $default  reduce using rule 50 (Statement)


State 193

   51 Statement: ContinueStmt .

    $default  reduce using rule 51 (Statement)


State 194

   52 Statement: GotoStmt .

    $default  reduce using rule 52 (Statement)


State 195

   53 Statement: SwitchStmt .

    $default  reduce using rule 53 (Statement)


State 196

  145 SwitchStmt: ExprSwitchStmt .

    $default  reduce using rule 145 (SwitchStmt)


State 197

   54 Statement: FallthroughStmt .

    $default  reduce using rule 54 (Statement)


State 198

   56 Statement: IfStmt .

    $default  reduce using rule 56 (Statement)


State 199

   57 Statement: ForStmt .

    $default  reduce using rule 57 (Statement)


State 200

   74 ExpressionStmt: Expression .
   75 IncDecStmt: Expression . PLUSPLUS
   76           | Expression . MINUSMINUS
  216 ExpressionList: Expression .
  217               | Expression . COMMA Expression

    PLUSPLUS    shift, and go to state 283
    MINUSMINUS  shift, and go to state 284
    COMMA       shift, and go to state 218

    SCOLON     reduce using rule 74 (ExpressionStmt)
    LEFTBRACE  reduce using rule 74 (ExpressionStmt)
    $default   reduce using rule 216 (ExpressionList)


State 201

   77 Assignment: ExpressionList . Assign_OP ExpressionList

    ANDNOT  shift, and go to state 233
    ADD     shift, and go to state 228
    SUB     shift, and go to state 229
    XOR     shift, and go to state 230
    MUL     shift, and go to state 234
    AND     shift, and go to state 235
    OR      shift, and go to state 231
    MOD     shift, and go to state 236
    QUOT    shift, and go to state 237
    SHL     shift, and go to state 238
    SHR     shift, and go to state 239
    EQ      shift, and go to state 285

    Mul_OP     go to state 286
    Assign_OP  go to state 287
    Add_OP     go to state 288


State 202

   65 MethodDecl: FUNC Receiver IDENTIFIER Signature FunctionBody .

    $default  reduce using rule 65 (MethodDecl)


State 203

   31 ImportSpecList: ImportSpecList ImportSpec SCOLON .

    $default  reduce using rule 31 (ImportSpecList)


State 204

   82 VarSpecList: VarSpecList VarSpec SCOLON .

    $default  reduce using rule 82 (VarSpecList)


State 205

  228 StructType: STRUCT LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 228 (StructType)


State 206

  108 IdentifierList: IdentifierList . COMMA IDENTIFIER
  231 FieldDecl: IdentifierList . Type String
  232          | IdentifierList . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    COMMA       shift, and go to state 74
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 289
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 207

  227 StructType: STRUCT LEFTBRACE FieldDeclList . RIGHTBRACE
  230 FieldDeclList: FieldDeclList . FieldDecl SCOLON

    RIGHTBRACE  shift, and go to state 290
    IDENTIFIER  shift, and go to state 37

    IdentifierList  go to state 206
    FieldDecl       go to state 291


State 208

  229 FieldDeclList: FieldDecl . SCOLON

    SCOLON  shift, and go to state 292


State 209

  226 MapType: MAP LEFTSQUARE Type . RIGHTSQUARE Type

    RIGHTSQUARE  shift, and go to state 293


State 210

  212 MakeExpr: NEW LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 294
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 211

  209 MakeExpr: MAKE LEFTPARAN . Type COMMA Expression COMMA Expression RIGHTPARAN
  210         | MAKE LEFTPARAN . Type COMMA Expression RIGHTPARAN
  211         | MAKE LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 295
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 212

  123 Operand: LEFTPARAN Expression . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 296


State 213

  189 UnaryExpr: Unary_OP PrimaryExpr .
  192 PrimaryExpr: PrimaryExpr . Selector
  193            | PrimaryExpr . Index
  194            | PrimaryExpr . Slice
  195            | PrimaryExpr . Arguments
  197            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 241
    LEFTSQUARE  shift, and go to state 242
    DOT         shift, and go to state 243

    $default  reduce using rule 189 (UnaryExpr)

    Selector       go to state 244
    Index          go to state 245
    Slice          go to state 246
    TypeAssertion  go to state 247
    Arguments      go to state 248


State 214

  126 LiteralValue: LEFTBRACE . RIGHTBRACE
  127             | LEFTBRACE . ElementList RIGHTBRACE
  128             | LEFTBRACE . ElementList COMMA RIGHTBRACE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTBRACE          shift, and go to state 297
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 214
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    LiteralValue    go to state 298
    SliceType       go to state 81
    ElementList     go to state 299
    KeyedElement    go to state 300
    Key             go to state 301
    Element         go to state 302
    Expression      go to state 303
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 215

  112 CompositeLit: LiteralType LiteralValue .

    $default  reduce using rule 112 (CompositeLit)


State 216

  198 StructLiteral: LEFTBRACE . KeyValueList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 304
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    KeyValueList    go to state 305
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 217

  196 PrimaryExpr: OperandName StructLiteral .

    $default  reduce using rule 196 (PrimaryExpr)


State 218

  217 ExpressionList: Expression COMMA . Expression

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 306
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 219

  178 ExpressionOR: ExpressionOR LOGOR . ExpressionAND

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    ExpressionAND   go to state 307
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 220

  180 ExpressionAND: ExpressionAND LOGAND . ExpressionREL

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    ExpressionREL   go to state 308
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 221

    5 Rel_OP: ISEQ .

    $default  reduce using rule 5 (Rel_OP)


State 222

    6 Rel_OP: NEQ .

    $default  reduce using rule 6 (Rel_OP)


State 223

    7 Rel_OP: LESSEQ .

    $default  reduce using rule 7 (Rel_OP)


State 224

    8 Rel_OP: GRTEQ .

    $default  reduce using rule 8 (Rel_OP)


State 225

    9 Rel_OP: GRT .

    $default  reduce using rule 9 (Rel_OP)


State 226

   10 Rel_OP: LESS .

    $default  reduce using rule 10 (Rel_OP)


State 227

  182 ExpressionREL: ExpressionREL Rel_OP . ExpressionADD

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    ExpressionADD   go to state 309
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 228

  249 Add_OP: ADD .

    $default  reduce using rule 249 (Add_OP)


State 229

  250 Add_OP: SUB .

    $default  reduce using rule 250 (Add_OP)


State 230

  252 Add_OP: XOR .

    $default  reduce using rule 252 (Add_OP)


State 231

  251 Add_OP: OR .

    $default  reduce using rule 251 (Add_OP)


State 232

  184 ExpressionADD: ExpressionADD Add_OP . ExpressionMUL

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    ExpressionMUL   go to state 310
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 233

   17 Mul_OP: ANDNOT .

    $default  reduce using rule 17 (Mul_OP)


State 234

   11 Mul_OP: MUL .

    $default  reduce using rule 11 (Mul_OP)


State 235

   16 Mul_OP: AND .

    $default  reduce using rule 16 (Mul_OP)


State 236

   13 Mul_OP: MOD .

    $default  reduce using rule 13 (Mul_OP)


State 237

   12 Mul_OP: QUOT .

    $default  reduce using rule 12 (Mul_OP)


State 238

   14 Mul_OP: SHL .

    $default  reduce using rule 14 (Mul_OP)


State 239

   15 Mul_OP: SHR .

    $default  reduce using rule 15 (Mul_OP)


State 240

  186 ExpressionMUL: ExpressionMUL Mul_OP . PrimaryExpr

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    MUL                 shift, and go to state 71
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    PrimaryExpr     go to state 311
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 241

  214 Arguments: LEFTPARAN . RIGHTPARAN
  215          | LEFTPARAN . ExpressionList ELIPSIS RIGHTPARAN

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTPARAN          shift, and go to state 312
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 138
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    ExpressionList  go to state 313
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 242

  202 Index: LEFTSQUARE . Expression RIGHTSQUARE
  203 Slice: LEFTSQUARE . COLON Expression RIGHTSQUARE
  204      | LEFTSQUARE . COLON RIGHTSQUARE
  205      | LEFTSQUARE . Expression COLON RIGHTSQUARE
  206      | LEFTSQUARE . Expression COLON Expression RIGHTSQUARE
  207      | LEFTSQUARE . COLON Expression COLON Expression RIGHTSQUARE
  208      | LEFTSQUARE . Expression COLON Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    COLON               shift, and go to state 314
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 315
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 243

  201 Selector: DOT . IDENTIFIER
  213 TypeAssertion: DOT . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN   shift, and go to state 316
    IDENTIFIER  shift, and go to state 317


State 244

  192 PrimaryExpr: PrimaryExpr Selector .

    $default  reduce using rule 192 (PrimaryExpr)


State 245

  193 PrimaryExpr: PrimaryExpr Index .

    $default  reduce using rule 193 (PrimaryExpr)


State 246

  194 PrimaryExpr: PrimaryExpr Slice .

    $default  reduce using rule 194 (PrimaryExpr)


State 247

  197 PrimaryExpr: PrimaryExpr TypeAssertion .

    $default  reduce using rule 197 (PrimaryExpr)


State 248

  195 PrimaryExpr: PrimaryExpr Arguments .

    $default  reduce using rule 195 (PrimaryExpr)


State 249

  117 LiteralType: LEFTSQUARE ELIPSIS RIGHTSQUARE . Operand

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    MAP                 shift, and go to state 70
    MUL                 shift, and go to state 71
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 318
    OperandName     go to state 319
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 250

  129 SliceType: LEFTSQUARE RIGHTSQUARE Type .

    $default  reduce using rule 129 (SliceType)


State 251

  235 ArrayType: LEFTSQUARE Expression RIGHTSQUARE . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 320
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 252

  110 QualifiedIdent: PackageName DOT IDENTIFIER .

    $default  reduce using rule 110 (QualifiedIdent)


State 253

   85 VarSpec: IdentifierList Type EQ ExpressionList .

    $default  reduce using rule 85 (VarSpec)


State 254

   90 ConstSpecList: ConstSpecList ConstSpec SCOLON .

    $default  reduce using rule 90 (ConstSpecList)


State 255

   93 ConstSpec: IdentifierList Type EQ ExpressionList .

    $default  reduce using rule 93 (ConstSpec)


State 256

  220 TypeSpecList: TypeSpecList TypeSpec SCOLON .

    $default  reduce using rule 220 (TypeSpecList)


State 257

   67 Label: IDENTIFIER .

    $default  reduce using rule 67 (Label)


State 258

  141 BreakStmt: BREAK Label .

    $default  reduce using rule 141 (BreakStmt)


State 259

  143 ContinueStmt: CONTINUE Label .

    $default  reduce using rule 143 (ContinueStmt)


State 260

  139 ReturnStmt: RETURN ExpressionList .

    $default  reduce using rule 139 (ReturnStmt)


State 261

   25 PackageName: IDENTIFIER .
  109 IdentifierList: IDENTIFIER .
  124 OperandName: IDENTIFIER .

    INFER_EQ  reduce using rule 109 (IdentifierList)
    DOT       reduce using rule 25 (PackageName)
    DOT       [reduce using rule 124 (OperandName)]
    COMMA     reduce using rule 109 (IdentifierList)
    COMMA     [reduce using rule 124 (OperandName)]
    $default  reduce using rule 124 (OperandName)


State 262

  161 IfStmt: IF SimpleStmt . SCOLON Expression Block
  164       | IF SimpleStmt . SCOLON Expression Block ELSE IfStmt
  165       | IF SimpleStmt . SCOLON Expression Block ELSE Block

    SCOLON  shift, and go to state 321


State 263

   74 ExpressionStmt: Expression .
   75 IncDecStmt: Expression . PLUSPLUS
   76           | Expression . MINUSMINUS
  160 IfStmt: IF Expression . Block
  162       | IF Expression . Block ELSE IfStmt
  163       | IF Expression . Block ELSE Block
  216 ExpressionList: Expression .
  217               | Expression . COMMA Expression

    PLUSPLUS    shift, and go to state 283
    MINUSMINUS  shift, and go to state 284
    LEFTBRACE   shift, and go to state 102
    COMMA       shift, and go to state 218

    SCOLON    reduce using rule 74 (ExpressionStmt)
    $default  reduce using rule 216 (ExpressionList)

    Block  go to state 322


State 264

  174 RangeClause: RANGE . Expression

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 323
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 265

  166 ForStmt: FOR Block .

    $default  reduce using rule 166 (ForStmt)


State 266

  168 ForStmt: FOR Condition . Block

    LEFTBRACE  shift, and go to state 102

    Block  go to state 324


State 267

  172 InitStmt: SimpleStmt .

    $default  reduce using rule 172 (InitStmt)


State 268

   78 ShortVarDecl: IdentifierList . INFER_EQ ExpressionList
  108 IdentifierList: IdentifierList . COMMA IDENTIFIER
  175 RangeClause: IdentifierList . INFER_EQ RANGE Expression

    INFER_EQ  shift, and go to state 325
    COMMA     shift, and go to state 74


State 269

  167 ForStmt: FOR ForClause . Block

    LEFTBRACE  shift, and go to state 102

    Block  go to state 326


State 270

  170 ForClause: InitStmt . SCOLON SCOLON PostStmt
  171          | InitStmt . SCOLON Condition SCOLON PostStmt

    SCOLON  shift, and go to state 327


State 271

  169 ForStmt: FOR RangeClause . Block

    LEFTBRACE  shift, and go to state 102

    Block  go to state 328


State 272

   43 Condition: Expression .
   74 ExpressionStmt: Expression .
   75 IncDecStmt: Expression . PLUSPLUS
   76           | Expression . MINUSMINUS
  216 ExpressionList: Expression .
  217               | Expression . COMMA Expression

    PLUSPLUS    shift, and go to state 283
    MINUSMINUS  shift, and go to state 284
    COMMA       shift, and go to state 218

    SCOLON     reduce using rule 74 (ExpressionStmt)
    LEFTBRACE  reduce using rule 43 (Condition)
    $default   reduce using rule 216 (ExpressionList)


State 273

   77 Assignment: ExpressionList . Assign_OP ExpressionList
  176 RangeClause: ExpressionList . EQ RANGE Expression

    ANDNOT  shift, and go to state 233
    ADD     shift, and go to state 228
    SUB     shift, and go to state 229
    XOR     shift, and go to state 230
    MUL     shift, and go to state 234
    AND     shift, and go to state 235
    OR      shift, and go to state 231
    MOD     shift, and go to state 236
    QUOT    shift, and go to state 237
    SHL     shift, and go to state 238
    SHR     shift, and go to state 239
    EQ      shift, and go to state 329

    Mul_OP     go to state 286
    Assign_OP  go to state 287
    Add_OP     go to state 288


State 274

  146 ExprSwitchStmt: SWITCH LEFTBRACE . RIGHTBRACE
  150               | SWITCH LEFTBRACE . ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 332

    ExprCaseClauseList  go to state 333
    ExprCaseClause      go to state 334
    ExprSwitchCase      go to state 335


State 275

  147 ExprSwitchStmt: SWITCH SimpleStmt . SCOLON LEFTBRACE RIGHTBRACE
  149               | SWITCH SimpleStmt . SCOLON Expression LEFTBRACE RIGHTBRACE
  151               | SWITCH SimpleStmt . SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE
  153               | SWITCH SimpleStmt . SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

    SCOLON  shift, and go to state 336


State 276

   74 ExpressionStmt: Expression .
   75 IncDecStmt: Expression . PLUSPLUS
   76           | Expression . MINUSMINUS
  148 ExprSwitchStmt: SWITCH Expression . LEFTBRACE RIGHTBRACE
  152               | SWITCH Expression . LEFTBRACE ExprCaseClauseList RIGHTBRACE
  216 ExpressionList: Expression .
  217               | Expression . COMMA Expression

    PLUSPLUS    shift, and go to state 283
    MINUSMINUS  shift, and go to state 284
    LEFTBRACE   shift, and go to state 337
    COMMA       shift, and go to state 218

    SCOLON    reduce using rule 74 (ExpressionStmt)
    $default  reduce using rule 216 (ExpressionList)


State 277

  144 GotoStmt: GOTO Label .

    $default  reduce using rule 144 (GotoStmt)


State 278

   42 Block: LEFTBRACE StatementList RIGHTBRACE .

    $default  reduce using rule 42 (Block)


State 279

   44 StatementList: StatementList Statement . SCOLON

    SCOLON  shift, and go to state 338


State 280

   45 StatementList: Statement SCOLON .

    $default  reduce using rule 45 (StatementList)


State 281

   66 LabeledStmt: Label COLON . Statement

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    BREAK               shift, and go to state 169
    CONTINUE            shift, and go to state 170
    RETURN              shift, and go to state 171
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 172
    FOR                 shift, and go to state 173
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 174
    NEW                 shift, and go to state 123
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    GOTO                shift, and go to state 175
    FALLTHROUGH         shift, and go to state 176
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 177

    $default  reduce using rule 73 (EmptyStmt)

    Unary_OP         go to state 133
    PackageName      go to state 76
    Block            go to state 178
    Statement        go to state 339
    Declaration      go to state 181
    LabeledStmt      go to state 182
    Label            go to state 183
    SimpleStmt       go to state 184
    EmptyStmt        go to state 185
    ExpressionStmt   go to state 186
    IncDecStmt       go to state 187
    Assignment       go to state 188
    ShortVarDecl     go to state 189
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 190
    QualifiedIdent   go to state 77
    CompositeLit     go to state 134
    LiteralType      go to state 135
    Operand          go to state 136
    OperandName      go to state 137
    SliceType        go to state 81
    ReturnStmt       go to state 191
    BreakStmt        go to state 192
    ContinueStmt     go to state 193
    GotoStmt         go to state 194
    SwitchStmt       go to state 195
    ExprSwitchStmt   go to state 196
    FallthroughStmt  go to state 197
    IfStmt           go to state 198
    ForStmt          go to state 199
    Expression       go to state 200
    ExpressionOR     go to state 139
    ExpressionAND    go to state 140
    ExpressionREL    go to state 141
    ExpressionADD    go to state 142
    ExpressionMUL    go to state 143
    UnaryExpr        go to state 144
    PrimaryExpr      go to state 145
    MakeExpr         go to state 146
    ExpressionList   go to state 201
    TypeDecl         go to state 22
    MapType          go to state 82
    StructType       go to state 83
    PointerType      go to state 84
    ArrayType        go to state 85
    Literal          go to state 148
    BasicLit         go to state 149
    String           go to state 150


State 282

   78 ShortVarDecl: IdentifierList INFER_EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 138
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    ExpressionList  go to state 340
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 283

   75 IncDecStmt: Expression PLUSPLUS .

    $default  reduce using rule 75 (IncDecStmt)


State 284

   76 IncDecStmt: Expression MINUSMINUS .

    $default  reduce using rule 76 (IncDecStmt)


State 285

  246 Assign_OP: EQ .

    $default  reduce using rule 246 (Assign_OP)


State 286

  248 Assign_OP: Mul_OP . EQ

    EQ  shift, and go to state 341


State 287

   77 Assignment: ExpressionList Assign_OP . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 138
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    ExpressionList  go to state 342
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 288

  247 Assign_OP: Add_OP . EQ

    EQ  shift, and go to state 343


State 289

  231 FieldDecl: IdentifierList Type . String
  232          | IdentifierList Type .

    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31

    $default  reduce using rule 232 (FieldDecl)

    String  go to state 344


State 290

  227 StructType: STRUCT LEFTBRACE FieldDeclList RIGHTBRACE .

    $default  reduce using rule 227 (StructType)


State 291

  230 FieldDeclList: FieldDeclList FieldDecl . SCOLON

    SCOLON  shift, and go to state 345


State 292

  229 FieldDeclList: FieldDecl SCOLON .

    $default  reduce using rule 229 (FieldDeclList)


State 293

  226 MapType: MAP LEFTSQUARE Type RIGHTSQUARE . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 346
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 294

  212 MakeExpr: NEW LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 347


State 295

  209 MakeExpr: MAKE LEFTPARAN Type . COMMA Expression COMMA Expression RIGHTPARAN
  210         | MAKE LEFTPARAN Type . COMMA Expression RIGHTPARAN
  211         | MAKE LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 348
    COMMA       shift, and go to state 349


State 296

  123 Operand: LEFTPARAN Expression RIGHTPARAN .

    $default  reduce using rule 123 (Operand)


State 297

  126 LiteralValue: LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 126 (LiteralValue)


State 298

  135 Key: LiteralValue .
  137 Element: LiteralValue .

    COLON     reduce using rule 135 (Key)
    $default  reduce using rule 137 (Element)


State 299

  127 LiteralValue: LEFTBRACE ElementList . RIGHTBRACE
  128             | LEFTBRACE ElementList . COMMA RIGHTBRACE
  131 ElementList: ElementList . COMMA KeyedElement

    RIGHTBRACE  shift, and go to state 350
    COMMA       shift, and go to state 351


State 300

  130 ElementList: KeyedElement .

    $default  reduce using rule 130 (ElementList)


State 301

  133 KeyedElement: Key . COLON Element

    COLON  shift, and go to state 352


State 302

  132 KeyedElement: Element .

    $default  reduce using rule 132 (KeyedElement)


State 303

  134 Key: Expression .
  136 Element: Expression .

    COLON     reduce using rule 134 (Key)
    $default  reduce using rule 136 (Element)


State 304

  199 KeyValueList: Expression . COLON Expression
  200             | Expression . COLON Expression COMMA KeyValueList

    COLON  shift, and go to state 353


State 305

  198 StructLiteral: LEFTBRACE KeyValueList . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 354


State 306

  217 ExpressionList: Expression COMMA Expression .

    $default  reduce using rule 217 (ExpressionList)


State 307

  178 ExpressionOR: ExpressionOR LOGOR ExpressionAND .
  180 ExpressionAND: ExpressionAND . LOGAND ExpressionREL

    LOGAND  shift, and go to state 220

    $default  reduce using rule 178 (ExpressionOR)


State 308

  180 ExpressionAND: ExpressionAND LOGAND ExpressionREL .
  182 ExpressionREL: ExpressionREL . Rel_OP ExpressionADD

    ISEQ    shift, and go to state 221
    NEQ     shift, and go to state 222
    LESSEQ  shift, and go to state 223
    GRTEQ   shift, and go to state 224
    GRT     shift, and go to state 225
    LESS    shift, and go to state 226

    $default  reduce using rule 180 (ExpressionAND)

    Rel_OP  go to state 227


State 309

  182 ExpressionREL: ExpressionREL Rel_OP ExpressionADD .
  184 ExpressionADD: ExpressionADD . Add_OP ExpressionMUL

    ADD  shift, and go to state 228
    SUB  shift, and go to state 229
    XOR  shift, and go to state 230
    OR   shift, and go to state 231

    $default  reduce using rule 182 (ExpressionREL)

    Add_OP  go to state 232


State 310

  184 ExpressionADD: ExpressionADD Add_OP ExpressionMUL .
  186 ExpressionMUL: ExpressionMUL . Mul_OP PrimaryExpr

    ANDNOT  shift, and go to state 233
    MUL     shift, and go to state 234
    AND     shift, and go to state 235
    MOD     shift, and go to state 236
    QUOT    shift, and go to state 237
    SHL     shift, and go to state 238
    SHR     shift, and go to state 239

    $default  reduce using rule 184 (ExpressionADD)

    Mul_OP  go to state 240


State 311

  186 ExpressionMUL: ExpressionMUL Mul_OP PrimaryExpr .
  192 PrimaryExpr: PrimaryExpr . Selector
  193            | PrimaryExpr . Index
  194            | PrimaryExpr . Slice
  195            | PrimaryExpr . Arguments
  197            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 241
    LEFTSQUARE  shift, and go to state 242
    DOT         shift, and go to state 243

    $default  reduce using rule 186 (ExpressionMUL)

    Selector       go to state 244
    Index          go to state 245
    Slice          go to state 246
    TypeAssertion  go to state 247
    Arguments      go to state 248


State 312

  214 Arguments: LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 214 (Arguments)


State 313

  215 Arguments: LEFTPARAN ExpressionList . ELIPSIS RIGHTPARAN

    ELIPSIS  shift, and go to state 355


State 314

  203 Slice: LEFTSQUARE COLON . Expression RIGHTSQUARE
  204      | LEFTSQUARE COLON . RIGHTSQUARE
  207      | LEFTSQUARE COLON . Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTSQUARE         shift, and go to state 356
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 357
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 315

  202 Index: LEFTSQUARE Expression . RIGHTSQUARE
  205 Slice: LEFTSQUARE Expression . COLON RIGHTSQUARE
  206      | LEFTSQUARE Expression . COLON Expression RIGHTSQUARE
  208      | LEFTSQUARE Expression . COLON Expression COLON Expression RIGHTSQUARE

    RIGHTSQUARE  shift, and go to state 358
    COLON        shift, and go to state 359


State 316

  213 TypeAssertion: DOT LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 360
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 317

  201 Selector: DOT IDENTIFIER .

    $default  reduce using rule 201 (Selector)


State 318

  117 LiteralType: LEFTSQUARE ELIPSIS RIGHTSQUARE Operand .

    $default  reduce using rule 117 (LiteralType)


State 319

  122 Operand: OperandName .

    $default  reduce using rule 122 (Operand)


State 320

  235 ArrayType: LEFTSQUARE Expression RIGHTSQUARE Type .

    $default  reduce using rule 235 (ArrayType)


State 321

  161 IfStmt: IF SimpleStmt SCOLON . Expression Block
  164       | IF SimpleStmt SCOLON . Expression Block ELSE IfStmt
  165       | IF SimpleStmt SCOLON . Expression Block ELSE Block

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 361
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 322

  160 IfStmt: IF Expression Block .
  162       | IF Expression Block . ELSE IfStmt
  163       | IF Expression Block . ELSE Block

    ELSE  shift, and go to state 362

    $default  reduce using rule 160 (IfStmt)


State 323

  174 RangeClause: RANGE Expression .

    $default  reduce using rule 174 (RangeClause)


State 324

  168 ForStmt: FOR Condition Block .

    $default  reduce using rule 168 (ForStmt)


State 325

   78 ShortVarDecl: IdentifierList INFER_EQ . ExpressionList
  175 RangeClause: IdentifierList INFER_EQ . RANGE Expression

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    RANGE               shift, and go to state 363
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 138
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    ExpressionList  go to state 340
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 326

  167 ForStmt: FOR ForClause Block .

    $default  reduce using rule 167 (ForStmt)


State 327

  170 ForClause: InitStmt SCOLON . SCOLON PostStmt
  171          | InitStmt SCOLON . Condition SCOLON PostStmt

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    SCOLON              shift, and go to state 364
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    Condition       go to state 365
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 366
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 328

  169 ForStmt: FOR RangeClause Block .

    $default  reduce using rule 169 (ForStmt)


State 329

  176 RangeClause: ExpressionList EQ . RANGE Expression
  246 Assign_OP: EQ .

    RANGE  shift, and go to state 367

    $default  reduce using rule 246 (Assign_OP)


State 330

  157 ExprSwitchCase: CASE . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 138
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    ExpressionList  go to state 368
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 331

  158 ExprSwitchCase: DEFAULT .

    $default  reduce using rule 158 (ExprSwitchCase)


State 332

  146 ExprSwitchStmt: SWITCH LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 146 (ExprSwitchStmt)


State 333

  150 ExprSwitchStmt: SWITCH LEFTBRACE ExprCaseClauseList . RIGHTBRACE
  154 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 369

    ExprCaseClause  go to state 370
    ExprSwitchCase  go to state 335


State 334

  155 ExprCaseClauseList: ExprCaseClause .

    $default  reduce using rule 155 (ExprCaseClauseList)


State 335

  156 ExprCaseClause: ExprSwitchCase . COLON StatementList

    COLON  shift, and go to state 371


State 336

  147 ExprSwitchStmt: SWITCH SimpleStmt SCOLON . LEFTBRACE RIGHTBRACE
  149               | SWITCH SimpleStmt SCOLON . Expression LEFTBRACE RIGHTBRACE
  151               | SWITCH SimpleStmt SCOLON . LEFTBRACE ExprCaseClauseList RIGHTBRACE
  153               | SWITCH SimpleStmt SCOLON . Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 372
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 373
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 337

  148 ExprSwitchStmt: SWITCH Expression LEFTBRACE . RIGHTBRACE
  152               | SWITCH Expression LEFTBRACE . ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 374

    ExprCaseClauseList  go to state 375
    ExprCaseClause      go to state 334
    ExprSwitchCase      go to state 335


State 338

   44 StatementList: StatementList Statement SCOLON .

    $default  reduce using rule 44 (StatementList)


State 339

   66 LabeledStmt: Label COLON Statement .

    $default  reduce using rule 66 (LabeledStmt)


State 340

   78 ShortVarDecl: IdentifierList INFER_EQ ExpressionList .

    $default  reduce using rule 78 (ShortVarDecl)


State 341

  248 Assign_OP: Mul_OP EQ .

    $default  reduce using rule 248 (Assign_OP)


State 342

   77 Assignment: ExpressionList Assign_OP ExpressionList .

    $default  reduce using rule 77 (Assignment)


State 343

  247 Assign_OP: Add_OP EQ .

    $default  reduce using rule 247 (Assign_OP)


State 344

  231 FieldDecl: IdentifierList Type String .

    $default  reduce using rule 231 (FieldDecl)


State 345

  230 FieldDeclList: FieldDeclList FieldDecl SCOLON .

    $default  reduce using rule 230 (FieldDeclList)


State 346

  226 MapType: MAP LEFTSQUARE Type RIGHTSQUARE Type .

    $default  reduce using rule 226 (MapType)


State 347

  212 MakeExpr: NEW LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 212 (MakeExpr)


State 348

  211 MakeExpr: MAKE LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 211 (MakeExpr)


State 349

  209 MakeExpr: MAKE LEFTPARAN Type COMMA . Expression COMMA Expression RIGHTPARAN
  210         | MAKE LEFTPARAN Type COMMA . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 376
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 350

  127 LiteralValue: LEFTBRACE ElementList RIGHTBRACE .

    $default  reduce using rule 127 (LiteralValue)


State 351

  128 LiteralValue: LEFTBRACE ElementList COMMA . RIGHTBRACE
  131 ElementList: ElementList COMMA . KeyedElement

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTBRACE          shift, and go to state 377
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 214
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    LiteralValue    go to state 298
    SliceType       go to state 81
    KeyedElement    go to state 378
    Key             go to state 301
    Element         go to state 302
    Expression      go to state 303
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 352

  133 KeyedElement: Key COLON . Element

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 214
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    LiteralValue    go to state 379
    SliceType       go to state 81
    Element         go to state 380
    Expression      go to state 381
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 353

  199 KeyValueList: Expression COLON . Expression
  200             | Expression COLON . Expression COMMA KeyValueList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 382
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 354

  198 StructLiteral: LEFTBRACE KeyValueList RIGHTBRACE .

    $default  reduce using rule 198 (StructLiteral)


State 355

  215 Arguments: LEFTPARAN ExpressionList ELIPSIS . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 383


State 356

  204 Slice: LEFTSQUARE COLON RIGHTSQUARE .

    $default  reduce using rule 204 (Slice)


State 357

  203 Slice: LEFTSQUARE COLON Expression . RIGHTSQUARE
  207      | LEFTSQUARE COLON Expression . COLON Expression RIGHTSQUARE

    RIGHTSQUARE  shift, and go to state 384
    COLON        shift, and go to state 385


State 358

  202 Index: LEFTSQUARE Expression RIGHTSQUARE .

    $default  reduce using rule 202 (Index)


State 359

  205 Slice: LEFTSQUARE Expression COLON . RIGHTSQUARE
  206      | LEFTSQUARE Expression COLON . Expression RIGHTSQUARE
  208      | LEFTSQUARE Expression COLON . Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTSQUARE         shift, and go to state 386
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 387
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 360

  213 TypeAssertion: DOT LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 388


State 361

  161 IfStmt: IF SimpleStmt SCOLON Expression . Block
  164       | IF SimpleStmt SCOLON Expression . Block ELSE IfStmt
  165       | IF SimpleStmt SCOLON Expression . Block ELSE Block

    LEFTBRACE  shift, and go to state 102

    Block  go to state 389


State 362

  162 IfStmt: IF Expression Block ELSE . IfStmt
  163       | IF Expression Block ELSE . Block

    IF         shift, and go to state 172
    LEFTBRACE  shift, and go to state 102

    Block   go to state 390
    IfStmt  go to state 391


State 363

  175 RangeClause: IdentifierList INFER_EQ RANGE . Expression

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 392
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 364

  170 ForClause: InitStmt SCOLON SCOLON . PostStmt

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 261

    $default  reduce using rule 73 (EmptyStmt)

    Unary_OP        go to state 133
    PackageName     go to state 76
    SimpleStmt      go to state 393
    EmptyStmt       go to state 185
    ExpressionStmt  go to state 186
    IncDecStmt      go to state 187
    Assignment      go to state 188
    ShortVarDecl    go to state 189
    IdentifierList  go to state 190
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    PostStmt        go to state 394
    Expression      go to state 200
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    ExpressionList  go to state 201
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 365

  171 ForClause: InitStmt SCOLON Condition . SCOLON PostStmt

    SCOLON  shift, and go to state 395


State 366

   43 Condition: Expression .

    $default  reduce using rule 43 (Condition)


State 367

  176 RangeClause: ExpressionList EQ RANGE . Expression

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 396
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 368

  157 ExprSwitchCase: CASE ExpressionList .

    $default  reduce using rule 157 (ExprSwitchCase)


State 369

  150 ExprSwitchStmt: SWITCH LEFTBRACE ExprCaseClauseList RIGHTBRACE .

    $default  reduce using rule 150 (ExprSwitchStmt)


State 370

  154 ExprCaseClauseList: ExprCaseClauseList ExprCaseClause .

    $default  reduce using rule 154 (ExprCaseClauseList)


State 371

  156 ExprCaseClause: ExprSwitchCase COLON . StatementList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    BREAK               shift, and go to state 169
    CONTINUE            shift, and go to state 170
    RETURN              shift, and go to state 171
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 172
    FOR                 shift, and go to state 173
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 174
    NEW                 shift, and go to state 123
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    GOTO                shift, and go to state 175
    FALLTHROUGH         shift, and go to state 176
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 177

    $default  reduce using rule 73 (EmptyStmt)

    Unary_OP         go to state 133
    PackageName      go to state 76
    Block            go to state 178
    StatementList    go to state 397
    Statement        go to state 180
    Declaration      go to state 181
    LabeledStmt      go to state 182
    Label            go to state 183
    SimpleStmt       go to state 184
    EmptyStmt        go to state 185
    ExpressionStmt   go to state 186
    IncDecStmt       go to state 187
    Assignment       go to state 188
    ShortVarDecl     go to state 189
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 190
    QualifiedIdent   go to state 77
    CompositeLit     go to state 134
    LiteralType      go to state 135
    Operand          go to state 136
    OperandName      go to state 137
    SliceType        go to state 81
    ReturnStmt       go to state 191
    BreakStmt        go to state 192
    ContinueStmt     go to state 193
    GotoStmt         go to state 194
    SwitchStmt       go to state 195
    ExprSwitchStmt   go to state 196
    FallthroughStmt  go to state 197
    IfStmt           go to state 198
    ForStmt          go to state 199
    Expression       go to state 200
    ExpressionOR     go to state 139
    ExpressionAND    go to state 140
    ExpressionREL    go to state 141
    ExpressionADD    go to state 142
    ExpressionMUL    go to state 143
    UnaryExpr        go to state 144
    PrimaryExpr      go to state 145
    MakeExpr         go to state 146
    ExpressionList   go to state 201
    TypeDecl         go to state 22
    MapType          go to state 82
    StructType       go to state 83
    PointerType      go to state 84
    ArrayType        go to state 85
    Literal          go to state 148
    BasicLit         go to state 149
    String           go to state 150


State 372

  147 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE . RIGHTBRACE
  151               | SWITCH SimpleStmt SCOLON LEFTBRACE . ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 398

    ExprCaseClauseList  go to state 399
    ExprCaseClause      go to state 334
    ExprSwitchCase      go to state 335


State 373

  149 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression . LEFTBRACE RIGHTBRACE
  153               | SWITCH SimpleStmt SCOLON Expression . LEFTBRACE ExprCaseClauseList RIGHTBRACE

    LEFTBRACE  shift, and go to state 400


State 374

  148 ExprSwitchStmt: SWITCH Expression LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 148 (ExprSwitchStmt)


State 375

  152 ExprSwitchStmt: SWITCH Expression LEFTBRACE ExprCaseClauseList . RIGHTBRACE
  154 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 401

    ExprCaseClause  go to state 370
    ExprSwitchCase  go to state 335


State 376

  209 MakeExpr: MAKE LEFTPARAN Type COMMA Expression . COMMA Expression RIGHTPARAN
  210         | MAKE LEFTPARAN Type COMMA Expression . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 402
    COMMA       shift, and go to state 403


State 377

  128 LiteralValue: LEFTBRACE ElementList COMMA RIGHTBRACE .

    $default  reduce using rule 128 (LiteralValue)


State 378

  131 ElementList: ElementList COMMA KeyedElement .

    $default  reduce using rule 131 (ElementList)


State 379

  137 Element: LiteralValue .

    $default  reduce using rule 137 (Element)


State 380

  133 KeyedElement: Key COLON Element .

    $default  reduce using rule 133 (KeyedElement)


State 381

  136 Element: Expression .

    $default  reduce using rule 136 (Element)


State 382

  199 KeyValueList: Expression COLON Expression .
  200             | Expression COLON Expression . COMMA KeyValueList

    COMMA  shift, and go to state 404

    $default  reduce using rule 199 (KeyValueList)


State 383

  215 Arguments: LEFTPARAN ExpressionList ELIPSIS RIGHTPARAN .

    $default  reduce using rule 215 (Arguments)


State 384

  203 Slice: LEFTSQUARE COLON Expression RIGHTSQUARE .

    $default  reduce using rule 203 (Slice)


State 385

  207 Slice: LEFTSQUARE COLON Expression COLON . Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 405
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 386

  205 Slice: LEFTSQUARE Expression COLON RIGHTSQUARE .

    $default  reduce using rule 205 (Slice)


State 387

  206 Slice: LEFTSQUARE Expression COLON Expression . RIGHTSQUARE
  208      | LEFTSQUARE Expression COLON Expression . COLON Expression RIGHTSQUARE

    RIGHTSQUARE  shift, and go to state 406
    COLON        shift, and go to state 407


State 388

  213 TypeAssertion: DOT LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 213 (TypeAssertion)


State 389

  161 IfStmt: IF SimpleStmt SCOLON Expression Block .
  164       | IF SimpleStmt SCOLON Expression Block . ELSE IfStmt
  165       | IF SimpleStmt SCOLON Expression Block . ELSE Block

    ELSE  shift, and go to state 408

    $default  reduce using rule 161 (IfStmt)


State 390

  163 IfStmt: IF Expression Block ELSE Block .

    $default  reduce using rule 163 (IfStmt)


State 391

  162 IfStmt: IF Expression Block ELSE IfStmt .

    $default  reduce using rule 162 (IfStmt)


State 392

  175 RangeClause: IdentifierList INFER_EQ RANGE Expression .

    $default  reduce using rule 175 (RangeClause)


State 393

  173 PostStmt: SimpleStmt .

    $default  reduce using rule 173 (PostStmt)


State 394

  170 ForClause: InitStmt SCOLON SCOLON PostStmt .

    $default  reduce using rule 170 (ForClause)


State 395

  171 ForClause: InitStmt SCOLON Condition SCOLON . PostStmt

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 261

    $default  reduce using rule 73 (EmptyStmt)

    Unary_OP        go to state 133
    PackageName     go to state 76
    SimpleStmt      go to state 393
    EmptyStmt       go to state 185
    ExpressionStmt  go to state 186
    IncDecStmt      go to state 187
    Assignment      go to state 188
    ShortVarDecl    go to state 189
    IdentifierList  go to state 190
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    PostStmt        go to state 409
    Expression      go to state 200
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    ExpressionList  go to state 201
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 396

  176 RangeClause: ExpressionList EQ RANGE Expression .

    $default  reduce using rule 176 (RangeClause)


State 397

   44 StatementList: StatementList . Statement SCOLON
  156 ExprCaseClause: ExprSwitchCase COLON StatementList .

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    BREAK               shift, and go to state 169
    CONTINUE            shift, and go to state 170
    RETURN              shift, and go to state 171
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 172
    FOR                 shift, and go to state 173
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 174
    NEW                 shift, and go to state 123
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    GOTO                shift, and go to state 175
    FALLTHROUGH         shift, and go to state 176
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 177

    SCOLON    reduce using rule 73 (EmptyStmt)
    $default  reduce using rule 156 (ExprCaseClause)

    Unary_OP         go to state 133
    PackageName      go to state 76
    Block            go to state 178
    Statement        go to state 279
    Declaration      go to state 181
    LabeledStmt      go to state 182
    Label            go to state 183
    SimpleStmt       go to state 184
    EmptyStmt        go to state 185
    ExpressionStmt   go to state 186
    IncDecStmt       go to state 187
    Assignment       go to state 188
    ShortVarDecl     go to state 189
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 190
    QualifiedIdent   go to state 77
    CompositeLit     go to state 134
    LiteralType      go to state 135
    Operand          go to state 136
    OperandName      go to state 137
    SliceType        go to state 81
    ReturnStmt       go to state 191
    BreakStmt        go to state 192
    ContinueStmt     go to state 193
    GotoStmt         go to state 194
    SwitchStmt       go to state 195
    ExprSwitchStmt   go to state 196
    FallthroughStmt  go to state 197
    IfStmt           go to state 198
    ForStmt          go to state 199
    Expression       go to state 200
    ExpressionOR     go to state 139
    ExpressionAND    go to state 140
    ExpressionREL    go to state 141
    ExpressionADD    go to state 142
    ExpressionMUL    go to state 143
    UnaryExpr        go to state 144
    PrimaryExpr      go to state 145
    MakeExpr         go to state 146
    ExpressionList   go to state 201
    TypeDecl         go to state 22
    MapType          go to state 82
    StructType       go to state 83
    PointerType      go to state 84
    ArrayType        go to state 85
    Literal          go to state 148
    BasicLit         go to state 149
    String           go to state 150


State 398

  147 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 147 (ExprSwitchStmt)


State 399

  151 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList . RIGHTBRACE
  154 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 410

    ExprCaseClause  go to state 370
    ExprSwitchCase  go to state 335


State 400

  149 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE . RIGHTBRACE
  153               | SWITCH SimpleStmt SCOLON Expression LEFTBRACE . ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 411

    ExprCaseClauseList  go to state 412
    ExprCaseClause      go to state 334
    ExprSwitchCase      go to state 335


State 401

  152 ExprSwitchStmt: SWITCH Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE .

    $default  reduce using rule 152 (ExprSwitchStmt)


State 402

  210 MakeExpr: MAKE LEFTPARAN Type COMMA Expression RIGHTPARAN .

    $default  reduce using rule 210 (MakeExpr)


State 403

  209 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 413
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 404

  200 KeyValueList: Expression COLON Expression COMMA . KeyValueList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 304
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    KeyValueList    go to state 414
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 405

  207 Slice: LEFTSQUARE COLON Expression COLON Expression . RIGHTSQUARE

    RIGHTSQUARE  shift, and go to state 415


State 406

  206 Slice: LEFTSQUARE Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 206 (Slice)


State 407

  208 Slice: LEFTSQUARE Expression COLON Expression COLON . Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    Unary_OP        go to state 133
    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 134
    LiteralType     go to state 135
    Operand         go to state 136
    OperandName     go to state 137
    SliceType       go to state 81
    Expression      go to state 416
    ExpressionOR    go to state 139
    ExpressionAND   go to state 140
    ExpressionREL   go to state 141
    ExpressionADD   go to state 142
    ExpressionMUL   go to state 143
    UnaryExpr       go to state 144
    PrimaryExpr     go to state 145
    MakeExpr        go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 148
    BasicLit        go to state 149
    String          go to state 150


State 408

  164 IfStmt: IF SimpleStmt SCOLON Expression Block ELSE . IfStmt
  165       | IF SimpleStmt SCOLON Expression Block ELSE . Block

    IF         shift, and go to state 172
    LEFTBRACE  shift, and go to state 102

    Block   go to state 417
    IfStmt  go to state 418


State 409

  171 ForClause: InitStmt SCOLON Condition SCOLON PostStmt .

    $default  reduce using rule 171 (ForClause)


State 410

  151 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE .

    $default  reduce using rule 151 (ExprSwitchStmt)


State 411

  149 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 149 (ExprSwitchStmt)


State 412

  153 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList . RIGHTBRACE
  154 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 419

    ExprCaseClause  go to state 370
    ExprSwitchCase  go to state 335


State 413

  209 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 420


State 414

  200 KeyValueList: Expression COLON Expression COMMA KeyValueList .

    $default  reduce using rule 200 (KeyValueList)


State 415

  207 Slice: LEFTSQUARE COLON Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 207 (Slice)


State 416

  208 Slice: LEFTSQUARE Expression COLON Expression COLON Expression . RIGHTSQUARE

    RIGHTSQUARE  shift, and go to state 421


State 417

  165 IfStmt: IF SimpleStmt SCOLON Expression Block ELSE Block .

    $default  reduce using rule 165 (IfStmt)


State 418

  164 IfStmt: IF SimpleStmt SCOLON Expression Block ELSE IfStmt .

    $default  reduce using rule 164 (IfStmt)


State 419

  153 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE .

    $default  reduce using rule 153 (ExprSwitchStmt)


State 420

  209 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN .

    $default  reduce using rule 209 (MakeExpr)


State 421

  208 Slice: LEFTSQUARE Expression COLON Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 208 (Slice)
