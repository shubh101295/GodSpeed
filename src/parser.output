Nonterminals useless in grammar

   Binary_OP


Terminals unused in grammar

   NULLPOINTER
   ASSIGN


Rules useless in grammar

  253 Binary_OP: LOGAND
  254          | LOGOR
  255          | Rel_OP
  256          | Add_OP
  257          | Mul_OP


State 75 conflicts: 1 reduce/reduce
State 129 conflicts: 3 shift/reduce
State 136 conflicts: 1 shift/reduce
State 141 conflicts: 4 shift/reduce
State 142 conflicts: 7 shift/reduce
State 177 conflicts: 2 reduce/reduce
State 261 conflicts: 2 reduce/reduce
State 309 conflicts: 4 shift/reduce
State 310 conflicts: 7 shift/reduce


Grammar

    0 $accept: SourceFile $end

    1 SourceFile: PackageClause SCOLON
    2           | PackageClause SCOLON ImportDeclList
    3           | PackageClause SCOLON TopLevelDeclList
    4           | PackageClause SCOLON ImportDeclList TopLevelDeclList

    5 PackageClause: PACKAGE PackageName

    6 PackageName: IDENTIFIER

    7 ImportDeclList: ImportDeclList ImportDecl SCOLON
    8               | ImportDecl SCOLON

    9 ImportDecl: IMPORT LEFTPARAN ImportSpecList RIGHTPARAN
   10           | IMPORT LEFTPARAN RIGHTPARAN
   11           | IMPORT ImportSpec

   12 ImportSpecList: ImportSpecList ImportSpec SCOLON
   13               | ImportSpec SCOLON

   14 ImportSpec: PackageName ImportPath
   15           | DOT ImportPath
   16           | ImportPath

   17 ImportPath: String

   18 TopLevelDeclList: TopLevelDeclList TopLevelDecl SCOLON
   19                 | TopLevelDecl SCOLON

   20 TopLevelDecl: Declaration
   21             | FunctionDecl
   22             | MethodDecl

   23 Block: LEFTBRACE StatementList RIGHTBRACE

   24 Condition: Expression

   25 StatementList: StatementList Statement SCOLON
   26              | Statement SCOLON

   27 Statement: Declaration
   28          | LabeledStmt
   29          | SimpleStmt
   30          | ReturnStmt
   31          | BreakStmt
   32          | ContinueStmt
   33          | GotoStmt
   34          | SwitchStmt
   35          | FallthroughStmt
   36          | Block
   37          | IfStmt
   38          | ForStmt

   39 Declaration: TypeDecl
   40            | VarDecl
   41            | ConstDecl

   42 FunctionDecl: FUNC FunctionName Signature FunctionBody
   43             | FUNC FunctionName Signature

   44 FunctionName: IDENTIFIER

   45 MethodDecl: FUNC Receiver IDENTIFIER Signature
   46           | FUNC Receiver IDENTIFIER Signature FunctionBody

   47 LabeledStmt: Label COLON Statement

   48 Label: IDENTIFIER

   49 SimpleStmt: EmptyStmt
   50           | ExpressionStmt
   51           | IncDecStmt
   52           | Assignment
   53           | ShortVarDecl

   54 EmptyStmt: %empty

   55 ExpressionStmt: Expression

   56 IncDecStmt: Expression PLUSPLUS
   57           | Expression MINUSMINUS

   58 Assignment: ExpressionList Assign_OP ExpressionList

   59 ShortVarDecl: IdentifierList INFER_EQ ExpressionList

   60 VarDecl: VAR VarSpec
   61        | VAR LEFTPARAN VarSpecList RIGHTPARAN
   62        | VAR LEFTPARAN RIGHTPARAN

   63 VarSpecList: VarSpecList VarSpec SCOLON
   64            | VarSpec SCOLON

   65 VarSpec: IdentifierList Type
   66        | IdentifierList Type EQ ExpressionList
   67        | IdentifierList EQ ExpressionList

   68 ConstDecl: CONST ConstSpec
   69          | CONST LEFTPARAN ConstSpecList RIGHTPARAN
   70          | CONST LEFTPARAN RIGHTPARAN

   71 ConstSpecList: ConstSpecList ConstSpec SCOLON
   72              | ConstSpec SCOLON

   73 ConstSpec: IdentifierList Type
   74          | IdentifierList Type EQ ExpressionList
   75          | IdentifierList EQ ExpressionList

   76 FunctionBody: Block

   77 Signature: Parameters
   78          | Parameters Result

   79 Result: Parameters
   80       | Type

   81 Parameters: LEFTPARAN RIGHTPARAN
   82           | LEFTPARAN ParameterList RIGHTPARAN
   83           | LEFTPARAN ParameterList COMMA RIGHTPARAN

   84 ParameterList: ParameterDecl
   85              | ParameterList COMMA ParameterDecl

   86 ParameterDecl: IdentifierList Type
   87              | IdentifierList ELIPSIS Type
   88              | ELIPSIS Type

   89 IdentifierList: IdentifierList COMMA IDENTIFIER
   90               | IDENTIFIER

   91 QualifiedIdent: PackageName DOT IDENTIFIER

   92 Receiver: Parameters

   93 CompositeLit: LiteralType LiteralValue

   94 LiteralType: StructType
   95            | ArrayType
   96            | PointerType
   97            | SliceType
   98            | LEFTSQUARE ELIPSIS RIGHTSQUARE Operand
   99            | MapType

  100 Type: LiteralType
  101     | OperandName

  102 Operand: Literal
  103        | OperandName
  104        | LEFTPARAN Expression RIGHTPARAN

  105 OperandName: IDENTIFIER
  106            | QualifiedIdent

  107 LiteralValue: LEFTBRACE RIGHTBRACE
  108             | LEFTBRACE ElementList RIGHTBRACE
  109             | LEFTBRACE ElementList COMMA RIGHTBRACE

  110 SliceType: LEFTSQUARE RIGHTSQUARE Type

  111 ElementList: KeyedElement
  112            | ElementList COMMA KeyedElement

  113 KeyedElement: Element
  114             | Key COLON Element

  115 Key: Expression
  116    | LiteralValue

  117 Element: Expression
  118        | LiteralValue

  119 ReturnStmt: RETURN
  120           | RETURN ExpressionList

  121 BreakStmt: BREAK
  122          | BREAK Label

  123 ContinueStmt: CONTINUE
  124             | CONTINUE Label

  125 GotoStmt: GOTO Label

  126 SwitchStmt: ExprSwitchStmt

  127 ExprSwitchStmt: SWITCH LEFTBRACE RIGHTBRACE
  128               | SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE
  129               | SWITCH Expression LEFTBRACE RIGHTBRACE
  130               | SWITCH SimpleStmt SCOLON Expression LEFTBRACE RIGHTBRACE
  131               | SWITCH LEFTBRACE ExprCaseClauseList RIGHTBRACE
  132               | SWITCH SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE
  133               | SWITCH Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE
  134               | SWITCH SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

  135 ExprCaseClauseList: ExprCaseClauseList ExprCaseClause
  136                   | ExprCaseClause

  137 ExprCaseClause: ExprSwitchCase COLON StatementList

  138 ExprSwitchCase: CASE ExpressionList
  139               | DEFAULT

  140 FallthroughStmt: FALLTHROUGH

  141 IfStmt: IF Expression Block
  142       | IF SimpleStmt SCOLON Expression Block
  143       | IF Expression Block ELSE IfStmt
  144       | IF Expression Block ELSE Block
  145       | IF SimpleStmt SCOLON Expression Block ELSE IfStmt
  146       | IF SimpleStmt SCOLON Expression Block ELSE Block

  147 ForStmt: FOR Block
  148        | FOR ForClause Block
  149        | FOR Condition Block
  150        | FOR RangeClause Block

  151 ForClause: InitStmt SCOLON SCOLON PostStmt
  152          | InitStmt SCOLON Condition SCOLON PostStmt

  153 InitStmt: SimpleStmt

  154 PostStmt: SimpleStmt

  155 RangeClause: RANGE Expression
  156            | IdentifierList INFER_EQ RANGE Expression
  157            | ExpressionList EQ RANGE Expression

  158 Expression: ExpressionOR

  159 ExpressionOR: ExpressionOR LOGOR ExpressionAND
  160             | ExpressionAND

  161 ExpressionAND: ExpressionAND LOGAND ExpressionREL
  162              | ExpressionREL

  163 ExpressionREL: ExpressionREL Rel_OP ExpressionADD
  164              | ExpressionADD

  165 ExpressionADD: ExpressionADD Add_OP ExpressionMUL
  166              | ExpressionMUL

  167 ExpressionMUL: ExpressionMUL Mul_OP PrimaryExpr
  168              | UnaryExpr

  169 UnaryExpr: PrimaryExpr
  170          | Unary_OP PrimaryExpr

  171 PrimaryExpr: Operand
  172            | MakeExpr
  173            | PrimaryExpr Selector
  174            | PrimaryExpr Index
  175            | PrimaryExpr Slice
  176            | PrimaryExpr Arguments
  177            | OperandName StructLiteral
  178            | PrimaryExpr TypeAssertion

  179 StructLiteral: LEFTBRACE KeyValueList RIGHTBRACE

  180 KeyValueList: Expression COLON Expression
  181             | Expression COLON Expression COMMA KeyValueList

  182 Selector: DOT IDENTIFIER

  183 Index: LEFTSQUARE Expression RIGHTSQUARE

  184 Slice: LEFTSQUARE COLON Expression RIGHTSQUARE
  185      | LEFTSQUARE COLON RIGHTSQUARE
  186      | LEFTSQUARE Expression COLON RIGHTSQUARE
  187      | LEFTSQUARE Expression COLON Expression RIGHTSQUARE
  188      | LEFTSQUARE COLON Expression COLON Expression RIGHTSQUARE
  189      | LEFTSQUARE Expression COLON Expression COLON Expression RIGHTSQUARE

  190 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN
  191         | MAKE LEFTPARAN Type COMMA Expression RIGHTPARAN
  192         | MAKE LEFTPARAN Type RIGHTPARAN
  193         | NEW LEFTPARAN Type RIGHTPARAN

  194 TypeAssertion: DOT LEFTPARAN Type RIGHTPARAN

  195 Arguments: LEFTPARAN RIGHTPARAN
  196          | LEFTPARAN ExpressionList ELIPSIS RIGHTPARAN

  197 ExpressionList: Expression
  198               | Expression COMMA Expression

  199 TypeDecl: TYPE LEFTPARAN TypeSpecList RIGHTPARAN
  200         | TYPE TypeSpec

  201 TypeSpecList: TypeSpecList TypeSpec SCOLON
  202             | TypeSpec SCOLON

  203 TypeSpec: AliasDecl
  204         | TypeDef

  205 AliasDecl: IDENTIFIER EQ Type

  206 TypeDef: IDENTIFIER Type

  207 MapType: MAP LEFTSQUARE Type RIGHTSQUARE Type

  208 StructType: STRUCT LEFTBRACE FieldDeclList RIGHTBRACE
  209           | STRUCT LEFTBRACE RIGHTBRACE

  210 FieldDeclList: FieldDecl SCOLON
  211              | FieldDeclList FieldDecl SCOLON

  212 FieldDecl: IdentifierList Type String
  213          | IdentifierList Type

  214 PointerType: MUL BaseType

  215 BaseType: Type

  216 ArrayType: LEFTSQUARE Expression RIGHTSQUARE Type

  217 Literal: BasicLit
  218        | CompositeLit

  219 BasicLit: INTEGER_VAL
  220         | FLOAT_VAL
  221         | BYTE_VAL
  222         | String
  223         | TRUE
  224         | FALSE

  225 String: RAW_STRING
  226       | INTERPRETED_STRING

  227 Assign_OP: EQ
  228          | Add_OP EQ
  229          | Mul_OP EQ

  230 Add_OP: ADD
  231       | SUB
  232       | OR
  233       | XOR

  234 Rel_OP: ISEQ
  235       | NEQ
  236       | LESSEQ
  237       | GRTEQ
  238       | GRT
  239       | LESS

  240 Mul_OP: MUL
  241       | QUOT
  242       | MOD
  243       | SHL
  244       | SHR
  245       | AND
  246       | ANDNOT

  247 Unary_OP: ADD
  248         | SUB
  249         | NOT
  250         | XOR
  251         | MUL
  252         | AND


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER_VAL (258) 219
FLOAT_VAL (259) 220
TRUE (260) 223
FALSE (261) 224
NULLPOINTER (262)
BREAK (263) 121 122
CONTINUE (264) 123 124
RETURN (265) 119 120
SCOLON (266) 1 2 3 4 7 8 12 13 18 19 25 26 63 64 71 72 128 130 132
    134 142 145 146 151 152 201 202 210 211
FUNC (267) 42 43 45 46
STRUCT (268) 208 209
ELSE (269) 143 144 145 146
PACKAGE (270) 5
IF (271) 141 142 143 144 145 146
FOR (272) 147 148 149 150
RANGE (273) 155 156 157
IMPORT (274) 9 10 11
VAR (275) 60 61 62
SWITCH (276) 127 128 129 130 131 132 133 134
CASE (277) 138
NEW (278) 193
CONST (279) 68 69 70
MAP (280) 207
DEFAULT (281) 139
MAKE (282) 190 191 192
GOTO (283) 125
FALLTHROUGH (284) 140
TYPE (285) 199 200
PLUSPLUS (286) 56
MINUSMINUS (287) 57
ANDNOT (288) 246
ELIPSIS (289) 87 88 98 196
ADD (290) 230 247
SUB (291) 231 248
NOT (292) 249
XOR (293) 233 250
MUL (294) 214 240 251
AND (295) 245 252
OR (296) 232
LOGOR (297) 159
LOGAND (298) 161
ISEQ (299) 234
NEQ (300) 235
LESSEQ (301) 236
GRTEQ (302) 237
GRT (303) 238
LESS (304) 239
MOD (305) 242
QUOT (306) 241
SHL (307) 243
SHR (308) 244
EQ (309) 66 67 74 75 157 205 227 228 229
INFER_EQ (310) 59 156
RIGHTPARAN (311) 9 10 61 62 69 70 81 82 83 104 190 191 192 193 194
    195 196 199
RIGHTBRACE (312) 23 107 108 109 127 128 129 130 131 132 133 134 179
    208 209
RIGHTSQUARE (313) 98 110 183 184 185 186 187 188 189 207 216
LEFTPARAN (314) 9 10 61 62 69 70 81 82 83 104 190 191 192 193 194 195
    196 199
LEFTBRACE (315) 23 107 108 109 127 128 129 130 131 132 133 134 179
    208 209
LEFTSQUARE (316) 98 110 183 184 185 186 187 188 189 207 216
COLON (317) 47 114 137 180 181 184 185 186 187 188 189
DOT (318) 15 91 182 194
COMMA (319) 83 85 89 109 112 181 190 191 198
RAW_STRING (320) 225
INTERPRETED_STRING (321) 226
BYTE_VAL (322) 221
IDENTIFIER (323) 6 44 45 46 48 89 90 91 105 182 205 206
ASSIGN (324)


Nonterminals, with rules where they appear

$accept (70)
    on left: 0
SourceFile (71)
    on left: 1 2 3 4, on right: 0
PackageClause (72)
    on left: 5, on right: 1 2 3 4
PackageName (73)
    on left: 6, on right: 5 14 91
ImportDeclList (74)
    on left: 7 8, on right: 2 4 7
ImportDecl (75)
    on left: 9 10 11, on right: 7 8
ImportSpecList (76)
    on left: 12 13, on right: 9 12
ImportSpec (77)
    on left: 14 15 16, on right: 11 12 13
ImportPath (78)
    on left: 17, on right: 14 15 16
TopLevelDeclList (79)
    on left: 18 19, on right: 3 4 18
TopLevelDecl (80)
    on left: 20 21 22, on right: 18 19
Block (81)
    on left: 23, on right: 36 76 141 142 143 144 145 146 147 148 149
    150
Condition (82)
    on left: 24, on right: 149 152
StatementList (83)
    on left: 25 26, on right: 23 25 137
Statement (84)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38, on right: 25 26 47
Declaration (85)
    on left: 39 40 41, on right: 20 27
FunctionDecl (86)
    on left: 42 43, on right: 21
FunctionName (87)
    on left: 44, on right: 42 43
MethodDecl (88)
    on left: 45 46, on right: 22
LabeledStmt (89)
    on left: 47, on right: 28
Label (90)
    on left: 48, on right: 47 122 124 125
SimpleStmt (91)
    on left: 49 50 51 52 53, on right: 29 128 130 132 134 142 145 146
    153 154
EmptyStmt (92)
    on left: 54, on right: 49
ExpressionStmt (93)
    on left: 55, on right: 50
IncDecStmt (94)
    on left: 56 57, on right: 51
Assignment (95)
    on left: 58, on right: 52
ShortVarDecl (96)
    on left: 59, on right: 53
VarDecl (97)
    on left: 60 61 62, on right: 40
VarSpecList (98)
    on left: 63 64, on right: 61 63
VarSpec (99)
    on left: 65 66 67, on right: 60 63 64
ConstDecl (100)
    on left: 68 69 70, on right: 41
ConstSpecList (101)
    on left: 71 72, on right: 69 71
ConstSpec (102)
    on left: 73 74 75, on right: 68 71 72
FunctionBody (103)
    on left: 76, on right: 42 46
Signature (104)
    on left: 77 78, on right: 42 43 45 46
Result (105)
    on left: 79 80, on right: 78
Parameters (106)
    on left: 81 82 83, on right: 77 78 79 92
ParameterList (107)
    on left: 84 85, on right: 82 83 85
ParameterDecl (108)
    on left: 86 87 88, on right: 84 85
IdentifierList (109)
    on left: 89 90, on right: 59 65 66 67 73 74 75 86 87 89 156 212
    213
QualifiedIdent (110)
    on left: 91, on right: 106
Receiver (111)
    on left: 92, on right: 45 46
CompositeLit (112)
    on left: 93, on right: 218
LiteralType (113)
    on left: 94 95 96 97 98 99, on right: 93 100
Type (114)
    on left: 100 101, on right: 65 66 73 74 80 86 87 88 110 190 191
    192 193 194 205 206 207 212 213 215 216
Operand (115)
    on left: 102 103 104, on right: 98 171
OperandName (116)
    on left: 105 106, on right: 101 103 177
LiteralValue (117)
    on left: 107 108 109, on right: 93 116 118
SliceType (118)
    on left: 110, on right: 97
ElementList (119)
    on left: 111 112, on right: 108 109 112
KeyedElement (120)
    on left: 113 114, on right: 111 112
Key (121)
    on left: 115 116, on right: 114
Element (122)
    on left: 117 118, on right: 113 114
ReturnStmt (123)
    on left: 119 120, on right: 30
BreakStmt (124)
    on left: 121 122, on right: 31
ContinueStmt (125)
    on left: 123 124, on right: 32
GotoStmt (126)
    on left: 125, on right: 33
SwitchStmt (127)
    on left: 126, on right: 34
ExprSwitchStmt (128)
    on left: 127 128 129 130 131 132 133 134, on right: 126
ExprCaseClauseList (129)
    on left: 135 136, on right: 131 132 133 134 135
ExprCaseClause (130)
    on left: 137, on right: 135 136
ExprSwitchCase (131)
    on left: 138 139, on right: 137
FallthroughStmt (132)
    on left: 140, on right: 35
IfStmt (133)
    on left: 141 142 143 144 145 146, on right: 37 143 145
ForStmt (134)
    on left: 147 148 149 150, on right: 38
ForClause (135)
    on left: 151 152, on right: 148
InitStmt (136)
    on left: 153, on right: 151 152
PostStmt (137)
    on left: 154, on right: 151 152
RangeClause (138)
    on left: 155 156 157, on right: 150
Expression (139)
    on left: 158, on right: 24 55 56 57 104 115 117 129 130 133 134
    141 142 143 144 145 146 155 156 157 180 181 183 184 186 187 188
    189 190 191 197 198 216
ExpressionOR (140)
    on left: 159 160, on right: 158 159
ExpressionAND (141)
    on left: 161 162, on right: 159 160 161
ExpressionREL (142)
    on left: 163 164, on right: 161 162 163
ExpressionADD (143)
    on left: 165 166, on right: 163 164 165
ExpressionMUL (144)
    on left: 167 168, on right: 165 166 167
UnaryExpr (145)
    on left: 169 170, on right: 168
PrimaryExpr (146)
    on left: 171 172 173 174 175 176 177 178, on right: 167 169 170
    173 174 175 176 178
StructLiteral (147)
    on left: 179, on right: 177
KeyValueList (148)
    on left: 180 181, on right: 179 181
Selector (149)
    on left: 182, on right: 173
Index (150)
    on left: 183, on right: 174
Slice (151)
    on left: 184 185 186 187 188 189, on right: 175
MakeExpr (152)
    on left: 190 191 192 193, on right: 172
TypeAssertion (153)
    on left: 194, on right: 178
Arguments (154)
    on left: 195 196, on right: 176
ExpressionList (155)
    on left: 197 198, on right: 58 59 66 67 74 75 120 138 157 196
TypeDecl (156)
    on left: 199 200, on right: 39
TypeSpecList (157)
    on left: 201 202, on right: 199 201
TypeSpec (158)
    on left: 203 204, on right: 200 201 202
AliasDecl (159)
    on left: 205, on right: 203
TypeDef (160)
    on left: 206, on right: 204
MapType (161)
    on left: 207, on right: 99
StructType (162)
    on left: 208 209, on right: 94
FieldDeclList (163)
    on left: 210 211, on right: 208 211
FieldDecl (164)
    on left: 212 213, on right: 210 211
PointerType (165)
    on left: 214, on right: 96
BaseType (166)
    on left: 215, on right: 214
ArrayType (167)
    on left: 216, on right: 95
Literal (168)
    on left: 217 218, on right: 102
BasicLit (169)
    on left: 219 220 221 222 223 224, on right: 217
String (170)
    on left: 225 226, on right: 17 212 222
Assign_OP (171)
    on left: 227 228 229, on right: 58
Add_OP (172)
    on left: 230 231 232 233, on right: 165 228
Rel_OP (173)
    on left: 234 235 236 237 238 239, on right: 163
Mul_OP (174)
    on left: 240 241 242 243 244 245 246, on right: 167 229
Unary_OP (175)
    on left: 247 248 249 250 251 252, on right: 170


State 0

    0 $accept: . SourceFile $end

    PACKAGE  shift, and go to state 1

    SourceFile     go to state 2
    PackageClause  go to state 3


State 1

    5 PackageClause: PACKAGE . PackageName

    IDENTIFIER  shift, and go to state 4

    PackageName  go to state 5


State 2

    0 $accept: SourceFile . $end

    $end  shift, and go to state 6


State 3

    1 SourceFile: PackageClause . SCOLON
    2           | PackageClause . SCOLON ImportDeclList
    3           | PackageClause . SCOLON TopLevelDeclList
    4           | PackageClause . SCOLON ImportDeclList TopLevelDeclList

    SCOLON  shift, and go to state 7


State 4

    6 PackageName: IDENTIFIER .

    $default  reduce using rule 6 (PackageName)


State 5

    5 PackageClause: PACKAGE PackageName .

    $default  reduce using rule 5 (PackageClause)


State 6

    0 $accept: SourceFile $end .

    $default  accept


State 7

    1 SourceFile: PackageClause SCOLON .
    2           | PackageClause SCOLON . ImportDeclList
    3           | PackageClause SCOLON . TopLevelDeclList
    4           | PackageClause SCOLON . ImportDeclList TopLevelDeclList

    FUNC    shift, and go to state 8
    IMPORT  shift, and go to state 9
    VAR     shift, and go to state 10
    CONST   shift, and go to state 11
    TYPE    shift, and go to state 12

    $default  reduce using rule 1 (SourceFile)

    ImportDeclList    go to state 13
    ImportDecl        go to state 14
    TopLevelDeclList  go to state 15
    TopLevelDecl      go to state 16
    Declaration       go to state 17
    FunctionDecl      go to state 18
    MethodDecl        go to state 19
    VarDecl           go to state 20
    ConstDecl         go to state 21
    TypeDecl          go to state 22


State 8

   42 FunctionDecl: FUNC . FunctionName Signature FunctionBody
   43             | FUNC . FunctionName Signature
   45 MethodDecl: FUNC . Receiver IDENTIFIER Signature
   46           | FUNC . Receiver IDENTIFIER Signature FunctionBody

    LEFTPARAN   shift, and go to state 23
    IDENTIFIER  shift, and go to state 24

    FunctionName  go to state 25
    Parameters    go to state 26
    Receiver      go to state 27


State 9

    9 ImportDecl: IMPORT . LEFTPARAN ImportSpecList RIGHTPARAN
   10           | IMPORT . LEFTPARAN RIGHTPARAN
   11           | IMPORT . ImportSpec

    LEFTPARAN           shift, and go to state 28
    DOT                 shift, and go to state 29
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    IDENTIFIER          shift, and go to state 4

    PackageName  go to state 32
    ImportSpec   go to state 33
    ImportPath   go to state 34
    String       go to state 35


State 10

   60 VarDecl: VAR . VarSpec
   61        | VAR . LEFTPARAN VarSpecList RIGHTPARAN
   62        | VAR . LEFTPARAN RIGHTPARAN

    LEFTPARAN   shift, and go to state 36
    IDENTIFIER  shift, and go to state 37

    VarSpec         go to state 38
    IdentifierList  go to state 39


State 11

   68 ConstDecl: CONST . ConstSpec
   69          | CONST . LEFTPARAN ConstSpecList RIGHTPARAN
   70          | CONST . LEFTPARAN RIGHTPARAN

    LEFTPARAN   shift, and go to state 40
    IDENTIFIER  shift, and go to state 37

    ConstSpec       go to state 41
    IdentifierList  go to state 42


State 12

  199 TypeDecl: TYPE . LEFTPARAN TypeSpecList RIGHTPARAN
  200         | TYPE . TypeSpec

    LEFTPARAN   shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    TypeSpec   go to state 45
    AliasDecl  go to state 46
    TypeDef    go to state 47


State 13

    2 SourceFile: PackageClause SCOLON ImportDeclList .
    4           | PackageClause SCOLON ImportDeclList . TopLevelDeclList
    7 ImportDeclList: ImportDeclList . ImportDecl SCOLON

    FUNC    shift, and go to state 8
    IMPORT  shift, and go to state 9
    VAR     shift, and go to state 10
    CONST   shift, and go to state 11
    TYPE    shift, and go to state 12

    $default  reduce using rule 2 (SourceFile)

    ImportDecl        go to state 48
    TopLevelDeclList  go to state 49
    TopLevelDecl      go to state 16
    Declaration       go to state 17
    FunctionDecl      go to state 18
    MethodDecl        go to state 19
    VarDecl           go to state 20
    ConstDecl         go to state 21
    TypeDecl          go to state 22


State 14

    8 ImportDeclList: ImportDecl . SCOLON

    SCOLON  shift, and go to state 50


State 15

    3 SourceFile: PackageClause SCOLON TopLevelDeclList .
   18 TopLevelDeclList: TopLevelDeclList . TopLevelDecl SCOLON

    FUNC   shift, and go to state 8
    VAR    shift, and go to state 10
    CONST  shift, and go to state 11
    TYPE   shift, and go to state 12

    $default  reduce using rule 3 (SourceFile)

    TopLevelDecl  go to state 51
    Declaration   go to state 17
    FunctionDecl  go to state 18
    MethodDecl    go to state 19
    VarDecl       go to state 20
    ConstDecl     go to state 21
    TypeDecl      go to state 22


State 16

   19 TopLevelDeclList: TopLevelDecl . SCOLON

    SCOLON  shift, and go to state 52


State 17

   20 TopLevelDecl: Declaration .

    $default  reduce using rule 20 (TopLevelDecl)


State 18

   21 TopLevelDecl: FunctionDecl .

    $default  reduce using rule 21 (TopLevelDecl)


State 19

   22 TopLevelDecl: MethodDecl .

    $default  reduce using rule 22 (TopLevelDecl)


State 20

   40 Declaration: VarDecl .

    $default  reduce using rule 40 (Declaration)


State 21

   41 Declaration: ConstDecl .

    $default  reduce using rule 41 (Declaration)


State 22

   39 Declaration: TypeDecl .

    $default  reduce using rule 39 (Declaration)


State 23

   81 Parameters: LEFTPARAN . RIGHTPARAN
   82           | LEFTPARAN . ParameterList RIGHTPARAN
   83           | LEFTPARAN . ParameterList COMMA RIGHTPARAN

    ELIPSIS     shift, and go to state 53
    RIGHTPARAN  shift, and go to state 54
    IDENTIFIER  shift, and go to state 37

    ParameterList   go to state 55
    ParameterDecl   go to state 56
    IdentifierList  go to state 57


State 24

   44 FunctionName: IDENTIFIER .

    $default  reduce using rule 44 (FunctionName)


State 25

   42 FunctionDecl: FUNC FunctionName . Signature FunctionBody
   43             | FUNC FunctionName . Signature

    LEFTPARAN  shift, and go to state 23

    Signature   go to state 58
    Parameters  go to state 59


State 26

   92 Receiver: Parameters .

    $default  reduce using rule 92 (Receiver)


State 27

   45 MethodDecl: FUNC Receiver . IDENTIFIER Signature
   46           | FUNC Receiver . IDENTIFIER Signature FunctionBody

    IDENTIFIER  shift, and go to state 60


State 28

    9 ImportDecl: IMPORT LEFTPARAN . ImportSpecList RIGHTPARAN
   10           | IMPORT LEFTPARAN . RIGHTPARAN

    RIGHTPARAN          shift, and go to state 61
    DOT                 shift, and go to state 29
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 32
    ImportSpecList  go to state 62
    ImportSpec      go to state 63
    ImportPath      go to state 34
    String          go to state 35


State 29

   15 ImportSpec: DOT . ImportPath

    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31

    ImportPath  go to state 64
    String      go to state 35


State 30

  225 String: RAW_STRING .

    $default  reduce using rule 225 (String)


State 31

  226 String: INTERPRETED_STRING .

    $default  reduce using rule 226 (String)


State 32

   14 ImportSpec: PackageName . ImportPath

    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31

    ImportPath  go to state 65
    String      go to state 35


State 33

   11 ImportDecl: IMPORT ImportSpec .

    $default  reduce using rule 11 (ImportDecl)


State 34

   16 ImportSpec: ImportPath .

    $default  reduce using rule 16 (ImportSpec)


State 35

   17 ImportPath: String .

    $default  reduce using rule 17 (ImportPath)


State 36

   61 VarDecl: VAR LEFTPARAN . VarSpecList RIGHTPARAN
   62        | VAR LEFTPARAN . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 66
    IDENTIFIER  shift, and go to state 37

    VarSpecList     go to state 67
    VarSpec         go to state 68
    IdentifierList  go to state 39


State 37

   90 IdentifierList: IDENTIFIER .

    $default  reduce using rule 90 (IdentifierList)


State 38

   60 VarDecl: VAR VarSpec .

    $default  reduce using rule 60 (VarDecl)


State 39

   65 VarSpec: IdentifierList . Type
   66        | IdentifierList . Type EQ ExpressionList
   67        | IdentifierList . EQ ExpressionList
   89 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    EQ          shift, and go to state 72
    LEFTSQUARE  shift, and go to state 73
    COMMA       shift, and go to state 74
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 79
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 40

   69 ConstDecl: CONST LEFTPARAN . ConstSpecList RIGHTPARAN
   70          | CONST LEFTPARAN . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 86
    IDENTIFIER  shift, and go to state 37

    ConstSpecList   go to state 87
    ConstSpec       go to state 88
    IdentifierList  go to state 42


State 41

   68 ConstDecl: CONST ConstSpec .

    $default  reduce using rule 68 (ConstDecl)


State 42

   73 ConstSpec: IdentifierList . Type
   74          | IdentifierList . Type EQ ExpressionList
   75          | IdentifierList . EQ ExpressionList
   89 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    EQ          shift, and go to state 89
    LEFTSQUARE  shift, and go to state 73
    COMMA       shift, and go to state 74
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 90
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 43

  199 TypeDecl: TYPE LEFTPARAN . TypeSpecList RIGHTPARAN

    IDENTIFIER  shift, and go to state 44

    TypeSpecList  go to state 91
    TypeSpec      go to state 92
    AliasDecl     go to state 46
    TypeDef       go to state 47


State 44

  205 AliasDecl: IDENTIFIER . EQ Type
  206 TypeDef: IDENTIFIER . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    EQ          shift, and go to state 93
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 94
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 45

  200 TypeDecl: TYPE TypeSpec .

    $default  reduce using rule 200 (TypeDecl)


State 46

  203 TypeSpec: AliasDecl .

    $default  reduce using rule 203 (TypeSpec)


State 47

  204 TypeSpec: TypeDef .

    $default  reduce using rule 204 (TypeSpec)


State 48

    7 ImportDeclList: ImportDeclList ImportDecl . SCOLON

    SCOLON  shift, and go to state 95


State 49

    4 SourceFile: PackageClause SCOLON ImportDeclList TopLevelDeclList .
   18 TopLevelDeclList: TopLevelDeclList . TopLevelDecl SCOLON

    FUNC   shift, and go to state 8
    VAR    shift, and go to state 10
    CONST  shift, and go to state 11
    TYPE   shift, and go to state 12

    $default  reduce using rule 4 (SourceFile)

    TopLevelDecl  go to state 51
    Declaration   go to state 17
    FunctionDecl  go to state 18
    MethodDecl    go to state 19
    VarDecl       go to state 20
    ConstDecl     go to state 21
    TypeDecl      go to state 22


State 50

    8 ImportDeclList: ImportDecl SCOLON .

    $default  reduce using rule 8 (ImportDeclList)


State 51

   18 TopLevelDeclList: TopLevelDeclList TopLevelDecl . SCOLON

    SCOLON  shift, and go to state 96


State 52

   19 TopLevelDeclList: TopLevelDecl SCOLON .

    $default  reduce using rule 19 (TopLevelDeclList)


State 53

   88 ParameterDecl: ELIPSIS . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 97
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 54

   81 Parameters: LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 81 (Parameters)


State 55

   82 Parameters: LEFTPARAN ParameterList . RIGHTPARAN
   83           | LEFTPARAN ParameterList . COMMA RIGHTPARAN
   85 ParameterList: ParameterList . COMMA ParameterDecl

    RIGHTPARAN  shift, and go to state 98
    COMMA       shift, and go to state 99


State 56

   84 ParameterList: ParameterDecl .

    $default  reduce using rule 84 (ParameterList)


State 57

   86 ParameterDecl: IdentifierList . Type
   87              | IdentifierList . ELIPSIS Type
   89 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    ELIPSIS     shift, and go to state 100
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    COMMA       shift, and go to state 74
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 101
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 58

   42 FunctionDecl: FUNC FunctionName Signature . FunctionBody
   43             | FUNC FunctionName Signature .

    LEFTBRACE  shift, and go to state 102

    $default  reduce using rule 43 (FunctionDecl)

    Block         go to state 103
    FunctionBody  go to state 104


State 59

   77 Signature: Parameters .
   78          | Parameters . Result

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTPARAN   shift, and go to state 23
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    $default  reduce using rule 77 (Signature)

    PackageName     go to state 76
    Result          go to state 105
    Parameters      go to state 106
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 107
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 60

   45 MethodDecl: FUNC Receiver IDENTIFIER . Signature
   46           | FUNC Receiver IDENTIFIER . Signature FunctionBody

    LEFTPARAN  shift, and go to state 23

    Signature   go to state 108
    Parameters  go to state 59


State 61

   10 ImportDecl: IMPORT LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 10 (ImportDecl)


State 62

    9 ImportDecl: IMPORT LEFTPARAN ImportSpecList . RIGHTPARAN
   12 ImportSpecList: ImportSpecList . ImportSpec SCOLON

    RIGHTPARAN          shift, and go to state 109
    DOT                 shift, and go to state 29
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    IDENTIFIER          shift, and go to state 4

    PackageName  go to state 32
    ImportSpec   go to state 110
    ImportPath   go to state 34
    String       go to state 35


State 63

   13 ImportSpecList: ImportSpec . SCOLON

    SCOLON  shift, and go to state 111


State 64

   15 ImportSpec: DOT ImportPath .

    $default  reduce using rule 15 (ImportSpec)


State 65

   14 ImportSpec: PackageName ImportPath .

    $default  reduce using rule 14 (ImportSpec)


State 66

   62 VarDecl: VAR LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 62 (VarDecl)


State 67

   61 VarDecl: VAR LEFTPARAN VarSpecList . RIGHTPARAN
   63 VarSpecList: VarSpecList . VarSpec SCOLON

    RIGHTPARAN  shift, and go to state 112
    IDENTIFIER  shift, and go to state 37

    VarSpec         go to state 113
    IdentifierList  go to state 39


State 68

   64 VarSpecList: VarSpec . SCOLON

    SCOLON  shift, and go to state 114


State 69

  208 StructType: STRUCT . LEFTBRACE FieldDeclList RIGHTBRACE
  209           | STRUCT . LEFTBRACE RIGHTBRACE

    LEFTBRACE  shift, and go to state 115


State 70

  207 MapType: MAP . LEFTSQUARE Type RIGHTSQUARE Type

    LEFTSQUARE  shift, and go to state 116


State 71

  214 PointerType: MUL . BaseType

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 117
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    BaseType        go to state 118
    ArrayType       go to state 85


State 72

   67 VarSpec: IdentifierList EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    ExpressionList  go to state 146
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 73

   98 LiteralType: LEFTSQUARE . ELIPSIS RIGHTSQUARE Operand
  110 SliceType: LEFTSQUARE . RIGHTSQUARE Type
  216 ArrayType: LEFTSQUARE . Expression RIGHTSQUARE Type

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ELIPSIS             shift, and go to state 151
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTSQUARE         shift, and go to state 152
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 153
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 74

   89 IdentifierList: IdentifierList COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 154


State 75

    6 PackageName: IDENTIFIER .
  105 OperandName: IDENTIFIER .

    DOT       reduce using rule 6 (PackageName)
    DOT       [reduce using rule 105 (OperandName)]
    $default  reduce using rule 105 (OperandName)


State 76

   91 QualifiedIdent: PackageName . DOT IDENTIFIER

    DOT  shift, and go to state 155


State 77

  106 OperandName: QualifiedIdent .

    $default  reduce using rule 106 (OperandName)


State 78

  100 Type: LiteralType .

    $default  reduce using rule 100 (Type)


State 79

   65 VarSpec: IdentifierList Type .
   66        | IdentifierList Type . EQ ExpressionList

    EQ  shift, and go to state 156

    $default  reduce using rule 65 (VarSpec)


State 80

  101 Type: OperandName .

    $default  reduce using rule 101 (Type)


State 81

   97 LiteralType: SliceType .

    $default  reduce using rule 97 (LiteralType)


State 82

   99 LiteralType: MapType .

    $default  reduce using rule 99 (LiteralType)


State 83

   94 LiteralType: StructType .

    $default  reduce using rule 94 (LiteralType)


State 84

   96 LiteralType: PointerType .

    $default  reduce using rule 96 (LiteralType)


State 85

   95 LiteralType: ArrayType .

    $default  reduce using rule 95 (LiteralType)


State 86

   70 ConstDecl: CONST LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 70 (ConstDecl)


State 87

   69 ConstDecl: CONST LEFTPARAN ConstSpecList . RIGHTPARAN
   71 ConstSpecList: ConstSpecList . ConstSpec SCOLON

    RIGHTPARAN  shift, and go to state 157
    IDENTIFIER  shift, and go to state 37

    ConstSpec       go to state 158
    IdentifierList  go to state 42


State 88

   72 ConstSpecList: ConstSpec . SCOLON

    SCOLON  shift, and go to state 159


State 89

   75 ConstSpec: IdentifierList EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    ExpressionList  go to state 160
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 90

   73 ConstSpec: IdentifierList Type .
   74          | IdentifierList Type . EQ ExpressionList

    EQ  shift, and go to state 161

    $default  reduce using rule 73 (ConstSpec)


State 91

  199 TypeDecl: TYPE LEFTPARAN TypeSpecList . RIGHTPARAN
  201 TypeSpecList: TypeSpecList . TypeSpec SCOLON

    RIGHTPARAN  shift, and go to state 162
    IDENTIFIER  shift, and go to state 44

    TypeSpec   go to state 163
    AliasDecl  go to state 46
    TypeDef    go to state 47


State 92

  202 TypeSpecList: TypeSpec . SCOLON

    SCOLON  shift, and go to state 164


State 93

  205 AliasDecl: IDENTIFIER EQ . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 165
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 94

  206 TypeDef: IDENTIFIER Type .

    $default  reduce using rule 206 (TypeDef)


State 95

    7 ImportDeclList: ImportDeclList ImportDecl SCOLON .

    $default  reduce using rule 7 (ImportDeclList)


State 96

   18 TopLevelDeclList: TopLevelDeclList TopLevelDecl SCOLON .

    $default  reduce using rule 18 (TopLevelDeclList)


State 97

   88 ParameterDecl: ELIPSIS Type .

    $default  reduce using rule 88 (ParameterDecl)


State 98

   82 Parameters: LEFTPARAN ParameterList RIGHTPARAN .

    $default  reduce using rule 82 (Parameters)


State 99

   83 Parameters: LEFTPARAN ParameterList COMMA . RIGHTPARAN
   85 ParameterList: ParameterList COMMA . ParameterDecl

    ELIPSIS     shift, and go to state 53
    RIGHTPARAN  shift, and go to state 166
    IDENTIFIER  shift, and go to state 37

    ParameterDecl   go to state 167
    IdentifierList  go to state 57


State 100

   87 ParameterDecl: IdentifierList ELIPSIS . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 168
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 101

   86 ParameterDecl: IdentifierList Type .

    $default  reduce using rule 86 (ParameterDecl)


State 102

   23 Block: LEFTBRACE . StatementList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    BREAK               shift, and go to state 169
    CONTINUE            shift, and go to state 170
    RETURN              shift, and go to state 171
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 172
    FOR                 shift, and go to state 173
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 174
    NEW                 shift, and go to state 123
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    GOTO                shift, and go to state 175
    FALLTHROUGH         shift, and go to state 176
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 177

    $default  reduce using rule 54 (EmptyStmt)

    PackageName      go to state 76
    Block            go to state 178
    StatementList    go to state 179
    Statement        go to state 180
    Declaration      go to state 181
    LabeledStmt      go to state 182
    Label            go to state 183
    SimpleStmt       go to state 184
    EmptyStmt        go to state 185
    ExpressionStmt   go to state 186
    IncDecStmt       go to state 187
    Assignment       go to state 188
    ShortVarDecl     go to state 189
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 190
    QualifiedIdent   go to state 77
    CompositeLit     go to state 133
    LiteralType      go to state 134
    Operand          go to state 135
    OperandName      go to state 136
    SliceType        go to state 81
    ReturnStmt       go to state 191
    BreakStmt        go to state 192
    ContinueStmt     go to state 193
    GotoStmt         go to state 194
    SwitchStmt       go to state 195
    ExprSwitchStmt   go to state 196
    FallthroughStmt  go to state 197
    IfStmt           go to state 198
    ForStmt          go to state 199
    Expression       go to state 200
    ExpressionOR     go to state 138
    ExpressionAND    go to state 139
    ExpressionREL    go to state 140
    ExpressionADD    go to state 141
    ExpressionMUL    go to state 142
    UnaryExpr        go to state 143
    PrimaryExpr      go to state 144
    MakeExpr         go to state 145
    ExpressionList   go to state 201
    TypeDecl         go to state 22
    MapType          go to state 82
    StructType       go to state 83
    PointerType      go to state 84
    ArrayType        go to state 85
    Literal          go to state 147
    BasicLit         go to state 148
    String           go to state 149
    Unary_OP         go to state 150


State 103

   76 FunctionBody: Block .

    $default  reduce using rule 76 (FunctionBody)


State 104

   42 FunctionDecl: FUNC FunctionName Signature FunctionBody .

    $default  reduce using rule 42 (FunctionDecl)


State 105

   78 Signature: Parameters Result .

    $default  reduce using rule 78 (Signature)


State 106

   79 Result: Parameters .

    $default  reduce using rule 79 (Result)


State 107

   80 Result: Type .

    $default  reduce using rule 80 (Result)


State 108

   45 MethodDecl: FUNC Receiver IDENTIFIER Signature .
   46           | FUNC Receiver IDENTIFIER Signature . FunctionBody

    LEFTBRACE  shift, and go to state 102

    $default  reduce using rule 45 (MethodDecl)

    Block         go to state 103
    FunctionBody  go to state 202


State 109

    9 ImportDecl: IMPORT LEFTPARAN ImportSpecList RIGHTPARAN .

    $default  reduce using rule 9 (ImportDecl)


State 110

   12 ImportSpecList: ImportSpecList ImportSpec . SCOLON

    SCOLON  shift, and go to state 203


State 111

   13 ImportSpecList: ImportSpec SCOLON .

    $default  reduce using rule 13 (ImportSpecList)


State 112

   61 VarDecl: VAR LEFTPARAN VarSpecList RIGHTPARAN .

    $default  reduce using rule 61 (VarDecl)


State 113

   63 VarSpecList: VarSpecList VarSpec . SCOLON

    SCOLON  shift, and go to state 204


State 114

   64 VarSpecList: VarSpec SCOLON .

    $default  reduce using rule 64 (VarSpecList)


State 115

  208 StructType: STRUCT LEFTBRACE . FieldDeclList RIGHTBRACE
  209           | STRUCT LEFTBRACE . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 205
    IDENTIFIER  shift, and go to state 37

    IdentifierList  go to state 206
    FieldDeclList   go to state 207
    FieldDecl       go to state 208


State 116

  207 MapType: MAP LEFTSQUARE . Type RIGHTSQUARE Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 209
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 117

  215 BaseType: Type .

    $default  reduce using rule 215 (BaseType)


State 118

  214 PointerType: MUL BaseType .

    $default  reduce using rule 214 (PointerType)


State 119

  219 BasicLit: INTEGER_VAL .

    $default  reduce using rule 219 (BasicLit)


State 120

  220 BasicLit: FLOAT_VAL .

    $default  reduce using rule 220 (BasicLit)


State 121

  223 BasicLit: TRUE .

    $default  reduce using rule 223 (BasicLit)


State 122

  224 BasicLit: FALSE .

    $default  reduce using rule 224 (BasicLit)


State 123

  193 MakeExpr: NEW . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN  shift, and go to state 210


State 124

  190 MakeExpr: MAKE . LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN
  191         | MAKE . LEFTPARAN Type COMMA Expression RIGHTPARAN
  192         | MAKE . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN  shift, and go to state 211


State 125

  247 Unary_OP: ADD .

    $default  reduce using rule 247 (Unary_OP)


State 126

  248 Unary_OP: SUB .

    $default  reduce using rule 248 (Unary_OP)


State 127

  249 Unary_OP: NOT .

    $default  reduce using rule 249 (Unary_OP)


State 128

  250 Unary_OP: XOR .

    $default  reduce using rule 250 (Unary_OP)


State 129

  214 PointerType: MUL . BaseType
  251 Unary_OP: MUL .

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    STRUCT      [reduce using rule 251 (Unary_OP)]
    MAP         [reduce using rule 251 (Unary_OP)]
    IDENTIFIER  [reduce using rule 251 (Unary_OP)]
    $default    reduce using rule 251 (Unary_OP)

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 117
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    BaseType        go to state 118
    ArrayType       go to state 85


State 130

  252 Unary_OP: AND .

    $default  reduce using rule 252 (Unary_OP)


State 131

  104 Operand: LEFTPARAN . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 212
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 132

  221 BasicLit: BYTE_VAL .

    $default  reduce using rule 221 (BasicLit)


State 133

  218 Literal: CompositeLit .

    $default  reduce using rule 218 (Literal)


State 134

   93 CompositeLit: LiteralType . LiteralValue

    LEFTBRACE  shift, and go to state 213

    LiteralValue  go to state 214


State 135

  171 PrimaryExpr: Operand .

    $default  reduce using rule 171 (PrimaryExpr)


State 136

  103 Operand: OperandName .
  177 PrimaryExpr: OperandName . StructLiteral

    LEFTBRACE  shift, and go to state 215

    LEFTBRACE  [reduce using rule 103 (Operand)]
    $default   reduce using rule 103 (Operand)

    StructLiteral  go to state 216


State 137

  197 ExpressionList: Expression .
  198               | Expression . COMMA Expression

    COMMA  shift, and go to state 217

    $default  reduce using rule 197 (ExpressionList)


State 138

  158 Expression: ExpressionOR .
  159 ExpressionOR: ExpressionOR . LOGOR ExpressionAND

    LOGOR  shift, and go to state 218

    $default  reduce using rule 158 (Expression)


State 139

  160 ExpressionOR: ExpressionAND .
  161 ExpressionAND: ExpressionAND . LOGAND ExpressionREL

    LOGAND  shift, and go to state 219

    $default  reduce using rule 160 (ExpressionOR)


State 140

  162 ExpressionAND: ExpressionREL .
  163 ExpressionREL: ExpressionREL . Rel_OP ExpressionADD

    ISEQ    shift, and go to state 220
    NEQ     shift, and go to state 221
    LESSEQ  shift, and go to state 222
    GRTEQ   shift, and go to state 223
    GRT     shift, and go to state 224
    LESS    shift, and go to state 225

    $default  reduce using rule 162 (ExpressionAND)

    Rel_OP  go to state 226


State 141

  164 ExpressionREL: ExpressionADD .
  165 ExpressionADD: ExpressionADD . Add_OP ExpressionMUL

    ADD  shift, and go to state 227
    SUB  shift, and go to state 228
    XOR  shift, and go to state 229
    OR   shift, and go to state 230

    ADD       [reduce using rule 164 (ExpressionREL)]
    SUB       [reduce using rule 164 (ExpressionREL)]
    XOR       [reduce using rule 164 (ExpressionREL)]
    OR        [reduce using rule 164 (ExpressionREL)]
    $default  reduce using rule 164 (ExpressionREL)

    Add_OP  go to state 231


State 142

  166 ExpressionADD: ExpressionMUL .
  167 ExpressionMUL: ExpressionMUL . Mul_OP PrimaryExpr

    ANDNOT  shift, and go to state 232
    MUL     shift, and go to state 233
    AND     shift, and go to state 234
    MOD     shift, and go to state 235
    QUOT    shift, and go to state 236
    SHL     shift, and go to state 237
    SHR     shift, and go to state 238

    ANDNOT    [reduce using rule 166 (ExpressionADD)]
    MUL       [reduce using rule 166 (ExpressionADD)]
    AND       [reduce using rule 166 (ExpressionADD)]
    MOD       [reduce using rule 166 (ExpressionADD)]
    QUOT      [reduce using rule 166 (ExpressionADD)]
    SHL       [reduce using rule 166 (ExpressionADD)]
    SHR       [reduce using rule 166 (ExpressionADD)]
    $default  reduce using rule 166 (ExpressionADD)

    Mul_OP  go to state 239


State 143

  168 ExpressionMUL: UnaryExpr .

    $default  reduce using rule 168 (ExpressionMUL)


State 144

  169 UnaryExpr: PrimaryExpr .
  173 PrimaryExpr: PrimaryExpr . Selector
  174            | PrimaryExpr . Index
  175            | PrimaryExpr . Slice
  176            | PrimaryExpr . Arguments
  178            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 240
    LEFTSQUARE  shift, and go to state 241
    DOT         shift, and go to state 242

    $default  reduce using rule 169 (UnaryExpr)

    Selector       go to state 243
    Index          go to state 244
    Slice          go to state 245
    TypeAssertion  go to state 246
    Arguments      go to state 247


State 145

  172 PrimaryExpr: MakeExpr .

    $default  reduce using rule 172 (PrimaryExpr)


State 146

   67 VarSpec: IdentifierList EQ ExpressionList .

    $default  reduce using rule 67 (VarSpec)


State 147

  102 Operand: Literal .

    $default  reduce using rule 102 (Operand)


State 148

  217 Literal: BasicLit .

    $default  reduce using rule 217 (Literal)


State 149

  222 BasicLit: String .

    $default  reduce using rule 222 (BasicLit)


State 150

  170 UnaryExpr: Unary_OP . PrimaryExpr

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    MUL                 shift, and go to state 71
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    PrimaryExpr     go to state 248
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149


State 151

   98 LiteralType: LEFTSQUARE ELIPSIS . RIGHTSQUARE Operand

    RIGHTSQUARE  shift, and go to state 249


State 152

  110 SliceType: LEFTSQUARE RIGHTSQUARE . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 250
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 153

  216 ArrayType: LEFTSQUARE Expression . RIGHTSQUARE Type

    RIGHTSQUARE  shift, and go to state 251


State 154

   89 IdentifierList: IdentifierList COMMA IDENTIFIER .

    $default  reduce using rule 89 (IdentifierList)


State 155

   91 QualifiedIdent: PackageName DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 252


State 156

   66 VarSpec: IdentifierList Type EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    ExpressionList  go to state 253
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 157

   69 ConstDecl: CONST LEFTPARAN ConstSpecList RIGHTPARAN .

    $default  reduce using rule 69 (ConstDecl)


State 158

   71 ConstSpecList: ConstSpecList ConstSpec . SCOLON

    SCOLON  shift, and go to state 254


State 159

   72 ConstSpecList: ConstSpec SCOLON .

    $default  reduce using rule 72 (ConstSpecList)


State 160

   75 ConstSpec: IdentifierList EQ ExpressionList .

    $default  reduce using rule 75 (ConstSpec)


State 161

   74 ConstSpec: IdentifierList Type EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    ExpressionList  go to state 255
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 162

  199 TypeDecl: TYPE LEFTPARAN TypeSpecList RIGHTPARAN .

    $default  reduce using rule 199 (TypeDecl)


State 163

  201 TypeSpecList: TypeSpecList TypeSpec . SCOLON

    SCOLON  shift, and go to state 256


State 164

  202 TypeSpecList: TypeSpec SCOLON .

    $default  reduce using rule 202 (TypeSpecList)


State 165

  205 AliasDecl: IDENTIFIER EQ Type .

    $default  reduce using rule 205 (AliasDecl)


State 166

   83 Parameters: LEFTPARAN ParameterList COMMA RIGHTPARAN .

    $default  reduce using rule 83 (Parameters)


State 167

   85 ParameterList: ParameterList COMMA ParameterDecl .

    $default  reduce using rule 85 (ParameterList)


State 168

   87 ParameterDecl: IdentifierList ELIPSIS Type .

    $default  reduce using rule 87 (ParameterDecl)


State 169

  121 BreakStmt: BREAK .
  122          | BREAK . Label

    IDENTIFIER  shift, and go to state 257

    $default  reduce using rule 121 (BreakStmt)

    Label  go to state 258


State 170

  123 ContinueStmt: CONTINUE .
  124             | CONTINUE . Label

    IDENTIFIER  shift, and go to state 257

    $default  reduce using rule 123 (ContinueStmt)

    Label  go to state 259


State 171

  119 ReturnStmt: RETURN .
  120           | RETURN . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    $default  reduce using rule 119 (ReturnStmt)

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    ExpressionList  go to state 260
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 172

  141 IfStmt: IF . Expression Block
  142       | IF . SimpleStmt SCOLON Expression Block
  143       | IF . Expression Block ELSE IfStmt
  144       | IF . Expression Block ELSE Block
  145       | IF . SimpleStmt SCOLON Expression Block ELSE IfStmt
  146       | IF . SimpleStmt SCOLON Expression Block ELSE Block

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 261

    $default  reduce using rule 54 (EmptyStmt)

    PackageName     go to state 76
    SimpleStmt      go to state 262
    EmptyStmt       go to state 185
    ExpressionStmt  go to state 186
    IncDecStmt      go to state 187
    Assignment      go to state 188
    ShortVarDecl    go to state 189
    IdentifierList  go to state 190
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 263
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    ExpressionList  go to state 201
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 173

  147 ForStmt: FOR . Block
  148        | FOR . ForClause Block
  149        | FOR . Condition Block
  150        | FOR . RangeClause Block

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    RANGE               shift, and go to state 264
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 261

    $default  reduce using rule 54 (EmptyStmt)

    PackageName     go to state 76
    Block           go to state 265
    Condition       go to state 266
    SimpleStmt      go to state 267
    EmptyStmt       go to state 185
    ExpressionStmt  go to state 186
    IncDecStmt      go to state 187
    Assignment      go to state 188
    ShortVarDecl    go to state 189
    IdentifierList  go to state 268
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    ForClause       go to state 269
    InitStmt        go to state 270
    RangeClause     go to state 271
    Expression      go to state 272
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    ExpressionList  go to state 273
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 174

  127 ExprSwitchStmt: SWITCH . LEFTBRACE RIGHTBRACE
  128               | SWITCH . SimpleStmt SCOLON LEFTBRACE RIGHTBRACE
  129               | SWITCH . Expression LEFTBRACE RIGHTBRACE
  130               | SWITCH . SimpleStmt SCOLON Expression LEFTBRACE RIGHTBRACE
  131               | SWITCH . LEFTBRACE ExprCaseClauseList RIGHTBRACE
  132               | SWITCH . SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE
  133               | SWITCH . Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE
  134               | SWITCH . SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 274
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 261

    $default  reduce using rule 54 (EmptyStmt)

    PackageName     go to state 76
    SimpleStmt      go to state 275
    EmptyStmt       go to state 185
    ExpressionStmt  go to state 186
    IncDecStmt      go to state 187
    Assignment      go to state 188
    ShortVarDecl    go to state 189
    IdentifierList  go to state 190
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 276
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    ExpressionList  go to state 201
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 175

  125 GotoStmt: GOTO . Label

    IDENTIFIER  shift, and go to state 257

    Label  go to state 277


State 176

  140 FallthroughStmt: FALLTHROUGH .

    $default  reduce using rule 140 (FallthroughStmt)


State 177

    6 PackageName: IDENTIFIER .
   48 Label: IDENTIFIER .
   90 IdentifierList: IDENTIFIER .
  105 OperandName: IDENTIFIER .

    INFER_EQ  reduce using rule 90 (IdentifierList)
    COLON     reduce using rule 48 (Label)
    DOT       reduce using rule 6 (PackageName)
    DOT       [reduce using rule 105 (OperandName)]
    COMMA     reduce using rule 90 (IdentifierList)
    COMMA     [reduce using rule 105 (OperandName)]
    $default  reduce using rule 105 (OperandName)


State 178

   36 Statement: Block .

    $default  reduce using rule 36 (Statement)


State 179

   23 Block: LEFTBRACE StatementList . RIGHTBRACE
   25 StatementList: StatementList . Statement SCOLON

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    BREAK               shift, and go to state 169
    CONTINUE            shift, and go to state 170
    RETURN              shift, and go to state 171
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 172
    FOR                 shift, and go to state 173
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 174
    NEW                 shift, and go to state 123
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    GOTO                shift, and go to state 175
    FALLTHROUGH         shift, and go to state 176
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTBRACE          shift, and go to state 278
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 177

    $default  reduce using rule 54 (EmptyStmt)

    PackageName      go to state 76
    Block            go to state 178
    Statement        go to state 279
    Declaration      go to state 181
    LabeledStmt      go to state 182
    Label            go to state 183
    SimpleStmt       go to state 184
    EmptyStmt        go to state 185
    ExpressionStmt   go to state 186
    IncDecStmt       go to state 187
    Assignment       go to state 188
    ShortVarDecl     go to state 189
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 190
    QualifiedIdent   go to state 77
    CompositeLit     go to state 133
    LiteralType      go to state 134
    Operand          go to state 135
    OperandName      go to state 136
    SliceType        go to state 81
    ReturnStmt       go to state 191
    BreakStmt        go to state 192
    ContinueStmt     go to state 193
    GotoStmt         go to state 194
    SwitchStmt       go to state 195
    ExprSwitchStmt   go to state 196
    FallthroughStmt  go to state 197
    IfStmt           go to state 198
    ForStmt          go to state 199
    Expression       go to state 200
    ExpressionOR     go to state 138
    ExpressionAND    go to state 139
    ExpressionREL    go to state 140
    ExpressionADD    go to state 141
    ExpressionMUL    go to state 142
    UnaryExpr        go to state 143
    PrimaryExpr      go to state 144
    MakeExpr         go to state 145
    ExpressionList   go to state 201
    TypeDecl         go to state 22
    MapType          go to state 82
    StructType       go to state 83
    PointerType      go to state 84
    ArrayType        go to state 85
    Literal          go to state 147
    BasicLit         go to state 148
    String           go to state 149
    Unary_OP         go to state 150


State 180

   26 StatementList: Statement . SCOLON

    SCOLON  shift, and go to state 280


State 181

   27 Statement: Declaration .

    $default  reduce using rule 27 (Statement)


State 182

   28 Statement: LabeledStmt .

    $default  reduce using rule 28 (Statement)


State 183

   47 LabeledStmt: Label . COLON Statement

    COLON  shift, and go to state 281


State 184

   29 Statement: SimpleStmt .

    $default  reduce using rule 29 (Statement)


State 185

   49 SimpleStmt: EmptyStmt .

    $default  reduce using rule 49 (SimpleStmt)


State 186

   50 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 50 (SimpleStmt)


State 187

   51 SimpleStmt: IncDecStmt .

    $default  reduce using rule 51 (SimpleStmt)


State 188

   52 SimpleStmt: Assignment .

    $default  reduce using rule 52 (SimpleStmt)


State 189

   53 SimpleStmt: ShortVarDecl .

    $default  reduce using rule 53 (SimpleStmt)


State 190

   59 ShortVarDecl: IdentifierList . INFER_EQ ExpressionList
   89 IdentifierList: IdentifierList . COMMA IDENTIFIER

    INFER_EQ  shift, and go to state 282
    COMMA     shift, and go to state 74


State 191

   30 Statement: ReturnStmt .

    $default  reduce using rule 30 (Statement)


State 192

   31 Statement: BreakStmt .

    $default  reduce using rule 31 (Statement)


State 193

   32 Statement: ContinueStmt .

    $default  reduce using rule 32 (Statement)


State 194

   33 Statement: GotoStmt .

    $default  reduce using rule 33 (Statement)


State 195

   34 Statement: SwitchStmt .

    $default  reduce using rule 34 (Statement)


State 196

  126 SwitchStmt: ExprSwitchStmt .

    $default  reduce using rule 126 (SwitchStmt)


State 197

   35 Statement: FallthroughStmt .

    $default  reduce using rule 35 (Statement)


State 198

   37 Statement: IfStmt .

    $default  reduce using rule 37 (Statement)


State 199

   38 Statement: ForStmt .

    $default  reduce using rule 38 (Statement)


State 200

   55 ExpressionStmt: Expression .
   56 IncDecStmt: Expression . PLUSPLUS
   57           | Expression . MINUSMINUS
  197 ExpressionList: Expression .
  198               | Expression . COMMA Expression

    PLUSPLUS    shift, and go to state 283
    MINUSMINUS  shift, and go to state 284
    COMMA       shift, and go to state 217

    SCOLON     reduce using rule 55 (ExpressionStmt)
    LEFTBRACE  reduce using rule 55 (ExpressionStmt)
    $default   reduce using rule 197 (ExpressionList)


State 201

   58 Assignment: ExpressionList . Assign_OP ExpressionList

    ANDNOT  shift, and go to state 232
    ADD     shift, and go to state 227
    SUB     shift, and go to state 228
    XOR     shift, and go to state 229
    MUL     shift, and go to state 233
    AND     shift, and go to state 234
    OR      shift, and go to state 230
    MOD     shift, and go to state 235
    QUOT    shift, and go to state 236
    SHL     shift, and go to state 237
    SHR     shift, and go to state 238
    EQ      shift, and go to state 285

    Assign_OP  go to state 286
    Add_OP     go to state 287
    Mul_OP     go to state 288


State 202

   46 MethodDecl: FUNC Receiver IDENTIFIER Signature FunctionBody .

    $default  reduce using rule 46 (MethodDecl)


State 203

   12 ImportSpecList: ImportSpecList ImportSpec SCOLON .

    $default  reduce using rule 12 (ImportSpecList)


State 204

   63 VarSpecList: VarSpecList VarSpec SCOLON .

    $default  reduce using rule 63 (VarSpecList)


State 205

  209 StructType: STRUCT LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 209 (StructType)


State 206

   89 IdentifierList: IdentifierList . COMMA IDENTIFIER
  212 FieldDecl: IdentifierList . Type String
  213          | IdentifierList . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    COMMA       shift, and go to state 74
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 289
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 207

  208 StructType: STRUCT LEFTBRACE FieldDeclList . RIGHTBRACE
  211 FieldDeclList: FieldDeclList . FieldDecl SCOLON

    RIGHTBRACE  shift, and go to state 290
    IDENTIFIER  shift, and go to state 37

    IdentifierList  go to state 206
    FieldDecl       go to state 291


State 208

  210 FieldDeclList: FieldDecl . SCOLON

    SCOLON  shift, and go to state 292


State 209

  207 MapType: MAP LEFTSQUARE Type . RIGHTSQUARE Type

    RIGHTSQUARE  shift, and go to state 293


State 210

  193 MakeExpr: NEW LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 294
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 211

  190 MakeExpr: MAKE LEFTPARAN . Type COMMA Expression COMMA Expression RIGHTPARAN
  191         | MAKE LEFTPARAN . Type COMMA Expression RIGHTPARAN
  192         | MAKE LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 295
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 212

  104 Operand: LEFTPARAN Expression . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 296


State 213

  107 LiteralValue: LEFTBRACE . RIGHTBRACE
  108             | LEFTBRACE . ElementList RIGHTBRACE
  109             | LEFTBRACE . ElementList COMMA RIGHTBRACE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTBRACE          shift, and go to state 297
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 213
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    LiteralValue    go to state 298
    SliceType       go to state 81
    ElementList     go to state 299
    KeyedElement    go to state 300
    Key             go to state 301
    Element         go to state 302
    Expression      go to state 303
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 214

   93 CompositeLit: LiteralType LiteralValue .

    $default  reduce using rule 93 (CompositeLit)


State 215

  179 StructLiteral: LEFTBRACE . KeyValueList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 304
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    KeyValueList    go to state 305
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 216

  177 PrimaryExpr: OperandName StructLiteral .

    $default  reduce using rule 177 (PrimaryExpr)


State 217

  198 ExpressionList: Expression COMMA . Expression

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 306
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 218

  159 ExpressionOR: ExpressionOR LOGOR . ExpressionAND

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    ExpressionAND   go to state 307
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 219

  161 ExpressionAND: ExpressionAND LOGAND . ExpressionREL

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    ExpressionREL   go to state 308
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 220

  234 Rel_OP: ISEQ .

    $default  reduce using rule 234 (Rel_OP)


State 221

  235 Rel_OP: NEQ .

    $default  reduce using rule 235 (Rel_OP)


State 222

  236 Rel_OP: LESSEQ .

    $default  reduce using rule 236 (Rel_OP)


State 223

  237 Rel_OP: GRTEQ .

    $default  reduce using rule 237 (Rel_OP)


State 224

  238 Rel_OP: GRT .

    $default  reduce using rule 238 (Rel_OP)


State 225

  239 Rel_OP: LESS .

    $default  reduce using rule 239 (Rel_OP)


State 226

  163 ExpressionREL: ExpressionREL Rel_OP . ExpressionADD

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    ExpressionADD   go to state 309
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 227

  230 Add_OP: ADD .

    $default  reduce using rule 230 (Add_OP)


State 228

  231 Add_OP: SUB .

    $default  reduce using rule 231 (Add_OP)


State 229

  233 Add_OP: XOR .

    $default  reduce using rule 233 (Add_OP)


State 230

  232 Add_OP: OR .

    $default  reduce using rule 232 (Add_OP)


State 231

  165 ExpressionADD: ExpressionADD Add_OP . ExpressionMUL

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    ExpressionMUL   go to state 310
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 232

  246 Mul_OP: ANDNOT .

    $default  reduce using rule 246 (Mul_OP)


State 233

  240 Mul_OP: MUL .

    $default  reduce using rule 240 (Mul_OP)


State 234

  245 Mul_OP: AND .

    $default  reduce using rule 245 (Mul_OP)


State 235

  242 Mul_OP: MOD .

    $default  reduce using rule 242 (Mul_OP)


State 236

  241 Mul_OP: QUOT .

    $default  reduce using rule 241 (Mul_OP)


State 237

  243 Mul_OP: SHL .

    $default  reduce using rule 243 (Mul_OP)


State 238

  244 Mul_OP: SHR .

    $default  reduce using rule 244 (Mul_OP)


State 239

  167 ExpressionMUL: ExpressionMUL Mul_OP . PrimaryExpr

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    MUL                 shift, and go to state 71
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    PrimaryExpr     go to state 311
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149


State 240

  195 Arguments: LEFTPARAN . RIGHTPARAN
  196          | LEFTPARAN . ExpressionList ELIPSIS RIGHTPARAN

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTPARAN          shift, and go to state 312
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    ExpressionList  go to state 313
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 241

  183 Index: LEFTSQUARE . Expression RIGHTSQUARE
  184 Slice: LEFTSQUARE . COLON Expression RIGHTSQUARE
  185      | LEFTSQUARE . COLON RIGHTSQUARE
  186      | LEFTSQUARE . Expression COLON RIGHTSQUARE
  187      | LEFTSQUARE . Expression COLON Expression RIGHTSQUARE
  188      | LEFTSQUARE . COLON Expression COLON Expression RIGHTSQUARE
  189      | LEFTSQUARE . Expression COLON Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    COLON               shift, and go to state 314
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 315
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 242

  182 Selector: DOT . IDENTIFIER
  194 TypeAssertion: DOT . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN   shift, and go to state 316
    IDENTIFIER  shift, and go to state 317


State 243

  173 PrimaryExpr: PrimaryExpr Selector .

    $default  reduce using rule 173 (PrimaryExpr)


State 244

  174 PrimaryExpr: PrimaryExpr Index .

    $default  reduce using rule 174 (PrimaryExpr)


State 245

  175 PrimaryExpr: PrimaryExpr Slice .

    $default  reduce using rule 175 (PrimaryExpr)


State 246

  178 PrimaryExpr: PrimaryExpr TypeAssertion .

    $default  reduce using rule 178 (PrimaryExpr)


State 247

  176 PrimaryExpr: PrimaryExpr Arguments .

    $default  reduce using rule 176 (PrimaryExpr)


State 248

  170 UnaryExpr: Unary_OP PrimaryExpr .
  173 PrimaryExpr: PrimaryExpr . Selector
  174            | PrimaryExpr . Index
  175            | PrimaryExpr . Slice
  176            | PrimaryExpr . Arguments
  178            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 240
    LEFTSQUARE  shift, and go to state 241
    DOT         shift, and go to state 242

    $default  reduce using rule 170 (UnaryExpr)

    Selector       go to state 243
    Index          go to state 244
    Slice          go to state 245
    TypeAssertion  go to state 246
    Arguments      go to state 247


State 249

   98 LiteralType: LEFTSQUARE ELIPSIS RIGHTSQUARE . Operand

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    MAP                 shift, and go to state 70
    MUL                 shift, and go to state 71
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 318
    OperandName     go to state 319
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149


State 250

  110 SliceType: LEFTSQUARE RIGHTSQUARE Type .

    $default  reduce using rule 110 (SliceType)


State 251

  216 ArrayType: LEFTSQUARE Expression RIGHTSQUARE . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 320
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 252

   91 QualifiedIdent: PackageName DOT IDENTIFIER .

    $default  reduce using rule 91 (QualifiedIdent)


State 253

   66 VarSpec: IdentifierList Type EQ ExpressionList .

    $default  reduce using rule 66 (VarSpec)


State 254

   71 ConstSpecList: ConstSpecList ConstSpec SCOLON .

    $default  reduce using rule 71 (ConstSpecList)


State 255

   74 ConstSpec: IdentifierList Type EQ ExpressionList .

    $default  reduce using rule 74 (ConstSpec)


State 256

  201 TypeSpecList: TypeSpecList TypeSpec SCOLON .

    $default  reduce using rule 201 (TypeSpecList)


State 257

   48 Label: IDENTIFIER .

    $default  reduce using rule 48 (Label)


State 258

  122 BreakStmt: BREAK Label .

    $default  reduce using rule 122 (BreakStmt)


State 259

  124 ContinueStmt: CONTINUE Label .

    $default  reduce using rule 124 (ContinueStmt)


State 260

  120 ReturnStmt: RETURN ExpressionList .

    $default  reduce using rule 120 (ReturnStmt)


State 261

    6 PackageName: IDENTIFIER .
   90 IdentifierList: IDENTIFIER .
  105 OperandName: IDENTIFIER .

    INFER_EQ  reduce using rule 90 (IdentifierList)
    DOT       reduce using rule 6 (PackageName)
    DOT       [reduce using rule 105 (OperandName)]
    COMMA     reduce using rule 90 (IdentifierList)
    COMMA     [reduce using rule 105 (OperandName)]
    $default  reduce using rule 105 (OperandName)


State 262

  142 IfStmt: IF SimpleStmt . SCOLON Expression Block
  145       | IF SimpleStmt . SCOLON Expression Block ELSE IfStmt
  146       | IF SimpleStmt . SCOLON Expression Block ELSE Block

    SCOLON  shift, and go to state 321


State 263

   55 ExpressionStmt: Expression .
   56 IncDecStmt: Expression . PLUSPLUS
   57           | Expression . MINUSMINUS
  141 IfStmt: IF Expression . Block
  143       | IF Expression . Block ELSE IfStmt
  144       | IF Expression . Block ELSE Block
  197 ExpressionList: Expression .
  198               | Expression . COMMA Expression

    PLUSPLUS    shift, and go to state 283
    MINUSMINUS  shift, and go to state 284
    LEFTBRACE   shift, and go to state 102
    COMMA       shift, and go to state 217

    SCOLON    reduce using rule 55 (ExpressionStmt)
    $default  reduce using rule 197 (ExpressionList)

    Block  go to state 322


State 264

  155 RangeClause: RANGE . Expression

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 323
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 265

  147 ForStmt: FOR Block .

    $default  reduce using rule 147 (ForStmt)


State 266

  149 ForStmt: FOR Condition . Block

    LEFTBRACE  shift, and go to state 102

    Block  go to state 324


State 267

  153 InitStmt: SimpleStmt .

    $default  reduce using rule 153 (InitStmt)


State 268

   59 ShortVarDecl: IdentifierList . INFER_EQ ExpressionList
   89 IdentifierList: IdentifierList . COMMA IDENTIFIER
  156 RangeClause: IdentifierList . INFER_EQ RANGE Expression

    INFER_EQ  shift, and go to state 325
    COMMA     shift, and go to state 74


State 269

  148 ForStmt: FOR ForClause . Block

    LEFTBRACE  shift, and go to state 102

    Block  go to state 326


State 270

  151 ForClause: InitStmt . SCOLON SCOLON PostStmt
  152          | InitStmt . SCOLON Condition SCOLON PostStmt

    SCOLON  shift, and go to state 327


State 271

  150 ForStmt: FOR RangeClause . Block

    LEFTBRACE  shift, and go to state 102

    Block  go to state 328


State 272

   24 Condition: Expression .
   55 ExpressionStmt: Expression .
   56 IncDecStmt: Expression . PLUSPLUS
   57           | Expression . MINUSMINUS
  197 ExpressionList: Expression .
  198               | Expression . COMMA Expression

    PLUSPLUS    shift, and go to state 283
    MINUSMINUS  shift, and go to state 284
    COMMA       shift, and go to state 217

    SCOLON     reduce using rule 55 (ExpressionStmt)
    LEFTBRACE  reduce using rule 24 (Condition)
    $default   reduce using rule 197 (ExpressionList)


State 273

   58 Assignment: ExpressionList . Assign_OP ExpressionList
  157 RangeClause: ExpressionList . EQ RANGE Expression

    ANDNOT  shift, and go to state 232
    ADD     shift, and go to state 227
    SUB     shift, and go to state 228
    XOR     shift, and go to state 229
    MUL     shift, and go to state 233
    AND     shift, and go to state 234
    OR      shift, and go to state 230
    MOD     shift, and go to state 235
    QUOT    shift, and go to state 236
    SHL     shift, and go to state 237
    SHR     shift, and go to state 238
    EQ      shift, and go to state 329

    Assign_OP  go to state 286
    Add_OP     go to state 287
    Mul_OP     go to state 288


State 274

  127 ExprSwitchStmt: SWITCH LEFTBRACE . RIGHTBRACE
  131               | SWITCH LEFTBRACE . ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 332

    ExprCaseClauseList  go to state 333
    ExprCaseClause      go to state 334
    ExprSwitchCase      go to state 335


State 275

  128 ExprSwitchStmt: SWITCH SimpleStmt . SCOLON LEFTBRACE RIGHTBRACE
  130               | SWITCH SimpleStmt . SCOLON Expression LEFTBRACE RIGHTBRACE
  132               | SWITCH SimpleStmt . SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE
  134               | SWITCH SimpleStmt . SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

    SCOLON  shift, and go to state 336


State 276

   55 ExpressionStmt: Expression .
   56 IncDecStmt: Expression . PLUSPLUS
   57           | Expression . MINUSMINUS
  129 ExprSwitchStmt: SWITCH Expression . LEFTBRACE RIGHTBRACE
  133               | SWITCH Expression . LEFTBRACE ExprCaseClauseList RIGHTBRACE
  197 ExpressionList: Expression .
  198               | Expression . COMMA Expression

    PLUSPLUS    shift, and go to state 283
    MINUSMINUS  shift, and go to state 284
    LEFTBRACE   shift, and go to state 337
    COMMA       shift, and go to state 217

    SCOLON    reduce using rule 55 (ExpressionStmt)
    $default  reduce using rule 197 (ExpressionList)


State 277

  125 GotoStmt: GOTO Label .

    $default  reduce using rule 125 (GotoStmt)


State 278

   23 Block: LEFTBRACE StatementList RIGHTBRACE .

    $default  reduce using rule 23 (Block)


State 279

   25 StatementList: StatementList Statement . SCOLON

    SCOLON  shift, and go to state 338


State 280

   26 StatementList: Statement SCOLON .

    $default  reduce using rule 26 (StatementList)


State 281

   47 LabeledStmt: Label COLON . Statement

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    BREAK               shift, and go to state 169
    CONTINUE            shift, and go to state 170
    RETURN              shift, and go to state 171
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 172
    FOR                 shift, and go to state 173
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 174
    NEW                 shift, and go to state 123
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    GOTO                shift, and go to state 175
    FALLTHROUGH         shift, and go to state 176
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 177

    $default  reduce using rule 54 (EmptyStmt)

    PackageName      go to state 76
    Block            go to state 178
    Statement        go to state 339
    Declaration      go to state 181
    LabeledStmt      go to state 182
    Label            go to state 183
    SimpleStmt       go to state 184
    EmptyStmt        go to state 185
    ExpressionStmt   go to state 186
    IncDecStmt       go to state 187
    Assignment       go to state 188
    ShortVarDecl     go to state 189
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 190
    QualifiedIdent   go to state 77
    CompositeLit     go to state 133
    LiteralType      go to state 134
    Operand          go to state 135
    OperandName      go to state 136
    SliceType        go to state 81
    ReturnStmt       go to state 191
    BreakStmt        go to state 192
    ContinueStmt     go to state 193
    GotoStmt         go to state 194
    SwitchStmt       go to state 195
    ExprSwitchStmt   go to state 196
    FallthroughStmt  go to state 197
    IfStmt           go to state 198
    ForStmt          go to state 199
    Expression       go to state 200
    ExpressionOR     go to state 138
    ExpressionAND    go to state 139
    ExpressionREL    go to state 140
    ExpressionADD    go to state 141
    ExpressionMUL    go to state 142
    UnaryExpr        go to state 143
    PrimaryExpr      go to state 144
    MakeExpr         go to state 145
    ExpressionList   go to state 201
    TypeDecl         go to state 22
    MapType          go to state 82
    StructType       go to state 83
    PointerType      go to state 84
    ArrayType        go to state 85
    Literal          go to state 147
    BasicLit         go to state 148
    String           go to state 149
    Unary_OP         go to state 150


State 282

   59 ShortVarDecl: IdentifierList INFER_EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    ExpressionList  go to state 340
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 283

   56 IncDecStmt: Expression PLUSPLUS .

    $default  reduce using rule 56 (IncDecStmt)


State 284

   57 IncDecStmt: Expression MINUSMINUS .

    $default  reduce using rule 57 (IncDecStmt)


State 285

  227 Assign_OP: EQ .

    $default  reduce using rule 227 (Assign_OP)


State 286

   58 Assignment: ExpressionList Assign_OP . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    ExpressionList  go to state 341
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 287

  228 Assign_OP: Add_OP . EQ

    EQ  shift, and go to state 342


State 288

  229 Assign_OP: Mul_OP . EQ

    EQ  shift, and go to state 343


State 289

  212 FieldDecl: IdentifierList Type . String
  213          | IdentifierList Type .

    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31

    $default  reduce using rule 213 (FieldDecl)

    String  go to state 344


State 290

  208 StructType: STRUCT LEFTBRACE FieldDeclList RIGHTBRACE .

    $default  reduce using rule 208 (StructType)


State 291

  211 FieldDeclList: FieldDeclList FieldDecl . SCOLON

    SCOLON  shift, and go to state 345


State 292

  210 FieldDeclList: FieldDecl SCOLON .

    $default  reduce using rule 210 (FieldDeclList)


State 293

  207 MapType: MAP LEFTSQUARE Type RIGHTSQUARE . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 346
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 294

  193 MakeExpr: NEW LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 347


State 295

  190 MakeExpr: MAKE LEFTPARAN Type . COMMA Expression COMMA Expression RIGHTPARAN
  191         | MAKE LEFTPARAN Type . COMMA Expression RIGHTPARAN
  192         | MAKE LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 348
    COMMA       shift, and go to state 349


State 296

  104 Operand: LEFTPARAN Expression RIGHTPARAN .

    $default  reduce using rule 104 (Operand)


State 297

  107 LiteralValue: LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 107 (LiteralValue)


State 298

  116 Key: LiteralValue .
  118 Element: LiteralValue .

    COLON     reduce using rule 116 (Key)
    $default  reduce using rule 118 (Element)


State 299

  108 LiteralValue: LEFTBRACE ElementList . RIGHTBRACE
  109             | LEFTBRACE ElementList . COMMA RIGHTBRACE
  112 ElementList: ElementList . COMMA KeyedElement

    RIGHTBRACE  shift, and go to state 350
    COMMA       shift, and go to state 351


State 300

  111 ElementList: KeyedElement .

    $default  reduce using rule 111 (ElementList)


State 301

  114 KeyedElement: Key . COLON Element

    COLON  shift, and go to state 352


State 302

  113 KeyedElement: Element .

    $default  reduce using rule 113 (KeyedElement)


State 303

  115 Key: Expression .
  117 Element: Expression .

    COLON     reduce using rule 115 (Key)
    $default  reduce using rule 117 (Element)


State 304

  180 KeyValueList: Expression . COLON Expression
  181             | Expression . COLON Expression COMMA KeyValueList

    COLON  shift, and go to state 353


State 305

  179 StructLiteral: LEFTBRACE KeyValueList . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 354


State 306

  198 ExpressionList: Expression COMMA Expression .

    $default  reduce using rule 198 (ExpressionList)


State 307

  159 ExpressionOR: ExpressionOR LOGOR ExpressionAND .
  161 ExpressionAND: ExpressionAND . LOGAND ExpressionREL

    LOGAND  shift, and go to state 219

    $default  reduce using rule 159 (ExpressionOR)


State 308

  161 ExpressionAND: ExpressionAND LOGAND ExpressionREL .
  163 ExpressionREL: ExpressionREL . Rel_OP ExpressionADD

    ISEQ    shift, and go to state 220
    NEQ     shift, and go to state 221
    LESSEQ  shift, and go to state 222
    GRTEQ   shift, and go to state 223
    GRT     shift, and go to state 224
    LESS    shift, and go to state 225

    $default  reduce using rule 161 (ExpressionAND)

    Rel_OP  go to state 226


State 309

  163 ExpressionREL: ExpressionREL Rel_OP ExpressionADD .
  165 ExpressionADD: ExpressionADD . Add_OP ExpressionMUL

    ADD  shift, and go to state 227
    SUB  shift, and go to state 228
    XOR  shift, and go to state 229
    OR   shift, and go to state 230

    ADD       [reduce using rule 163 (ExpressionREL)]
    SUB       [reduce using rule 163 (ExpressionREL)]
    XOR       [reduce using rule 163 (ExpressionREL)]
    OR        [reduce using rule 163 (ExpressionREL)]
    $default  reduce using rule 163 (ExpressionREL)

    Add_OP  go to state 231


State 310

  165 ExpressionADD: ExpressionADD Add_OP ExpressionMUL .
  167 ExpressionMUL: ExpressionMUL . Mul_OP PrimaryExpr

    ANDNOT  shift, and go to state 232
    MUL     shift, and go to state 233
    AND     shift, and go to state 234
    MOD     shift, and go to state 235
    QUOT    shift, and go to state 236
    SHL     shift, and go to state 237
    SHR     shift, and go to state 238

    ANDNOT    [reduce using rule 165 (ExpressionADD)]
    MUL       [reduce using rule 165 (ExpressionADD)]
    AND       [reduce using rule 165 (ExpressionADD)]
    MOD       [reduce using rule 165 (ExpressionADD)]
    QUOT      [reduce using rule 165 (ExpressionADD)]
    SHL       [reduce using rule 165 (ExpressionADD)]
    SHR       [reduce using rule 165 (ExpressionADD)]
    $default  reduce using rule 165 (ExpressionADD)

    Mul_OP  go to state 239


State 311

  167 ExpressionMUL: ExpressionMUL Mul_OP PrimaryExpr .
  173 PrimaryExpr: PrimaryExpr . Selector
  174            | PrimaryExpr . Index
  175            | PrimaryExpr . Slice
  176            | PrimaryExpr . Arguments
  178            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 240
    LEFTSQUARE  shift, and go to state 241
    DOT         shift, and go to state 242

    $default  reduce using rule 167 (ExpressionMUL)

    Selector       go to state 243
    Index          go to state 244
    Slice          go to state 245
    TypeAssertion  go to state 246
    Arguments      go to state 247


State 312

  195 Arguments: LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 195 (Arguments)


State 313

  196 Arguments: LEFTPARAN ExpressionList . ELIPSIS RIGHTPARAN

    ELIPSIS  shift, and go to state 355


State 314

  184 Slice: LEFTSQUARE COLON . Expression RIGHTSQUARE
  185      | LEFTSQUARE COLON . RIGHTSQUARE
  188      | LEFTSQUARE COLON . Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTSQUARE         shift, and go to state 356
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 357
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 315

  183 Index: LEFTSQUARE Expression . RIGHTSQUARE
  186 Slice: LEFTSQUARE Expression . COLON RIGHTSQUARE
  187      | LEFTSQUARE Expression . COLON Expression RIGHTSQUARE
  189      | LEFTSQUARE Expression . COLON Expression COLON Expression RIGHTSQUARE

    RIGHTSQUARE  shift, and go to state 358
    COLON        shift, and go to state 359


State 316

  194 TypeAssertion: DOT LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 360
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 317

  182 Selector: DOT IDENTIFIER .

    $default  reduce using rule 182 (Selector)


State 318

   98 LiteralType: LEFTSQUARE ELIPSIS RIGHTSQUARE Operand .

    $default  reduce using rule 98 (LiteralType)


State 319

  103 Operand: OperandName .

    $default  reduce using rule 103 (Operand)


State 320

  216 ArrayType: LEFTSQUARE Expression RIGHTSQUARE Type .

    $default  reduce using rule 216 (ArrayType)


State 321

  142 IfStmt: IF SimpleStmt SCOLON . Expression Block
  145       | IF SimpleStmt SCOLON . Expression Block ELSE IfStmt
  146       | IF SimpleStmt SCOLON . Expression Block ELSE Block

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 361
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 322

  141 IfStmt: IF Expression Block .
  143       | IF Expression Block . ELSE IfStmt
  144       | IF Expression Block . ELSE Block

    ELSE  shift, and go to state 362

    $default  reduce using rule 141 (IfStmt)


State 323

  155 RangeClause: RANGE Expression .

    $default  reduce using rule 155 (RangeClause)


State 324

  149 ForStmt: FOR Condition Block .

    $default  reduce using rule 149 (ForStmt)


State 325

   59 ShortVarDecl: IdentifierList INFER_EQ . ExpressionList
  156 RangeClause: IdentifierList INFER_EQ . RANGE Expression

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    RANGE               shift, and go to state 363
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    ExpressionList  go to state 340
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 326

  148 ForStmt: FOR ForClause Block .

    $default  reduce using rule 148 (ForStmt)


State 327

  151 ForClause: InitStmt SCOLON . SCOLON PostStmt
  152          | InitStmt SCOLON . Condition SCOLON PostStmt

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    SCOLON              shift, and go to state 364
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    Condition       go to state 365
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 366
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 328

  150 ForStmt: FOR RangeClause Block .

    $default  reduce using rule 150 (ForStmt)


State 329

  157 RangeClause: ExpressionList EQ . RANGE Expression
  227 Assign_OP: EQ .

    RANGE  shift, and go to state 367

    $default  reduce using rule 227 (Assign_OP)


State 330

  138 ExprSwitchCase: CASE . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    ExpressionList  go to state 368
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 331

  139 ExprSwitchCase: DEFAULT .

    $default  reduce using rule 139 (ExprSwitchCase)


State 332

  127 ExprSwitchStmt: SWITCH LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 127 (ExprSwitchStmt)


State 333

  131 ExprSwitchStmt: SWITCH LEFTBRACE ExprCaseClauseList . RIGHTBRACE
  135 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 369

    ExprCaseClause  go to state 370
    ExprSwitchCase  go to state 335


State 334

  136 ExprCaseClauseList: ExprCaseClause .

    $default  reduce using rule 136 (ExprCaseClauseList)


State 335

  137 ExprCaseClause: ExprSwitchCase . COLON StatementList

    COLON  shift, and go to state 371


State 336

  128 ExprSwitchStmt: SWITCH SimpleStmt SCOLON . LEFTBRACE RIGHTBRACE
  130               | SWITCH SimpleStmt SCOLON . Expression LEFTBRACE RIGHTBRACE
  132               | SWITCH SimpleStmt SCOLON . LEFTBRACE ExprCaseClauseList RIGHTBRACE
  134               | SWITCH SimpleStmt SCOLON . Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 372
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 373
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 337

  129 ExprSwitchStmt: SWITCH Expression LEFTBRACE . RIGHTBRACE
  133               | SWITCH Expression LEFTBRACE . ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 374

    ExprCaseClauseList  go to state 375
    ExprCaseClause      go to state 334
    ExprSwitchCase      go to state 335


State 338

   25 StatementList: StatementList Statement SCOLON .

    $default  reduce using rule 25 (StatementList)


State 339

   47 LabeledStmt: Label COLON Statement .

    $default  reduce using rule 47 (LabeledStmt)


State 340

   59 ShortVarDecl: IdentifierList INFER_EQ ExpressionList .

    $default  reduce using rule 59 (ShortVarDecl)


State 341

   58 Assignment: ExpressionList Assign_OP ExpressionList .

    $default  reduce using rule 58 (Assignment)


State 342

  228 Assign_OP: Add_OP EQ .

    $default  reduce using rule 228 (Assign_OP)


State 343

  229 Assign_OP: Mul_OP EQ .

    $default  reduce using rule 229 (Assign_OP)


State 344

  212 FieldDecl: IdentifierList Type String .

    $default  reduce using rule 212 (FieldDecl)


State 345

  211 FieldDeclList: FieldDeclList FieldDecl SCOLON .

    $default  reduce using rule 211 (FieldDeclList)


State 346

  207 MapType: MAP LEFTSQUARE Type RIGHTSQUARE Type .

    $default  reduce using rule 207 (MapType)


State 347

  193 MakeExpr: NEW LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 193 (MakeExpr)


State 348

  192 MakeExpr: MAKE LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 192 (MakeExpr)


State 349

  190 MakeExpr: MAKE LEFTPARAN Type COMMA . Expression COMMA Expression RIGHTPARAN
  191         | MAKE LEFTPARAN Type COMMA . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 376
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 350

  108 LiteralValue: LEFTBRACE ElementList RIGHTBRACE .

    $default  reduce using rule 108 (LiteralValue)


State 351

  109 LiteralValue: LEFTBRACE ElementList COMMA . RIGHTBRACE
  112 ElementList: ElementList COMMA . KeyedElement

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTBRACE          shift, and go to state 377
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 213
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    LiteralValue    go to state 298
    SliceType       go to state 81
    KeyedElement    go to state 378
    Key             go to state 301
    Element         go to state 302
    Expression      go to state 303
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 352

  114 KeyedElement: Key COLON . Element

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 213
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    LiteralValue    go to state 379
    SliceType       go to state 81
    Element         go to state 380
    Expression      go to state 381
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 353

  180 KeyValueList: Expression COLON . Expression
  181             | Expression COLON . Expression COMMA KeyValueList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 382
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 354

  179 StructLiteral: LEFTBRACE KeyValueList RIGHTBRACE .

    $default  reduce using rule 179 (StructLiteral)


State 355

  196 Arguments: LEFTPARAN ExpressionList ELIPSIS . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 383


State 356

  185 Slice: LEFTSQUARE COLON RIGHTSQUARE .

    $default  reduce using rule 185 (Slice)


State 357

  184 Slice: LEFTSQUARE COLON Expression . RIGHTSQUARE
  188      | LEFTSQUARE COLON Expression . COLON Expression RIGHTSQUARE

    RIGHTSQUARE  shift, and go to state 384
    COLON        shift, and go to state 385


State 358

  183 Index: LEFTSQUARE Expression RIGHTSQUARE .

    $default  reduce using rule 183 (Index)


State 359

  186 Slice: LEFTSQUARE Expression COLON . RIGHTSQUARE
  187      | LEFTSQUARE Expression COLON . Expression RIGHTSQUARE
  189      | LEFTSQUARE Expression COLON . Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTSQUARE         shift, and go to state 386
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 387
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 360

  194 TypeAssertion: DOT LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 388


State 361

  142 IfStmt: IF SimpleStmt SCOLON Expression . Block
  145       | IF SimpleStmt SCOLON Expression . Block ELSE IfStmt
  146       | IF SimpleStmt SCOLON Expression . Block ELSE Block

    LEFTBRACE  shift, and go to state 102

    Block  go to state 389


State 362

  143 IfStmt: IF Expression Block ELSE . IfStmt
  144       | IF Expression Block ELSE . Block

    IF         shift, and go to state 172
    LEFTBRACE  shift, and go to state 102

    Block   go to state 390
    IfStmt  go to state 391


State 363

  156 RangeClause: IdentifierList INFER_EQ RANGE . Expression

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 392
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 364

  151 ForClause: InitStmt SCOLON SCOLON . PostStmt

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 261

    $default  reduce using rule 54 (EmptyStmt)

    PackageName     go to state 76
    SimpleStmt      go to state 393
    EmptyStmt       go to state 185
    ExpressionStmt  go to state 186
    IncDecStmt      go to state 187
    Assignment      go to state 188
    ShortVarDecl    go to state 189
    IdentifierList  go to state 190
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    PostStmt        go to state 394
    Expression      go to state 200
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    ExpressionList  go to state 201
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 365

  152 ForClause: InitStmt SCOLON Condition . SCOLON PostStmt

    SCOLON  shift, and go to state 395


State 366

   24 Condition: Expression .

    $default  reduce using rule 24 (Condition)


State 367

  157 RangeClause: ExpressionList EQ RANGE . Expression

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 396
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 368

  138 ExprSwitchCase: CASE ExpressionList .

    $default  reduce using rule 138 (ExprSwitchCase)


State 369

  131 ExprSwitchStmt: SWITCH LEFTBRACE ExprCaseClauseList RIGHTBRACE .

    $default  reduce using rule 131 (ExprSwitchStmt)


State 370

  135 ExprCaseClauseList: ExprCaseClauseList ExprCaseClause .

    $default  reduce using rule 135 (ExprCaseClauseList)


State 371

  137 ExprCaseClause: ExprSwitchCase COLON . StatementList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    BREAK               shift, and go to state 169
    CONTINUE            shift, and go to state 170
    RETURN              shift, and go to state 171
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 172
    FOR                 shift, and go to state 173
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 174
    NEW                 shift, and go to state 123
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    GOTO                shift, and go to state 175
    FALLTHROUGH         shift, and go to state 176
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 177

    $default  reduce using rule 54 (EmptyStmt)

    PackageName      go to state 76
    Block            go to state 178
    StatementList    go to state 397
    Statement        go to state 180
    Declaration      go to state 181
    LabeledStmt      go to state 182
    Label            go to state 183
    SimpleStmt       go to state 184
    EmptyStmt        go to state 185
    ExpressionStmt   go to state 186
    IncDecStmt       go to state 187
    Assignment       go to state 188
    ShortVarDecl     go to state 189
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 190
    QualifiedIdent   go to state 77
    CompositeLit     go to state 133
    LiteralType      go to state 134
    Operand          go to state 135
    OperandName      go to state 136
    SliceType        go to state 81
    ReturnStmt       go to state 191
    BreakStmt        go to state 192
    ContinueStmt     go to state 193
    GotoStmt         go to state 194
    SwitchStmt       go to state 195
    ExprSwitchStmt   go to state 196
    FallthroughStmt  go to state 197
    IfStmt           go to state 198
    ForStmt          go to state 199
    Expression       go to state 200
    ExpressionOR     go to state 138
    ExpressionAND    go to state 139
    ExpressionREL    go to state 140
    ExpressionADD    go to state 141
    ExpressionMUL    go to state 142
    UnaryExpr        go to state 143
    PrimaryExpr      go to state 144
    MakeExpr         go to state 145
    ExpressionList   go to state 201
    TypeDecl         go to state 22
    MapType          go to state 82
    StructType       go to state 83
    PointerType      go to state 84
    ArrayType        go to state 85
    Literal          go to state 147
    BasicLit         go to state 148
    String           go to state 149
    Unary_OP         go to state 150


State 372

  128 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE . RIGHTBRACE
  132               | SWITCH SimpleStmt SCOLON LEFTBRACE . ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 398

    ExprCaseClauseList  go to state 399
    ExprCaseClause      go to state 334
    ExprSwitchCase      go to state 335


State 373

  130 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression . LEFTBRACE RIGHTBRACE
  134               | SWITCH SimpleStmt SCOLON Expression . LEFTBRACE ExprCaseClauseList RIGHTBRACE

    LEFTBRACE  shift, and go to state 400


State 374

  129 ExprSwitchStmt: SWITCH Expression LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 129 (ExprSwitchStmt)


State 375

  133 ExprSwitchStmt: SWITCH Expression LEFTBRACE ExprCaseClauseList . RIGHTBRACE
  135 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 401

    ExprCaseClause  go to state 370
    ExprSwitchCase  go to state 335


State 376

  190 MakeExpr: MAKE LEFTPARAN Type COMMA Expression . COMMA Expression RIGHTPARAN
  191         | MAKE LEFTPARAN Type COMMA Expression . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 402
    COMMA       shift, and go to state 403


State 377

  109 LiteralValue: LEFTBRACE ElementList COMMA RIGHTBRACE .

    $default  reduce using rule 109 (LiteralValue)


State 378

  112 ElementList: ElementList COMMA KeyedElement .

    $default  reduce using rule 112 (ElementList)


State 379

  118 Element: LiteralValue .

    $default  reduce using rule 118 (Element)


State 380

  114 KeyedElement: Key COLON Element .

    $default  reduce using rule 114 (KeyedElement)


State 381

  117 Element: Expression .

    $default  reduce using rule 117 (Element)


State 382

  180 KeyValueList: Expression COLON Expression .
  181             | Expression COLON Expression . COMMA KeyValueList

    COMMA  shift, and go to state 404

    $default  reduce using rule 180 (KeyValueList)


State 383

  196 Arguments: LEFTPARAN ExpressionList ELIPSIS RIGHTPARAN .

    $default  reduce using rule 196 (Arguments)


State 384

  184 Slice: LEFTSQUARE COLON Expression RIGHTSQUARE .

    $default  reduce using rule 184 (Slice)


State 385

  188 Slice: LEFTSQUARE COLON Expression COLON . Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 405
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 386

  186 Slice: LEFTSQUARE Expression COLON RIGHTSQUARE .

    $default  reduce using rule 186 (Slice)


State 387

  187 Slice: LEFTSQUARE Expression COLON Expression . RIGHTSQUARE
  189      | LEFTSQUARE Expression COLON Expression . COLON Expression RIGHTSQUARE

    RIGHTSQUARE  shift, and go to state 406
    COLON        shift, and go to state 407


State 388

  194 TypeAssertion: DOT LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 194 (TypeAssertion)


State 389

  142 IfStmt: IF SimpleStmt SCOLON Expression Block .
  145       | IF SimpleStmt SCOLON Expression Block . ELSE IfStmt
  146       | IF SimpleStmt SCOLON Expression Block . ELSE Block

    ELSE  shift, and go to state 408

    $default  reduce using rule 142 (IfStmt)


State 390

  144 IfStmt: IF Expression Block ELSE Block .

    $default  reduce using rule 144 (IfStmt)


State 391

  143 IfStmt: IF Expression Block ELSE IfStmt .

    $default  reduce using rule 143 (IfStmt)


State 392

  156 RangeClause: IdentifierList INFER_EQ RANGE Expression .

    $default  reduce using rule 156 (RangeClause)


State 393

  154 PostStmt: SimpleStmt .

    $default  reduce using rule 154 (PostStmt)


State 394

  151 ForClause: InitStmt SCOLON SCOLON PostStmt .

    $default  reduce using rule 151 (ForClause)


State 395

  152 ForClause: InitStmt SCOLON Condition SCOLON . PostStmt

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 261

    $default  reduce using rule 54 (EmptyStmt)

    PackageName     go to state 76
    SimpleStmt      go to state 393
    EmptyStmt       go to state 185
    ExpressionStmt  go to state 186
    IncDecStmt      go to state 187
    Assignment      go to state 188
    ShortVarDecl    go to state 189
    IdentifierList  go to state 190
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    PostStmt        go to state 409
    Expression      go to state 200
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    ExpressionList  go to state 201
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 396

  157 RangeClause: ExpressionList EQ RANGE Expression .

    $default  reduce using rule 157 (RangeClause)


State 397

   25 StatementList: StatementList . Statement SCOLON
  137 ExprCaseClause: ExprSwitchCase COLON StatementList .

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    BREAK               shift, and go to state 169
    CONTINUE            shift, and go to state 170
    RETURN              shift, and go to state 171
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 172
    FOR                 shift, and go to state 173
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 174
    NEW                 shift, and go to state 123
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    GOTO                shift, and go to state 175
    FALLTHROUGH         shift, and go to state 176
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 177

    SCOLON    reduce using rule 54 (EmptyStmt)
    $default  reduce using rule 137 (ExprCaseClause)

    PackageName      go to state 76
    Block            go to state 178
    Statement        go to state 279
    Declaration      go to state 181
    LabeledStmt      go to state 182
    Label            go to state 183
    SimpleStmt       go to state 184
    EmptyStmt        go to state 185
    ExpressionStmt   go to state 186
    IncDecStmt       go to state 187
    Assignment       go to state 188
    ShortVarDecl     go to state 189
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 190
    QualifiedIdent   go to state 77
    CompositeLit     go to state 133
    LiteralType      go to state 134
    Operand          go to state 135
    OperandName      go to state 136
    SliceType        go to state 81
    ReturnStmt       go to state 191
    BreakStmt        go to state 192
    ContinueStmt     go to state 193
    GotoStmt         go to state 194
    SwitchStmt       go to state 195
    ExprSwitchStmt   go to state 196
    FallthroughStmt  go to state 197
    IfStmt           go to state 198
    ForStmt          go to state 199
    Expression       go to state 200
    ExpressionOR     go to state 138
    ExpressionAND    go to state 139
    ExpressionREL    go to state 140
    ExpressionADD    go to state 141
    ExpressionMUL    go to state 142
    UnaryExpr        go to state 143
    PrimaryExpr      go to state 144
    MakeExpr         go to state 145
    ExpressionList   go to state 201
    TypeDecl         go to state 22
    MapType          go to state 82
    StructType       go to state 83
    PointerType      go to state 84
    ArrayType        go to state 85
    Literal          go to state 147
    BasicLit         go to state 148
    String           go to state 149
    Unary_OP         go to state 150


State 398

  128 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 128 (ExprSwitchStmt)


State 399

  132 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList . RIGHTBRACE
  135 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 410

    ExprCaseClause  go to state 370
    ExprSwitchCase  go to state 335


State 400

  130 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE . RIGHTBRACE
  134               | SWITCH SimpleStmt SCOLON Expression LEFTBRACE . ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 411

    ExprCaseClauseList  go to state 412
    ExprCaseClause      go to state 334
    ExprSwitchCase      go to state 335


State 401

  133 ExprSwitchStmt: SWITCH Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE .

    $default  reduce using rule 133 (ExprSwitchStmt)


State 402

  191 MakeExpr: MAKE LEFTPARAN Type COMMA Expression RIGHTPARAN .

    $default  reduce using rule 191 (MakeExpr)


State 403

  190 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 413
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 404

  181 KeyValueList: Expression COLON Expression COMMA . KeyValueList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 304
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    KeyValueList    go to state 414
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 405

  188 Slice: LEFTSQUARE COLON Expression COLON Expression . RIGHTSQUARE

    RIGHTSQUARE  shift, and go to state 415


State 406

  187 Slice: LEFTSQUARE Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 187 (Slice)


State 407

  189 Slice: LEFTSQUARE Expression COLON Expression COLON . Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 416
    ExpressionOR    go to state 138
    ExpressionAND   go to state 139
    ExpressionREL   go to state 140
    ExpressionADD   go to state 141
    ExpressionMUL   go to state 142
    UnaryExpr       go to state 143
    PrimaryExpr     go to state 144
    MakeExpr        go to state 145
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 147
    BasicLit        go to state 148
    String          go to state 149
    Unary_OP        go to state 150


State 408

  145 IfStmt: IF SimpleStmt SCOLON Expression Block ELSE . IfStmt
  146       | IF SimpleStmt SCOLON Expression Block ELSE . Block

    IF         shift, and go to state 172
    LEFTBRACE  shift, and go to state 102

    Block   go to state 417
    IfStmt  go to state 418


State 409

  152 ForClause: InitStmt SCOLON Condition SCOLON PostStmt .

    $default  reduce using rule 152 (ForClause)


State 410

  132 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE .

    $default  reduce using rule 132 (ExprSwitchStmt)


State 411

  130 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 130 (ExprSwitchStmt)


State 412

  134 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList . RIGHTBRACE
  135 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 419

    ExprCaseClause  go to state 370
    ExprSwitchCase  go to state 335


State 413

  190 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 420


State 414

  181 KeyValueList: Expression COLON Expression COMMA KeyValueList .

    $default  reduce using rule 181 (KeyValueList)


State 415

  188 Slice: LEFTSQUARE COLON Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 188 (Slice)


State 416

  189 Slice: LEFTSQUARE Expression COLON Expression COLON Expression . RIGHTSQUARE

    RIGHTSQUARE  shift, and go to state 421


State 417

  146 IfStmt: IF SimpleStmt SCOLON Expression Block ELSE Block .

    $default  reduce using rule 146 (IfStmt)


State 418

  145 IfStmt: IF SimpleStmt SCOLON Expression Block ELSE IfStmt .

    $default  reduce using rule 145 (IfStmt)


State 419

  134 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE .

    $default  reduce using rule 134 (ExprSwitchStmt)


State 420

  190 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN .

    $default  reduce using rule 190 (MakeExpr)


State 421

  189 Slice: LEFTSQUARE Expression COLON Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 189 (Slice)
