Terminals unused in grammar

   NULLPOINTER
   ASSIGN


State 75 conflicts: 1 reduce/reduce
State 129 conflicts: 3 shift/reduce
State 136 conflicts: 1 shift/reduce
State 172 conflicts: 2 reduce/reduce
State 195 conflicts: 11 shift/reduce
State 257 conflicts: 2 reduce/reduce
State 259 conflicts: 11 shift/reduce
State 268 conflicts: 11 shift/reduce
State 272 conflicts: 11 shift/reduce


Grammar

    0 $accept: SourceFile $end

    1 SourceFile: PackageClause SCOLON
    2           | PackageClause SCOLON ImportDeclList
    3           | PackageClause SCOLON TopLevelDeclList
    4           | PackageClause SCOLON ImportDeclList TopLevelDeclList

    5 PackageClause: PACKAGE PackageName

    6 PackageName: IDENTIFIER

    7 ImportDeclList: ImportDeclList ImportDecl SCOLON
    8               | ImportDecl SCOLON

    9 ImportDecl: IMPORT LEFTPARAN ImportSpecList RIGHTPARAN
   10           | IMPORT LEFTPARAN RIGHTPARAN
   11           | IMPORT ImportSpec

   12 ImportSpecList: ImportSpecList ImportSpec SCOLON
   13               | ImportSpec SCOLON

   14 ImportSpec: PackageName ImportPath
   15           | DOT ImportPath
   16           | ImportPath

   17 ImportPath: String

   18 TopLevelDeclList: TopLevelDeclList TopLevelDecl SCOLON
   19                 | TopLevelDecl SCOLON

   20 TopLevelDecl: Declaration
   21             | FunctionDecl
   22             | MethodDecl

   23 Block: LEFTBRACE StatementList RIGHTBRACE

   24 Condition: Expression

   25 StatementList: StatementList Statement SCOLON
   26              | Statement SCOLON

   27 Statement: Declaration
   28          | LabeledStmt
   29          | SimpleStmt
   30          | ReturnStmt
   31          | BreakStmt
   32          | ContinueStmt
   33          | GotoStmt
   34          | SwitchStmt
   35          | FallthroughStmt
   36          | Block
   37          | IfStmt
   38          | ForStmt

   39 Declaration: TypeDecl
   40            | VarDecl
   41            | ConstDecl

   42 FunctionDecl: FUNC FunctionName Signature FunctionBody
   43             | FUNC FunctionName Signature

   44 FunctionName: IDENTIFIER

   45 MethodDecl: FUNC Receiver IDENTIFIER Signature
   46           | FUNC Receiver IDENTIFIER Signature FunctionBody

   47 LabeledStmt: Label COLON Statement

   48 Label: IDENTIFIER

   49 SimpleStmt: EmptyStmt
   50           | ExpressionStmt
   51           | IncDecStmt
   52           | Assignment
   53           | ShortVarDecl

   54 EmptyStmt: %empty

   55 ExpressionStmt: Expression

   56 IncDecStmt: Expression PLUSPLUS
   57           | Expression MINUSMINUS

   58 Assignment: ExpressionList Assign_OP ExpressionList

   59 ShortVarDecl: IdentifierList INFER_EQ ExpressionList

   60 VarDecl: VAR VarSpec
   61        | VAR LEFTPARAN VarSpecList RIGHTPARAN
   62        | VAR LEFTPARAN RIGHTPARAN

   63 VarSpecList: VarSpecList VarSpec SCOLON
   64            | VarSpec SCOLON

   65 VarSpec: IdentifierList Type
   66        | IdentifierList Type EQ ExpressionList
   67        | IdentifierList EQ ExpressionList

   68 ConstDecl: CONST ConstSpec
   69          | CONST LEFTPARAN ConstSpecList RIGHTPARAN
   70          | CONST LEFTPARAN RIGHTPARAN

   71 ConstSpecList: ConstSpecList ConstSpec SCOLON
   72              | ConstSpec SCOLON

   73 ConstSpec: IdentifierList Type
   74          | IdentifierList Type EQ ExpressionList
   75          | IdentifierList EQ ExpressionList

   76 FunctionBody: Block

   77 Signature: Parameters
   78          | Parameters Result

   79 Result: Parameters
   80       | Type

   81 Parameters: LEFTPARAN RIGHTPARAN
   82           | LEFTPARAN ParameterList RIGHTPARAN
   83           | LEFTPARAN ParameterList COMMA RIGHTPARAN

   84 ParameterList: ParameterDecl
   85              | ParameterList COMMA ParameterDecl

   86 ParameterDecl: IdentifierList Type
   87              | IdentifierList ELIPSIS Type
   88              | ELIPSIS Type

   89 IdentifierList: IdentifierList COMMA IDENTIFIER
   90               | IDENTIFIER

   91 QualifiedIdent: PackageName DOT IDENTIFIER

   92 Receiver: Parameters

   93 CompositeLit: LiteralType LiteralValue

   94 LiteralType: StructType
   95            | ArrayType
   96            | PointerType
   97            | SliceType
   98            | LEFTSQUARE ELIPSIS RIGHTSQUARE Operand
   99            | MapType

  100 Type: LiteralType
  101     | OperandName

  102 Operand: Literal
  103        | OperandName
  104        | LEFTPARAN Expression RIGHTPARAN

  105 OperandName: IDENTIFIER
  106            | QualifiedIdent

  107 LiteralValue: LEFTBRACE RIGHTBRACE
  108             | LEFTBRACE ElementList RIGHTBRACE
  109             | LEFTBRACE ElementList COMMA RIGHTBRACE

  110 SliceType: LEFTSQUARE RIGHTSQUARE Type

  111 ElementList: KeyedElement
  112            | ElementList COMMA KeyedElement

  113 KeyedElement: Element
  114             | Key COLON Element

  115 Key: Expression
  116    | LiteralValue

  117 Element: Expression
  118        | LiteralValue

  119 ReturnStmt: RETURN
  120           | RETURN ExpressionList

  121 BreakStmt: BREAK
  122          | BREAK Label

  123 ContinueStmt: CONTINUE
  124             | CONTINUE Label

  125 GotoStmt: GOTO Label

  126 SwitchStmt: ExprSwitchStmt

  127 ExprSwitchStmt: SWITCH LEFTBRACE RIGHTBRACE
  128               | SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE
  129               | SWITCH Expression LEFTBRACE RIGHTBRACE
  130               | SWITCH SimpleStmt SCOLON Expression LEFTBRACE RIGHTBRACE
  131               | SWITCH LEFTBRACE ExprCaseClauseList RIGHTBRACE
  132               | SWITCH SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE
  133               | SWITCH Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE
  134               | SWITCH SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

  135 ExprCaseClauseList: ExprCaseClauseList ExprCaseClause
  136                   | ExprCaseClause

  137 ExprCaseClause: ExprSwitchCase COLON StatementList

  138 ExprSwitchCase: CASE ExpressionList
  139               | DEFAULT

  140 FallthroughStmt: FALLTHROUGH

  141 IfStmt: IF Expression Block
  142       | IF SimpleStmt SCOLON Expression Block
  143       | IF Expression Block ELSE IfStmt
  144       | IF Expression Block ELSE Block
  145       | IF SimpleStmt SCOLON Expression Block ELSE IfStmt
  146       | IF SimpleStmt SCOLON Expression Block ELSE Block

  147 ForStmt: FOR Block
  148        | FOR ForClause Block
  149        | FOR Condition Block
  150        | FOR RangeClause Block

  151 ForClause: InitStmt SCOLON SCOLON PostStmt
  152          | InitStmt SCOLON Condition SCOLON PostStmt

  153 InitStmt: SimpleStmt

  154 PostStmt: SimpleStmt

  155 RangeClause: RANGE Expression
  156            | IdentifierList INFER_EQ RANGE Expression
  157            | ExpressionList EQ RANGE Expression

  158 Expression: UnaryExpr
  159           | Expression Binary_OP Expression

  160 UnaryExpr: PrimaryExpr
  161          | Unary_OP PrimaryExpr

  162 PrimaryExpr: Operand
  163            | MakeExpr
  164            | PrimaryExpr Selector
  165            | PrimaryExpr Index
  166            | PrimaryExpr Slice
  167            | PrimaryExpr Arguments
  168            | OperandName StructLiteral
  169            | PrimaryExpr TypeAssertion

  170 StructLiteral: LEFTBRACE KeyValueList RIGHTBRACE

  171 KeyValueList: Expression COLON Expression
  172             | Expression COLON Expression COMMA KeyValueList

  173 Selector: DOT IDENTIFIER

  174 Index: LEFTSQUARE Expression RIGHTSQUARE

  175 Slice: LEFTSQUARE COLON Expression RIGHTSQUARE
  176      | LEFTSQUARE COLON RIGHTSQUARE
  177      | LEFTSQUARE Expression COLON RIGHTSQUARE
  178      | LEFTSQUARE Expression COLON Expression RIGHTSQUARE
  179      | LEFTSQUARE COLON Expression COLON Expression RIGHTSQUARE
  180      | LEFTSQUARE Expression COLON Expression COLON Expression RIGHTSQUARE

  181 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN
  182         | MAKE LEFTPARAN Type COMMA Expression RIGHTPARAN
  183         | MAKE LEFTPARAN Type RIGHTPARAN
  184         | NEW LEFTPARAN Type RIGHTPARAN

  185 TypeAssertion: DOT LEFTPARAN Type RIGHTPARAN

  186 Arguments: LEFTPARAN RIGHTPARAN
  187          | LEFTPARAN ExpressionList ELIPSIS RIGHTPARAN

  188 ExpressionList: Expression
  189               | Expression COMMA Expression

  190 TypeDecl: TYPE LEFTPARAN TypeSpecList RIGHTPARAN
  191         | TYPE TypeSpec

  192 TypeSpecList: TypeSpecList TypeSpec SCOLON
  193             | TypeSpec SCOLON

  194 TypeSpec: AliasDecl
  195         | TypeDef

  196 AliasDecl: IDENTIFIER EQ Type

  197 TypeDef: IDENTIFIER Type

  198 MapType: MAP LEFTSQUARE Type RIGHTSQUARE Type

  199 StructType: STRUCT LEFTBRACE FieldDeclList RIGHTBRACE
  200           | STRUCT LEFTBRACE RIGHTBRACE

  201 FieldDeclList: FieldDecl SCOLON
  202              | FieldDeclList FieldDecl SCOLON

  203 FieldDecl: IdentifierList Type String
  204          | IdentifierList Type

  205 PointerType: MUL BaseType

  206 BaseType: Type

  207 ArrayType: LEFTSQUARE Expression RIGHTSQUARE Type

  208 Literal: BasicLit
  209        | CompositeLit

  210 BasicLit: INTEGER_VAL
  211         | FLOAT_VAL
  212         | BYTE_VAL
  213         | String
  214         | TRUE
  215         | FALSE

  216 String: RAW_STRING
  217       | INTERPRETED_STRING

  218 Assign_OP: EQ
  219          | Add_OP EQ
  220          | Mul_OP EQ

  221 Add_OP: ADD
  222       | SUB
  223       | OR
  224       | XOR

  225 Rel_OP: ISEQ
  226       | NEQ
  227       | LESSEQ
  228       | GRTEQ
  229       | GRT
  230       | LESS

  231 Mul_OP: MUL
  232       | QUOT
  233       | MOD
  234       | SHL
  235       | SHR
  236       | AND
  237       | ANDNOT

  238 Unary_OP: ADD
  239         | SUB
  240         | NOT
  241         | XOR
  242         | MUL
  243         | AND

  244 Binary_OP: LOGAND
  245          | LOGOR
  246          | Rel_OP
  247          | Add_OP
  248          | Mul_OP


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER_VAL (258) 210
FLOAT_VAL (259) 211
TRUE (260) 214
FALSE (261) 215
NULLPOINTER (262)
BREAK (263) 121 122
CONTINUE (264) 123 124
RETURN (265) 119 120
SCOLON (266) 1 2 3 4 7 8 12 13 18 19 25 26 63 64 71 72 128 130 132
    134 142 145 146 151 152 192 193 201 202
FUNC (267) 42 43 45 46
STRUCT (268) 199 200
ELSE (269) 143 144 145 146
PACKAGE (270) 5
IF (271) 141 142 143 144 145 146
FOR (272) 147 148 149 150
RANGE (273) 155 156 157
IMPORT (274) 9 10 11
VAR (275) 60 61 62
SWITCH (276) 127 128 129 130 131 132 133 134
CASE (277) 138
NEW (278) 184
CONST (279) 68 69 70
MAP (280) 198
DEFAULT (281) 139
MAKE (282) 181 182 183
GOTO (283) 125
FALLTHROUGH (284) 140
TYPE (285) 190 191
PLUSPLUS (286) 56
MINUSMINUS (287) 57
ANDNOT (288) 237
ELIPSIS (289) 87 88 98 187
ADD (290) 221 238
SUB (291) 222 239
NOT (292) 240
XOR (293) 224 241
MUL (294) 205 231 242
AND (295) 236 243
OR (296) 223
LOGOR (297) 245
LOGAND (298) 244
ISEQ (299) 225
NEQ (300) 226
LESSEQ (301) 227
GRTEQ (302) 228
GRT (303) 229
LESS (304) 230
MOD (305) 233
QUOT (306) 232
SHL (307) 234
SHR (308) 235
EQ (309) 66 67 74 75 157 196 218 219 220
INFER_EQ (310) 59 156
RIGHTPARAN (311) 9 10 61 62 69 70 81 82 83 104 181 182 183 184 185
    186 187 190
RIGHTBRACE (312) 23 107 108 109 127 128 129 130 131 132 133 134 170
    199 200
RIGHTSQUARE (313) 98 110 174 175 176 177 178 179 180 198 207
LEFTPARAN (314) 9 10 61 62 69 70 81 82 83 104 181 182 183 184 185 186
    187 190
LEFTBRACE (315) 23 107 108 109 127 128 129 130 131 132 133 134 170
    199 200
LEFTSQUARE (316) 98 110 174 175 176 177 178 179 180 198 207
COLON (317) 47 114 137 171 172 175 176 177 178 179 180
DOT (318) 15 91 173 185
COMMA (319) 83 85 89 109 112 172 181 182 189
RAW_STRING (320) 216
INTERPRETED_STRING (321) 217
BYTE_VAL (322) 212
IDENTIFIER (323) 6 44 45 46 48 89 90 91 105 173 196 197
ASSIGN (324)


Nonterminals, with rules where they appear

$accept (70)
    on left: 0
SourceFile (71)
    on left: 1 2 3 4, on right: 0
PackageClause (72)
    on left: 5, on right: 1 2 3 4
PackageName (73)
    on left: 6, on right: 5 14 91
ImportDeclList (74)
    on left: 7 8, on right: 2 4 7
ImportDecl (75)
    on left: 9 10 11, on right: 7 8
ImportSpecList (76)
    on left: 12 13, on right: 9 12
ImportSpec (77)
    on left: 14 15 16, on right: 11 12 13
ImportPath (78)
    on left: 17, on right: 14 15 16
TopLevelDeclList (79)
    on left: 18 19, on right: 3 4 18
TopLevelDecl (80)
    on left: 20 21 22, on right: 18 19
Block (81)
    on left: 23, on right: 36 76 141 142 143 144 145 146 147 148 149
    150
Condition (82)
    on left: 24, on right: 149 152
StatementList (83)
    on left: 25 26, on right: 23 25 137
Statement (84)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38, on right: 25 26 47
Declaration (85)
    on left: 39 40 41, on right: 20 27
FunctionDecl (86)
    on left: 42 43, on right: 21
FunctionName (87)
    on left: 44, on right: 42 43
MethodDecl (88)
    on left: 45 46, on right: 22
LabeledStmt (89)
    on left: 47, on right: 28
Label (90)
    on left: 48, on right: 47 122 124 125
SimpleStmt (91)
    on left: 49 50 51 52 53, on right: 29 128 130 132 134 142 145 146
    153 154
EmptyStmt (92)
    on left: 54, on right: 49
ExpressionStmt (93)
    on left: 55, on right: 50
IncDecStmt (94)
    on left: 56 57, on right: 51
Assignment (95)
    on left: 58, on right: 52
ShortVarDecl (96)
    on left: 59, on right: 53
VarDecl (97)
    on left: 60 61 62, on right: 40
VarSpecList (98)
    on left: 63 64, on right: 61 63
VarSpec (99)
    on left: 65 66 67, on right: 60 63 64
ConstDecl (100)
    on left: 68 69 70, on right: 41
ConstSpecList (101)
    on left: 71 72, on right: 69 71
ConstSpec (102)
    on left: 73 74 75, on right: 68 71 72
FunctionBody (103)
    on left: 76, on right: 42 46
Signature (104)
    on left: 77 78, on right: 42 43 45 46
Result (105)
    on left: 79 80, on right: 78
Parameters (106)
    on left: 81 82 83, on right: 77 78 79 92
ParameterList (107)
    on left: 84 85, on right: 82 83 85
ParameterDecl (108)
    on left: 86 87 88, on right: 84 85
IdentifierList (109)
    on left: 89 90, on right: 59 65 66 67 73 74 75 86 87 89 156 203
    204
QualifiedIdent (110)
    on left: 91, on right: 106
Receiver (111)
    on left: 92, on right: 45 46
CompositeLit (112)
    on left: 93, on right: 209
LiteralType (113)
    on left: 94 95 96 97 98 99, on right: 93 100
Type (114)
    on left: 100 101, on right: 65 66 73 74 80 86 87 88 110 181 182
    183 184 185 196 197 198 203 204 206 207
Operand (115)
    on left: 102 103 104, on right: 98 162
OperandName (116)
    on left: 105 106, on right: 101 103 168
LiteralValue (117)
    on left: 107 108 109, on right: 93 116 118
SliceType (118)
    on left: 110, on right: 97
ElementList (119)
    on left: 111 112, on right: 108 109 112
KeyedElement (120)
    on left: 113 114, on right: 111 112
Key (121)
    on left: 115 116, on right: 114
Element (122)
    on left: 117 118, on right: 113 114
ReturnStmt (123)
    on left: 119 120, on right: 30
BreakStmt (124)
    on left: 121 122, on right: 31
ContinueStmt (125)
    on left: 123 124, on right: 32
GotoStmt (126)
    on left: 125, on right: 33
SwitchStmt (127)
    on left: 126, on right: 34
ExprSwitchStmt (128)
    on left: 127 128 129 130 131 132 133 134, on right: 126
ExprCaseClauseList (129)
    on left: 135 136, on right: 131 132 133 134 135
ExprCaseClause (130)
    on left: 137, on right: 135 136
ExprSwitchCase (131)
    on left: 138 139, on right: 137
FallthroughStmt (132)
    on left: 140, on right: 35
IfStmt (133)
    on left: 141 142 143 144 145 146, on right: 37 143 145
ForStmt (134)
    on left: 147 148 149 150, on right: 38
ForClause (135)
    on left: 151 152, on right: 148
InitStmt (136)
    on left: 153, on right: 151 152
PostStmt (137)
    on left: 154, on right: 151 152
RangeClause (138)
    on left: 155 156 157, on right: 150
Expression (139)
    on left: 158 159, on right: 24 55 56 57 104 115 117 129 130 133
    134 141 142 143 144 145 146 155 156 157 159 171 172 174 175 177
    178 179 180 181 182 188 189 207
UnaryExpr (140)
    on left: 160 161, on right: 158
PrimaryExpr (141)
    on left: 162 163 164 165 166 167 168 169, on right: 160 161 164
    165 166 167 169
StructLiteral (142)
    on left: 170, on right: 168
KeyValueList (143)
    on left: 171 172, on right: 170 172
Selector (144)
    on left: 173, on right: 164
Index (145)
    on left: 174, on right: 165
Slice (146)
    on left: 175 176 177 178 179 180, on right: 166
MakeExpr (147)
    on left: 181 182 183 184, on right: 163
TypeAssertion (148)
    on left: 185, on right: 169
Arguments (149)
    on left: 186 187, on right: 167
ExpressionList (150)
    on left: 188 189, on right: 58 59 66 67 74 75 120 138 157 187
TypeDecl (151)
    on left: 190 191, on right: 39
TypeSpecList (152)
    on left: 192 193, on right: 190 192
TypeSpec (153)
    on left: 194 195, on right: 191 192 193
AliasDecl (154)
    on left: 196, on right: 194
TypeDef (155)
    on left: 197, on right: 195
MapType (156)
    on left: 198, on right: 99
StructType (157)
    on left: 199 200, on right: 94
FieldDeclList (158)
    on left: 201 202, on right: 199 202
FieldDecl (159)
    on left: 203 204, on right: 201 202
PointerType (160)
    on left: 205, on right: 96
BaseType (161)
    on left: 206, on right: 205
ArrayType (162)
    on left: 207, on right: 95
Literal (163)
    on left: 208 209, on right: 102
BasicLit (164)
    on left: 210 211 212 213 214 215, on right: 208
String (165)
    on left: 216 217, on right: 17 203 213
Assign_OP (166)
    on left: 218 219 220, on right: 58
Add_OP (167)
    on left: 221 222 223 224, on right: 219 247
Rel_OP (168)
    on left: 225 226 227 228 229 230, on right: 246
Mul_OP (169)
    on left: 231 232 233 234 235 236 237, on right: 220 248
Unary_OP (170)
    on left: 238 239 240 241 242 243, on right: 161
Binary_OP (171)
    on left: 244 245 246 247 248, on right: 159


State 0

    0 $accept: . SourceFile $end

    PACKAGE  shift, and go to state 1

    SourceFile     go to state 2
    PackageClause  go to state 3


State 1

    5 PackageClause: PACKAGE . PackageName

    IDENTIFIER  shift, and go to state 4

    PackageName  go to state 5


State 2

    0 $accept: SourceFile . $end

    $end  shift, and go to state 6


State 3

    1 SourceFile: PackageClause . SCOLON
    2           | PackageClause . SCOLON ImportDeclList
    3           | PackageClause . SCOLON TopLevelDeclList
    4           | PackageClause . SCOLON ImportDeclList TopLevelDeclList

    SCOLON  shift, and go to state 7


State 4

    6 PackageName: IDENTIFIER .

    $default  reduce using rule 6 (PackageName)


State 5

    5 PackageClause: PACKAGE PackageName .

    $default  reduce using rule 5 (PackageClause)


State 6

    0 $accept: SourceFile $end .

    $default  accept


State 7

    1 SourceFile: PackageClause SCOLON .
    2           | PackageClause SCOLON . ImportDeclList
    3           | PackageClause SCOLON . TopLevelDeclList
    4           | PackageClause SCOLON . ImportDeclList TopLevelDeclList

    FUNC    shift, and go to state 8
    IMPORT  shift, and go to state 9
    VAR     shift, and go to state 10
    CONST   shift, and go to state 11
    TYPE    shift, and go to state 12

    $default  reduce using rule 1 (SourceFile)

    ImportDeclList    go to state 13
    ImportDecl        go to state 14
    TopLevelDeclList  go to state 15
    TopLevelDecl      go to state 16
    Declaration       go to state 17
    FunctionDecl      go to state 18
    MethodDecl        go to state 19
    VarDecl           go to state 20
    ConstDecl         go to state 21
    TypeDecl          go to state 22


State 8

   42 FunctionDecl: FUNC . FunctionName Signature FunctionBody
   43             | FUNC . FunctionName Signature
   45 MethodDecl: FUNC . Receiver IDENTIFIER Signature
   46           | FUNC . Receiver IDENTIFIER Signature FunctionBody

    LEFTPARAN   shift, and go to state 23
    IDENTIFIER  shift, and go to state 24

    FunctionName  go to state 25
    Parameters    go to state 26
    Receiver      go to state 27


State 9

    9 ImportDecl: IMPORT . LEFTPARAN ImportSpecList RIGHTPARAN
   10           | IMPORT . LEFTPARAN RIGHTPARAN
   11           | IMPORT . ImportSpec

    LEFTPARAN           shift, and go to state 28
    DOT                 shift, and go to state 29
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    IDENTIFIER          shift, and go to state 4

    PackageName  go to state 32
    ImportSpec   go to state 33
    ImportPath   go to state 34
    String       go to state 35


State 10

   60 VarDecl: VAR . VarSpec
   61        | VAR . LEFTPARAN VarSpecList RIGHTPARAN
   62        | VAR . LEFTPARAN RIGHTPARAN

    LEFTPARAN   shift, and go to state 36
    IDENTIFIER  shift, and go to state 37

    VarSpec         go to state 38
    IdentifierList  go to state 39


State 11

   68 ConstDecl: CONST . ConstSpec
   69          | CONST . LEFTPARAN ConstSpecList RIGHTPARAN
   70          | CONST . LEFTPARAN RIGHTPARAN

    LEFTPARAN   shift, and go to state 40
    IDENTIFIER  shift, and go to state 37

    ConstSpec       go to state 41
    IdentifierList  go to state 42


State 12

  190 TypeDecl: TYPE . LEFTPARAN TypeSpecList RIGHTPARAN
  191         | TYPE . TypeSpec

    LEFTPARAN   shift, and go to state 43
    IDENTIFIER  shift, and go to state 44

    TypeSpec   go to state 45
    AliasDecl  go to state 46
    TypeDef    go to state 47


State 13

    2 SourceFile: PackageClause SCOLON ImportDeclList .
    4           | PackageClause SCOLON ImportDeclList . TopLevelDeclList
    7 ImportDeclList: ImportDeclList . ImportDecl SCOLON

    FUNC    shift, and go to state 8
    IMPORT  shift, and go to state 9
    VAR     shift, and go to state 10
    CONST   shift, and go to state 11
    TYPE    shift, and go to state 12

    $default  reduce using rule 2 (SourceFile)

    ImportDecl        go to state 48
    TopLevelDeclList  go to state 49
    TopLevelDecl      go to state 16
    Declaration       go to state 17
    FunctionDecl      go to state 18
    MethodDecl        go to state 19
    VarDecl           go to state 20
    ConstDecl         go to state 21
    TypeDecl          go to state 22


State 14

    8 ImportDeclList: ImportDecl . SCOLON

    SCOLON  shift, and go to state 50


State 15

    3 SourceFile: PackageClause SCOLON TopLevelDeclList .
   18 TopLevelDeclList: TopLevelDeclList . TopLevelDecl SCOLON

    FUNC   shift, and go to state 8
    VAR    shift, and go to state 10
    CONST  shift, and go to state 11
    TYPE   shift, and go to state 12

    $default  reduce using rule 3 (SourceFile)

    TopLevelDecl  go to state 51
    Declaration   go to state 17
    FunctionDecl  go to state 18
    MethodDecl    go to state 19
    VarDecl       go to state 20
    ConstDecl     go to state 21
    TypeDecl      go to state 22


State 16

   19 TopLevelDeclList: TopLevelDecl . SCOLON

    SCOLON  shift, and go to state 52


State 17

   20 TopLevelDecl: Declaration .

    $default  reduce using rule 20 (TopLevelDecl)


State 18

   21 TopLevelDecl: FunctionDecl .

    $default  reduce using rule 21 (TopLevelDecl)


State 19

   22 TopLevelDecl: MethodDecl .

    $default  reduce using rule 22 (TopLevelDecl)


State 20

   40 Declaration: VarDecl .

    $default  reduce using rule 40 (Declaration)


State 21

   41 Declaration: ConstDecl .

    $default  reduce using rule 41 (Declaration)


State 22

   39 Declaration: TypeDecl .

    $default  reduce using rule 39 (Declaration)


State 23

   81 Parameters: LEFTPARAN . RIGHTPARAN
   82           | LEFTPARAN . ParameterList RIGHTPARAN
   83           | LEFTPARAN . ParameterList COMMA RIGHTPARAN

    ELIPSIS     shift, and go to state 53
    RIGHTPARAN  shift, and go to state 54
    IDENTIFIER  shift, and go to state 37

    ParameterList   go to state 55
    ParameterDecl   go to state 56
    IdentifierList  go to state 57


State 24

   44 FunctionName: IDENTIFIER .

    $default  reduce using rule 44 (FunctionName)


State 25

   42 FunctionDecl: FUNC FunctionName . Signature FunctionBody
   43             | FUNC FunctionName . Signature

    LEFTPARAN  shift, and go to state 23

    Signature   go to state 58
    Parameters  go to state 59


State 26

   92 Receiver: Parameters .

    $default  reduce using rule 92 (Receiver)


State 27

   45 MethodDecl: FUNC Receiver . IDENTIFIER Signature
   46           | FUNC Receiver . IDENTIFIER Signature FunctionBody

    IDENTIFIER  shift, and go to state 60


State 28

    9 ImportDecl: IMPORT LEFTPARAN . ImportSpecList RIGHTPARAN
   10           | IMPORT LEFTPARAN . RIGHTPARAN

    RIGHTPARAN          shift, and go to state 61
    DOT                 shift, and go to state 29
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 32
    ImportSpecList  go to state 62
    ImportSpec      go to state 63
    ImportPath      go to state 34
    String          go to state 35


State 29

   15 ImportSpec: DOT . ImportPath

    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31

    ImportPath  go to state 64
    String      go to state 35


State 30

  216 String: RAW_STRING .

    $default  reduce using rule 216 (String)


State 31

  217 String: INTERPRETED_STRING .

    $default  reduce using rule 217 (String)


State 32

   14 ImportSpec: PackageName . ImportPath

    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31

    ImportPath  go to state 65
    String      go to state 35


State 33

   11 ImportDecl: IMPORT ImportSpec .

    $default  reduce using rule 11 (ImportDecl)


State 34

   16 ImportSpec: ImportPath .

    $default  reduce using rule 16 (ImportSpec)


State 35

   17 ImportPath: String .

    $default  reduce using rule 17 (ImportPath)


State 36

   61 VarDecl: VAR LEFTPARAN . VarSpecList RIGHTPARAN
   62        | VAR LEFTPARAN . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 66
    IDENTIFIER  shift, and go to state 37

    VarSpecList     go to state 67
    VarSpec         go to state 68
    IdentifierList  go to state 39


State 37

   90 IdentifierList: IDENTIFIER .

    $default  reduce using rule 90 (IdentifierList)


State 38

   60 VarDecl: VAR VarSpec .

    $default  reduce using rule 60 (VarDecl)


State 39

   65 VarSpec: IdentifierList . Type
   66        | IdentifierList . Type EQ ExpressionList
   67        | IdentifierList . EQ ExpressionList
   89 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    EQ          shift, and go to state 72
    LEFTSQUARE  shift, and go to state 73
    COMMA       shift, and go to state 74
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 79
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 40

   69 ConstDecl: CONST LEFTPARAN . ConstSpecList RIGHTPARAN
   70          | CONST LEFTPARAN . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 86
    IDENTIFIER  shift, and go to state 37

    ConstSpecList   go to state 87
    ConstSpec       go to state 88
    IdentifierList  go to state 42


State 41

   68 ConstDecl: CONST ConstSpec .

    $default  reduce using rule 68 (ConstDecl)


State 42

   73 ConstSpec: IdentifierList . Type
   74          | IdentifierList . Type EQ ExpressionList
   75          | IdentifierList . EQ ExpressionList
   89 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    EQ          shift, and go to state 89
    LEFTSQUARE  shift, and go to state 73
    COMMA       shift, and go to state 74
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 90
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 43

  190 TypeDecl: TYPE LEFTPARAN . TypeSpecList RIGHTPARAN

    IDENTIFIER  shift, and go to state 44

    TypeSpecList  go to state 91
    TypeSpec      go to state 92
    AliasDecl     go to state 46
    TypeDef       go to state 47


State 44

  196 AliasDecl: IDENTIFIER . EQ Type
  197 TypeDef: IDENTIFIER . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    EQ          shift, and go to state 93
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 94
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 45

  191 TypeDecl: TYPE TypeSpec .

    $default  reduce using rule 191 (TypeDecl)


State 46

  194 TypeSpec: AliasDecl .

    $default  reduce using rule 194 (TypeSpec)


State 47

  195 TypeSpec: TypeDef .

    $default  reduce using rule 195 (TypeSpec)


State 48

    7 ImportDeclList: ImportDeclList ImportDecl . SCOLON

    SCOLON  shift, and go to state 95


State 49

    4 SourceFile: PackageClause SCOLON ImportDeclList TopLevelDeclList .
   18 TopLevelDeclList: TopLevelDeclList . TopLevelDecl SCOLON

    FUNC   shift, and go to state 8
    VAR    shift, and go to state 10
    CONST  shift, and go to state 11
    TYPE   shift, and go to state 12

    $default  reduce using rule 4 (SourceFile)

    TopLevelDecl  go to state 51
    Declaration   go to state 17
    FunctionDecl  go to state 18
    MethodDecl    go to state 19
    VarDecl       go to state 20
    ConstDecl     go to state 21
    TypeDecl      go to state 22


State 50

    8 ImportDeclList: ImportDecl SCOLON .

    $default  reduce using rule 8 (ImportDeclList)


State 51

   18 TopLevelDeclList: TopLevelDeclList TopLevelDecl . SCOLON

    SCOLON  shift, and go to state 96


State 52

   19 TopLevelDeclList: TopLevelDecl SCOLON .

    $default  reduce using rule 19 (TopLevelDeclList)


State 53

   88 ParameterDecl: ELIPSIS . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 97
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 54

   81 Parameters: LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 81 (Parameters)


State 55

   82 Parameters: LEFTPARAN ParameterList . RIGHTPARAN
   83           | LEFTPARAN ParameterList . COMMA RIGHTPARAN
   85 ParameterList: ParameterList . COMMA ParameterDecl

    RIGHTPARAN  shift, and go to state 98
    COMMA       shift, and go to state 99


State 56

   84 ParameterList: ParameterDecl .

    $default  reduce using rule 84 (ParameterList)


State 57

   86 ParameterDecl: IdentifierList . Type
   87              | IdentifierList . ELIPSIS Type
   89 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    ELIPSIS     shift, and go to state 100
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    COMMA       shift, and go to state 74
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 101
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 58

   42 FunctionDecl: FUNC FunctionName Signature . FunctionBody
   43             | FUNC FunctionName Signature .

    LEFTBRACE  shift, and go to state 102

    $default  reduce using rule 43 (FunctionDecl)

    Block         go to state 103
    FunctionBody  go to state 104


State 59

   77 Signature: Parameters .
   78          | Parameters . Result

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTPARAN   shift, and go to state 23
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    $default  reduce using rule 77 (Signature)

    PackageName     go to state 76
    Result          go to state 105
    Parameters      go to state 106
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 107
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 60

   45 MethodDecl: FUNC Receiver IDENTIFIER . Signature
   46           | FUNC Receiver IDENTIFIER . Signature FunctionBody

    LEFTPARAN  shift, and go to state 23

    Signature   go to state 108
    Parameters  go to state 59


State 61

   10 ImportDecl: IMPORT LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 10 (ImportDecl)


State 62

    9 ImportDecl: IMPORT LEFTPARAN ImportSpecList . RIGHTPARAN
   12 ImportSpecList: ImportSpecList . ImportSpec SCOLON

    RIGHTPARAN          shift, and go to state 109
    DOT                 shift, and go to state 29
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    IDENTIFIER          shift, and go to state 4

    PackageName  go to state 32
    ImportSpec   go to state 110
    ImportPath   go to state 34
    String       go to state 35


State 63

   13 ImportSpecList: ImportSpec . SCOLON

    SCOLON  shift, and go to state 111


State 64

   15 ImportSpec: DOT ImportPath .

    $default  reduce using rule 15 (ImportSpec)


State 65

   14 ImportSpec: PackageName ImportPath .

    $default  reduce using rule 14 (ImportSpec)


State 66

   62 VarDecl: VAR LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 62 (VarDecl)


State 67

   61 VarDecl: VAR LEFTPARAN VarSpecList . RIGHTPARAN
   63 VarSpecList: VarSpecList . VarSpec SCOLON

    RIGHTPARAN  shift, and go to state 112
    IDENTIFIER  shift, and go to state 37

    VarSpec         go to state 113
    IdentifierList  go to state 39


State 68

   64 VarSpecList: VarSpec . SCOLON

    SCOLON  shift, and go to state 114


State 69

  199 StructType: STRUCT . LEFTBRACE FieldDeclList RIGHTBRACE
  200           | STRUCT . LEFTBRACE RIGHTBRACE

    LEFTBRACE  shift, and go to state 115


State 70

  198 MapType: MAP . LEFTSQUARE Type RIGHTSQUARE Type

    LEFTSQUARE  shift, and go to state 116


State 71

  205 PointerType: MUL . BaseType

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 117
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    BaseType        go to state 118
    ArrayType       go to state 85


State 72

   67 VarSpec: IdentifierList EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    ExpressionList  go to state 141
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 73

   98 LiteralType: LEFTSQUARE . ELIPSIS RIGHTSQUARE Operand
  110 SliceType: LEFTSQUARE . RIGHTSQUARE Type
  207 ArrayType: LEFTSQUARE . Expression RIGHTSQUARE Type

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ELIPSIS             shift, and go to state 146
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTSQUARE         shift, and go to state 147
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 148
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 74

   89 IdentifierList: IdentifierList COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 149


State 75

    6 PackageName: IDENTIFIER .
  105 OperandName: IDENTIFIER .

    DOT       reduce using rule 6 (PackageName)
    DOT       [reduce using rule 105 (OperandName)]
    $default  reduce using rule 105 (OperandName)


State 76

   91 QualifiedIdent: PackageName . DOT IDENTIFIER

    DOT  shift, and go to state 150


State 77

  106 OperandName: QualifiedIdent .

    $default  reduce using rule 106 (OperandName)


State 78

  100 Type: LiteralType .

    $default  reduce using rule 100 (Type)


State 79

   65 VarSpec: IdentifierList Type .
   66        | IdentifierList Type . EQ ExpressionList

    EQ  shift, and go to state 151

    $default  reduce using rule 65 (VarSpec)


State 80

  101 Type: OperandName .

    $default  reduce using rule 101 (Type)


State 81

   97 LiteralType: SliceType .

    $default  reduce using rule 97 (LiteralType)


State 82

   99 LiteralType: MapType .

    $default  reduce using rule 99 (LiteralType)


State 83

   94 LiteralType: StructType .

    $default  reduce using rule 94 (LiteralType)


State 84

   96 LiteralType: PointerType .

    $default  reduce using rule 96 (LiteralType)


State 85

   95 LiteralType: ArrayType .

    $default  reduce using rule 95 (LiteralType)


State 86

   70 ConstDecl: CONST LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 70 (ConstDecl)


State 87

   69 ConstDecl: CONST LEFTPARAN ConstSpecList . RIGHTPARAN
   71 ConstSpecList: ConstSpecList . ConstSpec SCOLON

    RIGHTPARAN  shift, and go to state 152
    IDENTIFIER  shift, and go to state 37

    ConstSpec       go to state 153
    IdentifierList  go to state 42


State 88

   72 ConstSpecList: ConstSpec . SCOLON

    SCOLON  shift, and go to state 154


State 89

   75 ConstSpec: IdentifierList EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    ExpressionList  go to state 155
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 90

   73 ConstSpec: IdentifierList Type .
   74          | IdentifierList Type . EQ ExpressionList

    EQ  shift, and go to state 156

    $default  reduce using rule 73 (ConstSpec)


State 91

  190 TypeDecl: TYPE LEFTPARAN TypeSpecList . RIGHTPARAN
  192 TypeSpecList: TypeSpecList . TypeSpec SCOLON

    RIGHTPARAN  shift, and go to state 157
    IDENTIFIER  shift, and go to state 44

    TypeSpec   go to state 158
    AliasDecl  go to state 46
    TypeDef    go to state 47


State 92

  193 TypeSpecList: TypeSpec . SCOLON

    SCOLON  shift, and go to state 159


State 93

  196 AliasDecl: IDENTIFIER EQ . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 160
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 94

  197 TypeDef: IDENTIFIER Type .

    $default  reduce using rule 197 (TypeDef)


State 95

    7 ImportDeclList: ImportDeclList ImportDecl SCOLON .

    $default  reduce using rule 7 (ImportDeclList)


State 96

   18 TopLevelDeclList: TopLevelDeclList TopLevelDecl SCOLON .

    $default  reduce using rule 18 (TopLevelDeclList)


State 97

   88 ParameterDecl: ELIPSIS Type .

    $default  reduce using rule 88 (ParameterDecl)


State 98

   82 Parameters: LEFTPARAN ParameterList RIGHTPARAN .

    $default  reduce using rule 82 (Parameters)


State 99

   83 Parameters: LEFTPARAN ParameterList COMMA . RIGHTPARAN
   85 ParameterList: ParameterList COMMA . ParameterDecl

    ELIPSIS     shift, and go to state 53
    RIGHTPARAN  shift, and go to state 161
    IDENTIFIER  shift, and go to state 37

    ParameterDecl   go to state 162
    IdentifierList  go to state 57


State 100

   87 ParameterDecl: IdentifierList ELIPSIS . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 163
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 101

   86 ParameterDecl: IdentifierList Type .

    $default  reduce using rule 86 (ParameterDecl)


State 102

   23 Block: LEFTBRACE . StatementList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    BREAK               shift, and go to state 164
    CONTINUE            shift, and go to state 165
    RETURN              shift, and go to state 166
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 167
    FOR                 shift, and go to state 168
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 169
    NEW                 shift, and go to state 123
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    GOTO                shift, and go to state 170
    FALLTHROUGH         shift, and go to state 171
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 172

    $default  reduce using rule 54 (EmptyStmt)

    PackageName      go to state 76
    Block            go to state 173
    StatementList    go to state 174
    Statement        go to state 175
    Declaration      go to state 176
    LabeledStmt      go to state 177
    Label            go to state 178
    SimpleStmt       go to state 179
    EmptyStmt        go to state 180
    ExpressionStmt   go to state 181
    IncDecStmt       go to state 182
    Assignment       go to state 183
    ShortVarDecl     go to state 184
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 185
    QualifiedIdent   go to state 77
    CompositeLit     go to state 133
    LiteralType      go to state 134
    Operand          go to state 135
    OperandName      go to state 136
    SliceType        go to state 81
    ReturnStmt       go to state 186
    BreakStmt        go to state 187
    ContinueStmt     go to state 188
    GotoStmt         go to state 189
    SwitchStmt       go to state 190
    ExprSwitchStmt   go to state 191
    FallthroughStmt  go to state 192
    IfStmt           go to state 193
    ForStmt          go to state 194
    Expression       go to state 195
    UnaryExpr        go to state 138
    PrimaryExpr      go to state 139
    MakeExpr         go to state 140
    ExpressionList   go to state 196
    TypeDecl         go to state 22
    MapType          go to state 82
    StructType       go to state 83
    PointerType      go to state 84
    ArrayType        go to state 85
    Literal          go to state 142
    BasicLit         go to state 143
    String           go to state 144
    Unary_OP         go to state 145


State 103

   76 FunctionBody: Block .

    $default  reduce using rule 76 (FunctionBody)


State 104

   42 FunctionDecl: FUNC FunctionName Signature FunctionBody .

    $default  reduce using rule 42 (FunctionDecl)


State 105

   78 Signature: Parameters Result .

    $default  reduce using rule 78 (Signature)


State 106

   79 Result: Parameters .

    $default  reduce using rule 79 (Result)


State 107

   80 Result: Type .

    $default  reduce using rule 80 (Result)


State 108

   45 MethodDecl: FUNC Receiver IDENTIFIER Signature .
   46           | FUNC Receiver IDENTIFIER Signature . FunctionBody

    LEFTBRACE  shift, and go to state 102

    $default  reduce using rule 45 (MethodDecl)

    Block         go to state 103
    FunctionBody  go to state 197


State 109

    9 ImportDecl: IMPORT LEFTPARAN ImportSpecList RIGHTPARAN .

    $default  reduce using rule 9 (ImportDecl)


State 110

   12 ImportSpecList: ImportSpecList ImportSpec . SCOLON

    SCOLON  shift, and go to state 198


State 111

   13 ImportSpecList: ImportSpec SCOLON .

    $default  reduce using rule 13 (ImportSpecList)


State 112

   61 VarDecl: VAR LEFTPARAN VarSpecList RIGHTPARAN .

    $default  reduce using rule 61 (VarDecl)


State 113

   63 VarSpecList: VarSpecList VarSpec . SCOLON

    SCOLON  shift, and go to state 199


State 114

   64 VarSpecList: VarSpec SCOLON .

    $default  reduce using rule 64 (VarSpecList)


State 115

  199 StructType: STRUCT LEFTBRACE . FieldDeclList RIGHTBRACE
  200           | STRUCT LEFTBRACE . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 200
    IDENTIFIER  shift, and go to state 37

    IdentifierList  go to state 201
    FieldDeclList   go to state 202
    FieldDecl       go to state 203


State 116

  198 MapType: MAP LEFTSQUARE . Type RIGHTSQUARE Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 204
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 117

  206 BaseType: Type .

    $default  reduce using rule 206 (BaseType)


State 118

  205 PointerType: MUL BaseType .

    $default  reduce using rule 205 (PointerType)


State 119

  210 BasicLit: INTEGER_VAL .

    $default  reduce using rule 210 (BasicLit)


State 120

  211 BasicLit: FLOAT_VAL .

    $default  reduce using rule 211 (BasicLit)


State 121

  214 BasicLit: TRUE .

    $default  reduce using rule 214 (BasicLit)


State 122

  215 BasicLit: FALSE .

    $default  reduce using rule 215 (BasicLit)


State 123

  184 MakeExpr: NEW . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN  shift, and go to state 205


State 124

  181 MakeExpr: MAKE . LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN
  182         | MAKE . LEFTPARAN Type COMMA Expression RIGHTPARAN
  183         | MAKE . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN  shift, and go to state 206


State 125

  238 Unary_OP: ADD .

    $default  reduce using rule 238 (Unary_OP)


State 126

  239 Unary_OP: SUB .

    $default  reduce using rule 239 (Unary_OP)


State 127

  240 Unary_OP: NOT .

    $default  reduce using rule 240 (Unary_OP)


State 128

  241 Unary_OP: XOR .

    $default  reduce using rule 241 (Unary_OP)


State 129

  205 PointerType: MUL . BaseType
  242 Unary_OP: MUL .

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    STRUCT      [reduce using rule 242 (Unary_OP)]
    MAP         [reduce using rule 242 (Unary_OP)]
    IDENTIFIER  [reduce using rule 242 (Unary_OP)]
    $default    reduce using rule 242 (Unary_OP)

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 117
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    BaseType        go to state 118
    ArrayType       go to state 85


State 130

  243 Unary_OP: AND .

    $default  reduce using rule 243 (Unary_OP)


State 131

  104 Operand: LEFTPARAN . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 207
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 132

  212 BasicLit: BYTE_VAL .

    $default  reduce using rule 212 (BasicLit)


State 133

  209 Literal: CompositeLit .

    $default  reduce using rule 209 (Literal)


State 134

   93 CompositeLit: LiteralType . LiteralValue

    LEFTBRACE  shift, and go to state 208

    LiteralValue  go to state 209


State 135

  162 PrimaryExpr: Operand .

    $default  reduce using rule 162 (PrimaryExpr)


State 136

  103 Operand: OperandName .
  168 PrimaryExpr: OperandName . StructLiteral

    LEFTBRACE  shift, and go to state 210

    LEFTBRACE  [reduce using rule 103 (Operand)]
    $default   reduce using rule 103 (Operand)

    StructLiteral  go to state 211


State 137

  159 Expression: Expression . Binary_OP Expression
  188 ExpressionList: Expression .
  189               | Expression . COMMA Expression

    ANDNOT  shift, and go to state 212
    ADD     shift, and go to state 213
    SUB     shift, and go to state 214
    XOR     shift, and go to state 215
    MUL     shift, and go to state 216
    AND     shift, and go to state 217
    OR      shift, and go to state 218
    LOGOR   shift, and go to state 219
    LOGAND  shift, and go to state 220
    ISEQ    shift, and go to state 221
    NEQ     shift, and go to state 222
    LESSEQ  shift, and go to state 223
    GRTEQ   shift, and go to state 224
    GRT     shift, and go to state 225
    LESS    shift, and go to state 226
    MOD     shift, and go to state 227
    QUOT    shift, and go to state 228
    SHL     shift, and go to state 229
    SHR     shift, and go to state 230
    COMMA   shift, and go to state 231

    $default  reduce using rule 188 (ExpressionList)

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 138

  158 Expression: UnaryExpr .

    $default  reduce using rule 158 (Expression)


State 139

  160 UnaryExpr: PrimaryExpr .
  164 PrimaryExpr: PrimaryExpr . Selector
  165            | PrimaryExpr . Index
  166            | PrimaryExpr . Slice
  167            | PrimaryExpr . Arguments
  169            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 236
    LEFTSQUARE  shift, and go to state 237
    DOT         shift, and go to state 238

    $default  reduce using rule 160 (UnaryExpr)

    Selector       go to state 239
    Index          go to state 240
    Slice          go to state 241
    TypeAssertion  go to state 242
    Arguments      go to state 243


State 140

  163 PrimaryExpr: MakeExpr .

    $default  reduce using rule 163 (PrimaryExpr)


State 141

   67 VarSpec: IdentifierList EQ ExpressionList .

    $default  reduce using rule 67 (VarSpec)


State 142

  102 Operand: Literal .

    $default  reduce using rule 102 (Operand)


State 143

  208 Literal: BasicLit .

    $default  reduce using rule 208 (Literal)


State 144

  213 BasicLit: String .

    $default  reduce using rule 213 (BasicLit)


State 145

  161 UnaryExpr: Unary_OP . PrimaryExpr

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    MUL                 shift, and go to state 71
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    PrimaryExpr     go to state 244
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144


State 146

   98 LiteralType: LEFTSQUARE ELIPSIS . RIGHTSQUARE Operand

    RIGHTSQUARE  shift, and go to state 245


State 147

  110 SliceType: LEFTSQUARE RIGHTSQUARE . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 246
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 148

  159 Expression: Expression . Binary_OP Expression
  207 ArrayType: LEFTSQUARE Expression . RIGHTSQUARE Type

    ANDNOT       shift, and go to state 212
    ADD          shift, and go to state 213
    SUB          shift, and go to state 214
    XOR          shift, and go to state 215
    MUL          shift, and go to state 216
    AND          shift, and go to state 217
    OR           shift, and go to state 218
    LOGOR        shift, and go to state 219
    LOGAND       shift, and go to state 220
    ISEQ         shift, and go to state 221
    NEQ          shift, and go to state 222
    LESSEQ       shift, and go to state 223
    GRTEQ        shift, and go to state 224
    GRT          shift, and go to state 225
    LESS         shift, and go to state 226
    MOD          shift, and go to state 227
    QUOT         shift, and go to state 228
    SHL          shift, and go to state 229
    SHR          shift, and go to state 230
    RIGHTSQUARE  shift, and go to state 247

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 149

   89 IdentifierList: IdentifierList COMMA IDENTIFIER .

    $default  reduce using rule 89 (IdentifierList)


State 150

   91 QualifiedIdent: PackageName DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 248


State 151

   66 VarSpec: IdentifierList Type EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    ExpressionList  go to state 249
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 152

   69 ConstDecl: CONST LEFTPARAN ConstSpecList RIGHTPARAN .

    $default  reduce using rule 69 (ConstDecl)


State 153

   71 ConstSpecList: ConstSpecList ConstSpec . SCOLON

    SCOLON  shift, and go to state 250


State 154

   72 ConstSpecList: ConstSpec SCOLON .

    $default  reduce using rule 72 (ConstSpecList)


State 155

   75 ConstSpec: IdentifierList EQ ExpressionList .

    $default  reduce using rule 75 (ConstSpec)


State 156

   74 ConstSpec: IdentifierList Type EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    ExpressionList  go to state 251
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 157

  190 TypeDecl: TYPE LEFTPARAN TypeSpecList RIGHTPARAN .

    $default  reduce using rule 190 (TypeDecl)


State 158

  192 TypeSpecList: TypeSpecList TypeSpec . SCOLON

    SCOLON  shift, and go to state 252


State 159

  193 TypeSpecList: TypeSpec SCOLON .

    $default  reduce using rule 193 (TypeSpecList)


State 160

  196 AliasDecl: IDENTIFIER EQ Type .

    $default  reduce using rule 196 (AliasDecl)


State 161

   83 Parameters: LEFTPARAN ParameterList COMMA RIGHTPARAN .

    $default  reduce using rule 83 (Parameters)


State 162

   85 ParameterList: ParameterList COMMA ParameterDecl .

    $default  reduce using rule 85 (ParameterList)


State 163

   87 ParameterDecl: IdentifierList ELIPSIS Type .

    $default  reduce using rule 87 (ParameterDecl)


State 164

  121 BreakStmt: BREAK .
  122          | BREAK . Label

    IDENTIFIER  shift, and go to state 253

    $default  reduce using rule 121 (BreakStmt)

    Label  go to state 254


State 165

  123 ContinueStmt: CONTINUE .
  124             | CONTINUE . Label

    IDENTIFIER  shift, and go to state 253

    $default  reduce using rule 123 (ContinueStmt)

    Label  go to state 255


State 166

  119 ReturnStmt: RETURN .
  120           | RETURN . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    $default  reduce using rule 119 (ReturnStmt)

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    ExpressionList  go to state 256
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 167

  141 IfStmt: IF . Expression Block
  142       | IF . SimpleStmt SCOLON Expression Block
  143       | IF . Expression Block ELSE IfStmt
  144       | IF . Expression Block ELSE Block
  145       | IF . SimpleStmt SCOLON Expression Block ELSE IfStmt
  146       | IF . SimpleStmt SCOLON Expression Block ELSE Block

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 257

    $default  reduce using rule 54 (EmptyStmt)

    PackageName     go to state 76
    SimpleStmt      go to state 258
    EmptyStmt       go to state 180
    ExpressionStmt  go to state 181
    IncDecStmt      go to state 182
    Assignment      go to state 183
    ShortVarDecl    go to state 184
    IdentifierList  go to state 185
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 259
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    ExpressionList  go to state 196
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 168

  147 ForStmt: FOR . Block
  148        | FOR . ForClause Block
  149        | FOR . Condition Block
  150        | FOR . RangeClause Block

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    RANGE               shift, and go to state 260
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 257

    $default  reduce using rule 54 (EmptyStmt)

    PackageName     go to state 76
    Block           go to state 261
    Condition       go to state 262
    SimpleStmt      go to state 263
    EmptyStmt       go to state 180
    ExpressionStmt  go to state 181
    IncDecStmt      go to state 182
    Assignment      go to state 183
    ShortVarDecl    go to state 184
    IdentifierList  go to state 264
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    ForClause       go to state 265
    InitStmt        go to state 266
    RangeClause     go to state 267
    Expression      go to state 268
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    ExpressionList  go to state 269
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 169

  127 ExprSwitchStmt: SWITCH . LEFTBRACE RIGHTBRACE
  128               | SWITCH . SimpleStmt SCOLON LEFTBRACE RIGHTBRACE
  129               | SWITCH . Expression LEFTBRACE RIGHTBRACE
  130               | SWITCH . SimpleStmt SCOLON Expression LEFTBRACE RIGHTBRACE
  131               | SWITCH . LEFTBRACE ExprCaseClauseList RIGHTBRACE
  132               | SWITCH . SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE
  133               | SWITCH . Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE
  134               | SWITCH . SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 270
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 257

    $default  reduce using rule 54 (EmptyStmt)

    PackageName     go to state 76
    SimpleStmt      go to state 271
    EmptyStmt       go to state 180
    ExpressionStmt  go to state 181
    IncDecStmt      go to state 182
    Assignment      go to state 183
    ShortVarDecl    go to state 184
    IdentifierList  go to state 185
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 272
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    ExpressionList  go to state 196
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 170

  125 GotoStmt: GOTO . Label

    IDENTIFIER  shift, and go to state 253

    Label  go to state 273


State 171

  140 FallthroughStmt: FALLTHROUGH .

    $default  reduce using rule 140 (FallthroughStmt)


State 172

    6 PackageName: IDENTIFIER .
   48 Label: IDENTIFIER .
   90 IdentifierList: IDENTIFIER .
  105 OperandName: IDENTIFIER .

    INFER_EQ  reduce using rule 90 (IdentifierList)
    COLON     reduce using rule 48 (Label)
    DOT       reduce using rule 6 (PackageName)
    DOT       [reduce using rule 105 (OperandName)]
    COMMA     reduce using rule 90 (IdentifierList)
    COMMA     [reduce using rule 105 (OperandName)]
    $default  reduce using rule 105 (OperandName)


State 173

   36 Statement: Block .

    $default  reduce using rule 36 (Statement)


State 174

   23 Block: LEFTBRACE StatementList . RIGHTBRACE
   25 StatementList: StatementList . Statement SCOLON

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    BREAK               shift, and go to state 164
    CONTINUE            shift, and go to state 165
    RETURN              shift, and go to state 166
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 167
    FOR                 shift, and go to state 168
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 169
    NEW                 shift, and go to state 123
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    GOTO                shift, and go to state 170
    FALLTHROUGH         shift, and go to state 171
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTBRACE          shift, and go to state 274
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 172

    $default  reduce using rule 54 (EmptyStmt)

    PackageName      go to state 76
    Block            go to state 173
    Statement        go to state 275
    Declaration      go to state 176
    LabeledStmt      go to state 177
    Label            go to state 178
    SimpleStmt       go to state 179
    EmptyStmt        go to state 180
    ExpressionStmt   go to state 181
    IncDecStmt       go to state 182
    Assignment       go to state 183
    ShortVarDecl     go to state 184
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 185
    QualifiedIdent   go to state 77
    CompositeLit     go to state 133
    LiteralType      go to state 134
    Operand          go to state 135
    OperandName      go to state 136
    SliceType        go to state 81
    ReturnStmt       go to state 186
    BreakStmt        go to state 187
    ContinueStmt     go to state 188
    GotoStmt         go to state 189
    SwitchStmt       go to state 190
    ExprSwitchStmt   go to state 191
    FallthroughStmt  go to state 192
    IfStmt           go to state 193
    ForStmt          go to state 194
    Expression       go to state 195
    UnaryExpr        go to state 138
    PrimaryExpr      go to state 139
    MakeExpr         go to state 140
    ExpressionList   go to state 196
    TypeDecl         go to state 22
    MapType          go to state 82
    StructType       go to state 83
    PointerType      go to state 84
    ArrayType        go to state 85
    Literal          go to state 142
    BasicLit         go to state 143
    String           go to state 144
    Unary_OP         go to state 145


State 175

   26 StatementList: Statement . SCOLON

    SCOLON  shift, and go to state 276


State 176

   27 Statement: Declaration .

    $default  reduce using rule 27 (Statement)


State 177

   28 Statement: LabeledStmt .

    $default  reduce using rule 28 (Statement)


State 178

   47 LabeledStmt: Label . COLON Statement

    COLON  shift, and go to state 277


State 179

   29 Statement: SimpleStmt .

    $default  reduce using rule 29 (Statement)


State 180

   49 SimpleStmt: EmptyStmt .

    $default  reduce using rule 49 (SimpleStmt)


State 181

   50 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 50 (SimpleStmt)


State 182

   51 SimpleStmt: IncDecStmt .

    $default  reduce using rule 51 (SimpleStmt)


State 183

   52 SimpleStmt: Assignment .

    $default  reduce using rule 52 (SimpleStmt)


State 184

   53 SimpleStmt: ShortVarDecl .

    $default  reduce using rule 53 (SimpleStmt)


State 185

   59 ShortVarDecl: IdentifierList . INFER_EQ ExpressionList
   89 IdentifierList: IdentifierList . COMMA IDENTIFIER

    INFER_EQ  shift, and go to state 278
    COMMA     shift, and go to state 74


State 186

   30 Statement: ReturnStmt .

    $default  reduce using rule 30 (Statement)


State 187

   31 Statement: BreakStmt .

    $default  reduce using rule 31 (Statement)


State 188

   32 Statement: ContinueStmt .

    $default  reduce using rule 32 (Statement)


State 189

   33 Statement: GotoStmt .

    $default  reduce using rule 33 (Statement)


State 190

   34 Statement: SwitchStmt .

    $default  reduce using rule 34 (Statement)


State 191

  126 SwitchStmt: ExprSwitchStmt .

    $default  reduce using rule 126 (SwitchStmt)


State 192

   35 Statement: FallthroughStmt .

    $default  reduce using rule 35 (Statement)


State 193

   37 Statement: IfStmt .

    $default  reduce using rule 37 (Statement)


State 194

   38 Statement: ForStmt .

    $default  reduce using rule 38 (Statement)


State 195

   55 ExpressionStmt: Expression .
   56 IncDecStmt: Expression . PLUSPLUS
   57           | Expression . MINUSMINUS
  159 Expression: Expression . Binary_OP Expression
  188 ExpressionList: Expression .
  189               | Expression . COMMA Expression

    PLUSPLUS    shift, and go to state 279
    MINUSMINUS  shift, and go to state 280
    ANDNOT      shift, and go to state 212
    ADD         shift, and go to state 213
    SUB         shift, and go to state 214
    XOR         shift, and go to state 215
    MUL         shift, and go to state 216
    AND         shift, and go to state 217
    OR          shift, and go to state 218
    LOGOR       shift, and go to state 219
    LOGAND      shift, and go to state 220
    ISEQ        shift, and go to state 221
    NEQ         shift, and go to state 222
    LESSEQ      shift, and go to state 223
    GRTEQ       shift, and go to state 224
    GRT         shift, and go to state 225
    LESS        shift, and go to state 226
    MOD         shift, and go to state 227
    QUOT        shift, and go to state 228
    SHL         shift, and go to state 229
    SHR         shift, and go to state 230
    COMMA       shift, and go to state 231

    ANDNOT    [reduce using rule 188 (ExpressionList)]
    ADD       [reduce using rule 188 (ExpressionList)]
    SUB       [reduce using rule 188 (ExpressionList)]
    XOR       [reduce using rule 188 (ExpressionList)]
    MUL       [reduce using rule 188 (ExpressionList)]
    AND       [reduce using rule 188 (ExpressionList)]
    OR        [reduce using rule 188 (ExpressionList)]
    MOD       [reduce using rule 188 (ExpressionList)]
    QUOT      [reduce using rule 188 (ExpressionList)]
    SHL       [reduce using rule 188 (ExpressionList)]
    SHR       [reduce using rule 188 (ExpressionList)]
    EQ        reduce using rule 188 (ExpressionList)
    $default  reduce using rule 55 (ExpressionStmt)

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 196

   58 Assignment: ExpressionList . Assign_OP ExpressionList

    ANDNOT  shift, and go to state 212
    ADD     shift, and go to state 213
    SUB     shift, and go to state 214
    XOR     shift, and go to state 215
    MUL     shift, and go to state 216
    AND     shift, and go to state 217
    OR      shift, and go to state 218
    MOD     shift, and go to state 227
    QUOT    shift, and go to state 228
    SHL     shift, and go to state 229
    SHR     shift, and go to state 230
    EQ      shift, and go to state 281

    Assign_OP  go to state 282
    Add_OP     go to state 283
    Mul_OP     go to state 284


State 197

   46 MethodDecl: FUNC Receiver IDENTIFIER Signature FunctionBody .

    $default  reduce using rule 46 (MethodDecl)


State 198

   12 ImportSpecList: ImportSpecList ImportSpec SCOLON .

    $default  reduce using rule 12 (ImportSpecList)


State 199

   63 VarSpecList: VarSpecList VarSpec SCOLON .

    $default  reduce using rule 63 (VarSpecList)


State 200

  200 StructType: STRUCT LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 200 (StructType)


State 201

   89 IdentifierList: IdentifierList . COMMA IDENTIFIER
  203 FieldDecl: IdentifierList . Type String
  204          | IdentifierList . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    COMMA       shift, and go to state 74
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 285
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 202

  199 StructType: STRUCT LEFTBRACE FieldDeclList . RIGHTBRACE
  202 FieldDeclList: FieldDeclList . FieldDecl SCOLON

    RIGHTBRACE  shift, and go to state 286
    IDENTIFIER  shift, and go to state 37

    IdentifierList  go to state 201
    FieldDecl       go to state 287


State 203

  201 FieldDeclList: FieldDecl . SCOLON

    SCOLON  shift, and go to state 288


State 204

  198 MapType: MAP LEFTSQUARE Type . RIGHTSQUARE Type

    RIGHTSQUARE  shift, and go to state 289


State 205

  184 MakeExpr: NEW LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 290
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 206

  181 MakeExpr: MAKE LEFTPARAN . Type COMMA Expression COMMA Expression RIGHTPARAN
  182         | MAKE LEFTPARAN . Type COMMA Expression RIGHTPARAN
  183         | MAKE LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 291
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 207

  104 Operand: LEFTPARAN Expression . RIGHTPARAN
  159 Expression: Expression . Binary_OP Expression

    ANDNOT      shift, and go to state 212
    ADD         shift, and go to state 213
    SUB         shift, and go to state 214
    XOR         shift, and go to state 215
    MUL         shift, and go to state 216
    AND         shift, and go to state 217
    OR          shift, and go to state 218
    LOGOR       shift, and go to state 219
    LOGAND      shift, and go to state 220
    ISEQ        shift, and go to state 221
    NEQ         shift, and go to state 222
    LESSEQ      shift, and go to state 223
    GRTEQ       shift, and go to state 224
    GRT         shift, and go to state 225
    LESS        shift, and go to state 226
    MOD         shift, and go to state 227
    QUOT        shift, and go to state 228
    SHL         shift, and go to state 229
    SHR         shift, and go to state 230
    RIGHTPARAN  shift, and go to state 292

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 208

  107 LiteralValue: LEFTBRACE . RIGHTBRACE
  108             | LEFTBRACE . ElementList RIGHTBRACE
  109             | LEFTBRACE . ElementList COMMA RIGHTBRACE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTBRACE          shift, and go to state 293
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 208
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    LiteralValue    go to state 294
    SliceType       go to state 81
    ElementList     go to state 295
    KeyedElement    go to state 296
    Key             go to state 297
    Element         go to state 298
    Expression      go to state 299
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 209

   93 CompositeLit: LiteralType LiteralValue .

    $default  reduce using rule 93 (CompositeLit)


State 210

  170 StructLiteral: LEFTBRACE . KeyValueList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 300
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    KeyValueList    go to state 301
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 211

  168 PrimaryExpr: OperandName StructLiteral .

    $default  reduce using rule 168 (PrimaryExpr)


State 212

  237 Mul_OP: ANDNOT .

    $default  reduce using rule 237 (Mul_OP)


State 213

  221 Add_OP: ADD .

    $default  reduce using rule 221 (Add_OP)


State 214

  222 Add_OP: SUB .

    $default  reduce using rule 222 (Add_OP)


State 215

  224 Add_OP: XOR .

    $default  reduce using rule 224 (Add_OP)


State 216

  231 Mul_OP: MUL .

    $default  reduce using rule 231 (Mul_OP)


State 217

  236 Mul_OP: AND .

    $default  reduce using rule 236 (Mul_OP)


State 218

  223 Add_OP: OR .

    $default  reduce using rule 223 (Add_OP)


State 219

  245 Binary_OP: LOGOR .

    $default  reduce using rule 245 (Binary_OP)


State 220

  244 Binary_OP: LOGAND .

    $default  reduce using rule 244 (Binary_OP)


State 221

  225 Rel_OP: ISEQ .

    $default  reduce using rule 225 (Rel_OP)


State 222

  226 Rel_OP: NEQ .

    $default  reduce using rule 226 (Rel_OP)


State 223

  227 Rel_OP: LESSEQ .

    $default  reduce using rule 227 (Rel_OP)


State 224

  228 Rel_OP: GRTEQ .

    $default  reduce using rule 228 (Rel_OP)


State 225

  229 Rel_OP: GRT .

    $default  reduce using rule 229 (Rel_OP)


State 226

  230 Rel_OP: LESS .

    $default  reduce using rule 230 (Rel_OP)


State 227

  233 Mul_OP: MOD .

    $default  reduce using rule 233 (Mul_OP)


State 228

  232 Mul_OP: QUOT .

    $default  reduce using rule 232 (Mul_OP)


State 229

  234 Mul_OP: SHL .

    $default  reduce using rule 234 (Mul_OP)


State 230

  235 Mul_OP: SHR .

    $default  reduce using rule 235 (Mul_OP)


State 231

  189 ExpressionList: Expression COMMA . Expression

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 302
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 232

  247 Binary_OP: Add_OP .

    $default  reduce using rule 247 (Binary_OP)


State 233

  246 Binary_OP: Rel_OP .

    $default  reduce using rule 246 (Binary_OP)


State 234

  248 Binary_OP: Mul_OP .

    $default  reduce using rule 248 (Binary_OP)


State 235

  159 Expression: Expression Binary_OP . Expression

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 303
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 236

  186 Arguments: LEFTPARAN . RIGHTPARAN
  187          | LEFTPARAN . ExpressionList ELIPSIS RIGHTPARAN

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTPARAN          shift, and go to state 304
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    ExpressionList  go to state 305
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 237

  174 Index: LEFTSQUARE . Expression RIGHTSQUARE
  175 Slice: LEFTSQUARE . COLON Expression RIGHTSQUARE
  176      | LEFTSQUARE . COLON RIGHTSQUARE
  177      | LEFTSQUARE . Expression COLON RIGHTSQUARE
  178      | LEFTSQUARE . Expression COLON Expression RIGHTSQUARE
  179      | LEFTSQUARE . COLON Expression COLON Expression RIGHTSQUARE
  180      | LEFTSQUARE . Expression COLON Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    COLON               shift, and go to state 306
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 307
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 238

  173 Selector: DOT . IDENTIFIER
  185 TypeAssertion: DOT . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN   shift, and go to state 308
    IDENTIFIER  shift, and go to state 309


State 239

  164 PrimaryExpr: PrimaryExpr Selector .

    $default  reduce using rule 164 (PrimaryExpr)


State 240

  165 PrimaryExpr: PrimaryExpr Index .

    $default  reduce using rule 165 (PrimaryExpr)


State 241

  166 PrimaryExpr: PrimaryExpr Slice .

    $default  reduce using rule 166 (PrimaryExpr)


State 242

  169 PrimaryExpr: PrimaryExpr TypeAssertion .

    $default  reduce using rule 169 (PrimaryExpr)


State 243

  167 PrimaryExpr: PrimaryExpr Arguments .

    $default  reduce using rule 167 (PrimaryExpr)


State 244

  161 UnaryExpr: Unary_OP PrimaryExpr .
  164 PrimaryExpr: PrimaryExpr . Selector
  165            | PrimaryExpr . Index
  166            | PrimaryExpr . Slice
  167            | PrimaryExpr . Arguments
  169            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 236
    LEFTSQUARE  shift, and go to state 237
    DOT         shift, and go to state 238

    $default  reduce using rule 161 (UnaryExpr)

    Selector       go to state 239
    Index          go to state 240
    Slice          go to state 241
    TypeAssertion  go to state 242
    Arguments      go to state 243


State 245

   98 LiteralType: LEFTSQUARE ELIPSIS RIGHTSQUARE . Operand

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    MAP                 shift, and go to state 70
    MUL                 shift, and go to state 71
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 310
    OperandName     go to state 311
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144


State 246

  110 SliceType: LEFTSQUARE RIGHTSQUARE Type .

    $default  reduce using rule 110 (SliceType)


State 247

  207 ArrayType: LEFTSQUARE Expression RIGHTSQUARE . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 312
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 248

   91 QualifiedIdent: PackageName DOT IDENTIFIER .

    $default  reduce using rule 91 (QualifiedIdent)


State 249

   66 VarSpec: IdentifierList Type EQ ExpressionList .

    $default  reduce using rule 66 (VarSpec)


State 250

   71 ConstSpecList: ConstSpecList ConstSpec SCOLON .

    $default  reduce using rule 71 (ConstSpecList)


State 251

   74 ConstSpec: IdentifierList Type EQ ExpressionList .

    $default  reduce using rule 74 (ConstSpec)


State 252

  192 TypeSpecList: TypeSpecList TypeSpec SCOLON .

    $default  reduce using rule 192 (TypeSpecList)


State 253

   48 Label: IDENTIFIER .

    $default  reduce using rule 48 (Label)


State 254

  122 BreakStmt: BREAK Label .

    $default  reduce using rule 122 (BreakStmt)


State 255

  124 ContinueStmt: CONTINUE Label .

    $default  reduce using rule 124 (ContinueStmt)


State 256

  120 ReturnStmt: RETURN ExpressionList .

    $default  reduce using rule 120 (ReturnStmt)


State 257

    6 PackageName: IDENTIFIER .
   90 IdentifierList: IDENTIFIER .
  105 OperandName: IDENTIFIER .

    INFER_EQ  reduce using rule 90 (IdentifierList)
    DOT       reduce using rule 6 (PackageName)
    DOT       [reduce using rule 105 (OperandName)]
    COMMA     reduce using rule 90 (IdentifierList)
    COMMA     [reduce using rule 105 (OperandName)]
    $default  reduce using rule 105 (OperandName)


State 258

  142 IfStmt: IF SimpleStmt . SCOLON Expression Block
  145       | IF SimpleStmt . SCOLON Expression Block ELSE IfStmt
  146       | IF SimpleStmt . SCOLON Expression Block ELSE Block

    SCOLON  shift, and go to state 313


State 259

   55 ExpressionStmt: Expression .
   56 IncDecStmt: Expression . PLUSPLUS
   57           | Expression . MINUSMINUS
  141 IfStmt: IF Expression . Block
  143       | IF Expression . Block ELSE IfStmt
  144       | IF Expression . Block ELSE Block
  159 Expression: Expression . Binary_OP Expression
  188 ExpressionList: Expression .
  189               | Expression . COMMA Expression

    PLUSPLUS    shift, and go to state 279
    MINUSMINUS  shift, and go to state 280
    ANDNOT      shift, and go to state 212
    ADD         shift, and go to state 213
    SUB         shift, and go to state 214
    XOR         shift, and go to state 215
    MUL         shift, and go to state 216
    AND         shift, and go to state 217
    OR          shift, and go to state 218
    LOGOR       shift, and go to state 219
    LOGAND      shift, and go to state 220
    ISEQ        shift, and go to state 221
    NEQ         shift, and go to state 222
    LESSEQ      shift, and go to state 223
    GRTEQ       shift, and go to state 224
    GRT         shift, and go to state 225
    LESS        shift, and go to state 226
    MOD         shift, and go to state 227
    QUOT        shift, and go to state 228
    SHL         shift, and go to state 229
    SHR         shift, and go to state 230
    LEFTBRACE   shift, and go to state 102
    COMMA       shift, and go to state 231

    ANDNOT    [reduce using rule 188 (ExpressionList)]
    ADD       [reduce using rule 188 (ExpressionList)]
    SUB       [reduce using rule 188 (ExpressionList)]
    XOR       [reduce using rule 188 (ExpressionList)]
    MUL       [reduce using rule 188 (ExpressionList)]
    AND       [reduce using rule 188 (ExpressionList)]
    OR        [reduce using rule 188 (ExpressionList)]
    MOD       [reduce using rule 188 (ExpressionList)]
    QUOT      [reduce using rule 188 (ExpressionList)]
    SHL       [reduce using rule 188 (ExpressionList)]
    SHR       [reduce using rule 188 (ExpressionList)]
    EQ        reduce using rule 188 (ExpressionList)
    $default  reduce using rule 55 (ExpressionStmt)

    Block      go to state 314
    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 260

  155 RangeClause: RANGE . Expression

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 315
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 261

  147 ForStmt: FOR Block .

    $default  reduce using rule 147 (ForStmt)


State 262

  149 ForStmt: FOR Condition . Block

    LEFTBRACE  shift, and go to state 102

    Block  go to state 316


State 263

  153 InitStmt: SimpleStmt .

    $default  reduce using rule 153 (InitStmt)


State 264

   59 ShortVarDecl: IdentifierList . INFER_EQ ExpressionList
   89 IdentifierList: IdentifierList . COMMA IDENTIFIER
  156 RangeClause: IdentifierList . INFER_EQ RANGE Expression

    INFER_EQ  shift, and go to state 317
    COMMA     shift, and go to state 74


State 265

  148 ForStmt: FOR ForClause . Block

    LEFTBRACE  shift, and go to state 102

    Block  go to state 318


State 266

  151 ForClause: InitStmt . SCOLON SCOLON PostStmt
  152          | InitStmt . SCOLON Condition SCOLON PostStmt

    SCOLON  shift, and go to state 319


State 267

  150 ForStmt: FOR RangeClause . Block

    LEFTBRACE  shift, and go to state 102

    Block  go to state 320


State 268

   24 Condition: Expression .
   55 ExpressionStmt: Expression .
   56 IncDecStmt: Expression . PLUSPLUS
   57           | Expression . MINUSMINUS
  159 Expression: Expression . Binary_OP Expression
  188 ExpressionList: Expression .
  189               | Expression . COMMA Expression

    PLUSPLUS    shift, and go to state 279
    MINUSMINUS  shift, and go to state 280
    ANDNOT      shift, and go to state 212
    ADD         shift, and go to state 213
    SUB         shift, and go to state 214
    XOR         shift, and go to state 215
    MUL         shift, and go to state 216
    AND         shift, and go to state 217
    OR          shift, and go to state 218
    LOGOR       shift, and go to state 219
    LOGAND      shift, and go to state 220
    ISEQ        shift, and go to state 221
    NEQ         shift, and go to state 222
    LESSEQ      shift, and go to state 223
    GRTEQ       shift, and go to state 224
    GRT         shift, and go to state 225
    LESS        shift, and go to state 226
    MOD         shift, and go to state 227
    QUOT        shift, and go to state 228
    SHL         shift, and go to state 229
    SHR         shift, and go to state 230
    COMMA       shift, and go to state 231

    SCOLON    reduce using rule 55 (ExpressionStmt)
    ANDNOT    [reduce using rule 188 (ExpressionList)]
    ADD       [reduce using rule 188 (ExpressionList)]
    SUB       [reduce using rule 188 (ExpressionList)]
    XOR       [reduce using rule 188 (ExpressionList)]
    MUL       [reduce using rule 188 (ExpressionList)]
    AND       [reduce using rule 188 (ExpressionList)]
    OR        [reduce using rule 188 (ExpressionList)]
    MOD       [reduce using rule 188 (ExpressionList)]
    QUOT      [reduce using rule 188 (ExpressionList)]
    SHL       [reduce using rule 188 (ExpressionList)]
    SHR       [reduce using rule 188 (ExpressionList)]
    EQ        reduce using rule 188 (ExpressionList)
    $default  reduce using rule 24 (Condition)

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 269

   58 Assignment: ExpressionList . Assign_OP ExpressionList
  157 RangeClause: ExpressionList . EQ RANGE Expression

    ANDNOT  shift, and go to state 212
    ADD     shift, and go to state 213
    SUB     shift, and go to state 214
    XOR     shift, and go to state 215
    MUL     shift, and go to state 216
    AND     shift, and go to state 217
    OR      shift, and go to state 218
    MOD     shift, and go to state 227
    QUOT    shift, and go to state 228
    SHL     shift, and go to state 229
    SHR     shift, and go to state 230
    EQ      shift, and go to state 321

    Assign_OP  go to state 282
    Add_OP     go to state 283
    Mul_OP     go to state 284


State 270

  127 ExprSwitchStmt: SWITCH LEFTBRACE . RIGHTBRACE
  131               | SWITCH LEFTBRACE . ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 322
    DEFAULT     shift, and go to state 323
    RIGHTBRACE  shift, and go to state 324

    ExprCaseClauseList  go to state 325
    ExprCaseClause      go to state 326
    ExprSwitchCase      go to state 327


State 271

  128 ExprSwitchStmt: SWITCH SimpleStmt . SCOLON LEFTBRACE RIGHTBRACE
  130               | SWITCH SimpleStmt . SCOLON Expression LEFTBRACE RIGHTBRACE
  132               | SWITCH SimpleStmt . SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE
  134               | SWITCH SimpleStmt . SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

    SCOLON  shift, and go to state 328


State 272

   55 ExpressionStmt: Expression .
   56 IncDecStmt: Expression . PLUSPLUS
   57           | Expression . MINUSMINUS
  129 ExprSwitchStmt: SWITCH Expression . LEFTBRACE RIGHTBRACE
  133               | SWITCH Expression . LEFTBRACE ExprCaseClauseList RIGHTBRACE
  159 Expression: Expression . Binary_OP Expression
  188 ExpressionList: Expression .
  189               | Expression . COMMA Expression

    PLUSPLUS    shift, and go to state 279
    MINUSMINUS  shift, and go to state 280
    ANDNOT      shift, and go to state 212
    ADD         shift, and go to state 213
    SUB         shift, and go to state 214
    XOR         shift, and go to state 215
    MUL         shift, and go to state 216
    AND         shift, and go to state 217
    OR          shift, and go to state 218
    LOGOR       shift, and go to state 219
    LOGAND      shift, and go to state 220
    ISEQ        shift, and go to state 221
    NEQ         shift, and go to state 222
    LESSEQ      shift, and go to state 223
    GRTEQ       shift, and go to state 224
    GRT         shift, and go to state 225
    LESS        shift, and go to state 226
    MOD         shift, and go to state 227
    QUOT        shift, and go to state 228
    SHL         shift, and go to state 229
    SHR         shift, and go to state 230
    LEFTBRACE   shift, and go to state 329
    COMMA       shift, and go to state 231

    ANDNOT    [reduce using rule 188 (ExpressionList)]
    ADD       [reduce using rule 188 (ExpressionList)]
    SUB       [reduce using rule 188 (ExpressionList)]
    XOR       [reduce using rule 188 (ExpressionList)]
    MUL       [reduce using rule 188 (ExpressionList)]
    AND       [reduce using rule 188 (ExpressionList)]
    OR        [reduce using rule 188 (ExpressionList)]
    MOD       [reduce using rule 188 (ExpressionList)]
    QUOT      [reduce using rule 188 (ExpressionList)]
    SHL       [reduce using rule 188 (ExpressionList)]
    SHR       [reduce using rule 188 (ExpressionList)]
    EQ        reduce using rule 188 (ExpressionList)
    $default  reduce using rule 55 (ExpressionStmt)

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 273

  125 GotoStmt: GOTO Label .

    $default  reduce using rule 125 (GotoStmt)


State 274

   23 Block: LEFTBRACE StatementList RIGHTBRACE .

    $default  reduce using rule 23 (Block)


State 275

   25 StatementList: StatementList Statement . SCOLON

    SCOLON  shift, and go to state 330


State 276

   26 StatementList: Statement SCOLON .

    $default  reduce using rule 26 (StatementList)


State 277

   47 LabeledStmt: Label COLON . Statement

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    BREAK               shift, and go to state 164
    CONTINUE            shift, and go to state 165
    RETURN              shift, and go to state 166
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 167
    FOR                 shift, and go to state 168
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 169
    NEW                 shift, and go to state 123
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    GOTO                shift, and go to state 170
    FALLTHROUGH         shift, and go to state 171
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 172

    $default  reduce using rule 54 (EmptyStmt)

    PackageName      go to state 76
    Block            go to state 173
    Statement        go to state 331
    Declaration      go to state 176
    LabeledStmt      go to state 177
    Label            go to state 178
    SimpleStmt       go to state 179
    EmptyStmt        go to state 180
    ExpressionStmt   go to state 181
    IncDecStmt       go to state 182
    Assignment       go to state 183
    ShortVarDecl     go to state 184
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 185
    QualifiedIdent   go to state 77
    CompositeLit     go to state 133
    LiteralType      go to state 134
    Operand          go to state 135
    OperandName      go to state 136
    SliceType        go to state 81
    ReturnStmt       go to state 186
    BreakStmt        go to state 187
    ContinueStmt     go to state 188
    GotoStmt         go to state 189
    SwitchStmt       go to state 190
    ExprSwitchStmt   go to state 191
    FallthroughStmt  go to state 192
    IfStmt           go to state 193
    ForStmt          go to state 194
    Expression       go to state 195
    UnaryExpr        go to state 138
    PrimaryExpr      go to state 139
    MakeExpr         go to state 140
    ExpressionList   go to state 196
    TypeDecl         go to state 22
    MapType          go to state 82
    StructType       go to state 83
    PointerType      go to state 84
    ArrayType        go to state 85
    Literal          go to state 142
    BasicLit         go to state 143
    String           go to state 144
    Unary_OP         go to state 145


State 278

   59 ShortVarDecl: IdentifierList INFER_EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    ExpressionList  go to state 332
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 279

   56 IncDecStmt: Expression PLUSPLUS .

    $default  reduce using rule 56 (IncDecStmt)


State 280

   57 IncDecStmt: Expression MINUSMINUS .

    $default  reduce using rule 57 (IncDecStmt)


State 281

  218 Assign_OP: EQ .

    $default  reduce using rule 218 (Assign_OP)


State 282

   58 Assignment: ExpressionList Assign_OP . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    ExpressionList  go to state 333
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 283

  219 Assign_OP: Add_OP . EQ

    EQ  shift, and go to state 334


State 284

  220 Assign_OP: Mul_OP . EQ

    EQ  shift, and go to state 335


State 285

  203 FieldDecl: IdentifierList Type . String
  204          | IdentifierList Type .

    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31

    $default  reduce using rule 204 (FieldDecl)

    String  go to state 336


State 286

  199 StructType: STRUCT LEFTBRACE FieldDeclList RIGHTBRACE .

    $default  reduce using rule 199 (StructType)


State 287

  202 FieldDeclList: FieldDeclList FieldDecl . SCOLON

    SCOLON  shift, and go to state 337


State 288

  201 FieldDeclList: FieldDecl SCOLON .

    $default  reduce using rule 201 (FieldDeclList)


State 289

  198 MapType: MAP LEFTSQUARE Type RIGHTSQUARE . Type

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 338
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 290

  184 MakeExpr: NEW LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 339


State 291

  181 MakeExpr: MAKE LEFTPARAN Type . COMMA Expression COMMA Expression RIGHTPARAN
  182         | MAKE LEFTPARAN Type . COMMA Expression RIGHTPARAN
  183         | MAKE LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 340
    COMMA       shift, and go to state 341


State 292

  104 Operand: LEFTPARAN Expression RIGHTPARAN .

    $default  reduce using rule 104 (Operand)


State 293

  107 LiteralValue: LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 107 (LiteralValue)


State 294

  116 Key: LiteralValue .
  118 Element: LiteralValue .

    COLON     reduce using rule 116 (Key)
    $default  reduce using rule 118 (Element)


State 295

  108 LiteralValue: LEFTBRACE ElementList . RIGHTBRACE
  109             | LEFTBRACE ElementList . COMMA RIGHTBRACE
  112 ElementList: ElementList . COMMA KeyedElement

    RIGHTBRACE  shift, and go to state 342
    COMMA       shift, and go to state 343


State 296

  111 ElementList: KeyedElement .

    $default  reduce using rule 111 (ElementList)


State 297

  114 KeyedElement: Key . COLON Element

    COLON  shift, and go to state 344


State 298

  113 KeyedElement: Element .

    $default  reduce using rule 113 (KeyedElement)


State 299

  115 Key: Expression .
  117 Element: Expression .
  159 Expression: Expression . Binary_OP Expression

    ANDNOT  shift, and go to state 212
    ADD     shift, and go to state 213
    SUB     shift, and go to state 214
    XOR     shift, and go to state 215
    MUL     shift, and go to state 216
    AND     shift, and go to state 217
    OR      shift, and go to state 218
    LOGOR   shift, and go to state 219
    LOGAND  shift, and go to state 220
    ISEQ    shift, and go to state 221
    NEQ     shift, and go to state 222
    LESSEQ  shift, and go to state 223
    GRTEQ   shift, and go to state 224
    GRT     shift, and go to state 225
    LESS    shift, and go to state 226
    MOD     shift, and go to state 227
    QUOT    shift, and go to state 228
    SHL     shift, and go to state 229
    SHR     shift, and go to state 230

    COLON     reduce using rule 115 (Key)
    $default  reduce using rule 117 (Element)

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 300

  159 Expression: Expression . Binary_OP Expression
  171 KeyValueList: Expression . COLON Expression
  172             | Expression . COLON Expression COMMA KeyValueList

    ANDNOT  shift, and go to state 212
    ADD     shift, and go to state 213
    SUB     shift, and go to state 214
    XOR     shift, and go to state 215
    MUL     shift, and go to state 216
    AND     shift, and go to state 217
    OR      shift, and go to state 218
    LOGOR   shift, and go to state 219
    LOGAND  shift, and go to state 220
    ISEQ    shift, and go to state 221
    NEQ     shift, and go to state 222
    LESSEQ  shift, and go to state 223
    GRTEQ   shift, and go to state 224
    GRT     shift, and go to state 225
    LESS    shift, and go to state 226
    MOD     shift, and go to state 227
    QUOT    shift, and go to state 228
    SHL     shift, and go to state 229
    SHR     shift, and go to state 230
    COLON   shift, and go to state 345

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 301

  170 StructLiteral: LEFTBRACE KeyValueList . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 346


State 302

  159 Expression: Expression . Binary_OP Expression
  189 ExpressionList: Expression COMMA Expression .

    ANDNOT  shift, and go to state 212
    ADD     shift, and go to state 213
    SUB     shift, and go to state 214
    XOR     shift, and go to state 215
    MUL     shift, and go to state 216
    AND     shift, and go to state 217
    OR      shift, and go to state 218
    LOGOR   shift, and go to state 219
    LOGAND  shift, and go to state 220
    ISEQ    shift, and go to state 221
    NEQ     shift, and go to state 222
    LESSEQ  shift, and go to state 223
    GRTEQ   shift, and go to state 224
    GRT     shift, and go to state 225
    LESS    shift, and go to state 226
    MOD     shift, and go to state 227
    QUOT    shift, and go to state 228
    SHL     shift, and go to state 229
    SHR     shift, and go to state 230

    $default  reduce using rule 189 (ExpressionList)

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 303

  159 Expression: Expression . Binary_OP Expression
  159           | Expression Binary_OP Expression .

    $default  reduce using rule 159 (Expression)

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 304

  186 Arguments: LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 186 (Arguments)


State 305

  187 Arguments: LEFTPARAN ExpressionList . ELIPSIS RIGHTPARAN

    ELIPSIS  shift, and go to state 347


State 306

  175 Slice: LEFTSQUARE COLON . Expression RIGHTSQUARE
  176      | LEFTSQUARE COLON . RIGHTSQUARE
  179      | LEFTSQUARE COLON . Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTSQUARE         shift, and go to state 348
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 349
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 307

  159 Expression: Expression . Binary_OP Expression
  174 Index: LEFTSQUARE Expression . RIGHTSQUARE
  177 Slice: LEFTSQUARE Expression . COLON RIGHTSQUARE
  178      | LEFTSQUARE Expression . COLON Expression RIGHTSQUARE
  180      | LEFTSQUARE Expression . COLON Expression COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 212
    ADD          shift, and go to state 213
    SUB          shift, and go to state 214
    XOR          shift, and go to state 215
    MUL          shift, and go to state 216
    AND          shift, and go to state 217
    OR           shift, and go to state 218
    LOGOR        shift, and go to state 219
    LOGAND       shift, and go to state 220
    ISEQ         shift, and go to state 221
    NEQ          shift, and go to state 222
    LESSEQ       shift, and go to state 223
    GRTEQ        shift, and go to state 224
    GRT          shift, and go to state 225
    LESS         shift, and go to state 226
    MOD          shift, and go to state 227
    QUOT         shift, and go to state 228
    SHL          shift, and go to state 229
    SHR          shift, and go to state 230
    RIGHTSQUARE  shift, and go to state 350
    COLON        shift, and go to state 351

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 308

  185 TypeAssertion: DOT LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 69
    MAP         shift, and go to state 70
    MUL         shift, and go to state 71
    LEFTSQUARE  shift, and go to state 73
    IDENTIFIER  shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    LiteralType     go to state 78
    Type            go to state 352
    OperandName     go to state 80
    SliceType       go to state 81
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85


State 309

  173 Selector: DOT IDENTIFIER .

    $default  reduce using rule 173 (Selector)


State 310

   98 LiteralType: LEFTSQUARE ELIPSIS RIGHTSQUARE Operand .

    $default  reduce using rule 98 (LiteralType)


State 311

  103 Operand: OperandName .

    $default  reduce using rule 103 (Operand)


State 312

  207 ArrayType: LEFTSQUARE Expression RIGHTSQUARE Type .

    $default  reduce using rule 207 (ArrayType)


State 313

  142 IfStmt: IF SimpleStmt SCOLON . Expression Block
  145       | IF SimpleStmt SCOLON . Expression Block ELSE IfStmt
  146       | IF SimpleStmt SCOLON . Expression Block ELSE Block

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 353
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 314

  141 IfStmt: IF Expression Block .
  143       | IF Expression Block . ELSE IfStmt
  144       | IF Expression Block . ELSE Block

    ELSE  shift, and go to state 354

    $default  reduce using rule 141 (IfStmt)


State 315

  155 RangeClause: RANGE Expression .
  159 Expression: Expression . Binary_OP Expression

    ANDNOT  shift, and go to state 212
    ADD     shift, and go to state 213
    SUB     shift, and go to state 214
    XOR     shift, and go to state 215
    MUL     shift, and go to state 216
    AND     shift, and go to state 217
    OR      shift, and go to state 218
    LOGOR   shift, and go to state 219
    LOGAND  shift, and go to state 220
    ISEQ    shift, and go to state 221
    NEQ     shift, and go to state 222
    LESSEQ  shift, and go to state 223
    GRTEQ   shift, and go to state 224
    GRT     shift, and go to state 225
    LESS    shift, and go to state 226
    MOD     shift, and go to state 227
    QUOT    shift, and go to state 228
    SHL     shift, and go to state 229
    SHR     shift, and go to state 230

    $default  reduce using rule 155 (RangeClause)

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 316

  149 ForStmt: FOR Condition Block .

    $default  reduce using rule 149 (ForStmt)


State 317

   59 ShortVarDecl: IdentifierList INFER_EQ . ExpressionList
  156 RangeClause: IdentifierList INFER_EQ . RANGE Expression

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    RANGE               shift, and go to state 355
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    ExpressionList  go to state 332
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 318

  148 ForStmt: FOR ForClause Block .

    $default  reduce using rule 148 (ForStmt)


State 319

  151 ForClause: InitStmt SCOLON . SCOLON PostStmt
  152          | InitStmt SCOLON . Condition SCOLON PostStmt

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    SCOLON              shift, and go to state 356
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    Condition       go to state 357
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 358
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 320

  150 ForStmt: FOR RangeClause Block .

    $default  reduce using rule 150 (ForStmt)


State 321

  157 RangeClause: ExpressionList EQ . RANGE Expression
  218 Assign_OP: EQ .

    RANGE  shift, and go to state 359

    $default  reduce using rule 218 (Assign_OP)


State 322

  138 ExprSwitchCase: CASE . ExpressionList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 137
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    ExpressionList  go to state 360
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 323

  139 ExprSwitchCase: DEFAULT .

    $default  reduce using rule 139 (ExprSwitchCase)


State 324

  127 ExprSwitchStmt: SWITCH LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 127 (ExprSwitchStmt)


State 325

  131 ExprSwitchStmt: SWITCH LEFTBRACE ExprCaseClauseList . RIGHTBRACE
  135 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 322
    DEFAULT     shift, and go to state 323
    RIGHTBRACE  shift, and go to state 361

    ExprCaseClause  go to state 362
    ExprSwitchCase  go to state 327


State 326

  136 ExprCaseClauseList: ExprCaseClause .

    $default  reduce using rule 136 (ExprCaseClauseList)


State 327

  137 ExprCaseClause: ExprSwitchCase . COLON StatementList

    COLON  shift, and go to state 363


State 328

  128 ExprSwitchStmt: SWITCH SimpleStmt SCOLON . LEFTBRACE RIGHTBRACE
  130               | SWITCH SimpleStmt SCOLON . Expression LEFTBRACE RIGHTBRACE
  132               | SWITCH SimpleStmt SCOLON . LEFTBRACE ExprCaseClauseList RIGHTBRACE
  134               | SWITCH SimpleStmt SCOLON . Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 364
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 365
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 329

  129 ExprSwitchStmt: SWITCH Expression LEFTBRACE . RIGHTBRACE
  133               | SWITCH Expression LEFTBRACE . ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 322
    DEFAULT     shift, and go to state 323
    RIGHTBRACE  shift, and go to state 366

    ExprCaseClauseList  go to state 367
    ExprCaseClause      go to state 326
    ExprSwitchCase      go to state 327


State 330

   25 StatementList: StatementList Statement SCOLON .

    $default  reduce using rule 25 (StatementList)


State 331

   47 LabeledStmt: Label COLON Statement .

    $default  reduce using rule 47 (LabeledStmt)


State 332

   59 ShortVarDecl: IdentifierList INFER_EQ ExpressionList .

    $default  reduce using rule 59 (ShortVarDecl)


State 333

   58 Assignment: ExpressionList Assign_OP ExpressionList .

    $default  reduce using rule 58 (Assignment)


State 334

  219 Assign_OP: Add_OP EQ .

    $default  reduce using rule 219 (Assign_OP)


State 335

  220 Assign_OP: Mul_OP EQ .

    $default  reduce using rule 220 (Assign_OP)


State 336

  203 FieldDecl: IdentifierList Type String .

    $default  reduce using rule 203 (FieldDecl)


State 337

  202 FieldDeclList: FieldDeclList FieldDecl SCOLON .

    $default  reduce using rule 202 (FieldDeclList)


State 338

  198 MapType: MAP LEFTSQUARE Type RIGHTSQUARE Type .

    $default  reduce using rule 198 (MapType)


State 339

  184 MakeExpr: NEW LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 184 (MakeExpr)


State 340

  183 MakeExpr: MAKE LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 183 (MakeExpr)


State 341

  181 MakeExpr: MAKE LEFTPARAN Type COMMA . Expression COMMA Expression RIGHTPARAN
  182         | MAKE LEFTPARAN Type COMMA . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 368
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 342

  108 LiteralValue: LEFTBRACE ElementList RIGHTBRACE .

    $default  reduce using rule 108 (LiteralValue)


State 343

  109 LiteralValue: LEFTBRACE ElementList COMMA . RIGHTBRACE
  112 ElementList: ElementList COMMA . KeyedElement

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTBRACE          shift, and go to state 369
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 208
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    LiteralValue    go to state 294
    SliceType       go to state 81
    KeyedElement    go to state 370
    Key             go to state 297
    Element         go to state 298
    Expression      go to state 299
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 344

  114 KeyedElement: Key COLON . Element

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 208
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    LiteralValue    go to state 371
    SliceType       go to state 81
    Element         go to state 372
    Expression      go to state 373
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 345

  171 KeyValueList: Expression COLON . Expression
  172             | Expression COLON . Expression COMMA KeyValueList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 374
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 346

  170 StructLiteral: LEFTBRACE KeyValueList RIGHTBRACE .

    $default  reduce using rule 170 (StructLiteral)


State 347

  187 Arguments: LEFTPARAN ExpressionList ELIPSIS . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 375


State 348

  176 Slice: LEFTSQUARE COLON RIGHTSQUARE .

    $default  reduce using rule 176 (Slice)


State 349

  159 Expression: Expression . Binary_OP Expression
  175 Slice: LEFTSQUARE COLON Expression . RIGHTSQUARE
  179      | LEFTSQUARE COLON Expression . COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 212
    ADD          shift, and go to state 213
    SUB          shift, and go to state 214
    XOR          shift, and go to state 215
    MUL          shift, and go to state 216
    AND          shift, and go to state 217
    OR           shift, and go to state 218
    LOGOR        shift, and go to state 219
    LOGAND       shift, and go to state 220
    ISEQ         shift, and go to state 221
    NEQ          shift, and go to state 222
    LESSEQ       shift, and go to state 223
    GRTEQ        shift, and go to state 224
    GRT          shift, and go to state 225
    LESS         shift, and go to state 226
    MOD          shift, and go to state 227
    QUOT         shift, and go to state 228
    SHL          shift, and go to state 229
    SHR          shift, and go to state 230
    RIGHTSQUARE  shift, and go to state 376
    COLON        shift, and go to state 377

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 350

  174 Index: LEFTSQUARE Expression RIGHTSQUARE .

    $default  reduce using rule 174 (Index)


State 351

  177 Slice: LEFTSQUARE Expression COLON . RIGHTSQUARE
  178      | LEFTSQUARE Expression COLON . Expression RIGHTSQUARE
  180      | LEFTSQUARE Expression COLON . Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    RIGHTSQUARE         shift, and go to state 378
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 379
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 352

  185 TypeAssertion: DOT LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 380


State 353

  142 IfStmt: IF SimpleStmt SCOLON Expression . Block
  145       | IF SimpleStmt SCOLON Expression . Block ELSE IfStmt
  146       | IF SimpleStmt SCOLON Expression . Block ELSE Block
  159 Expression: Expression . Binary_OP Expression

    ANDNOT     shift, and go to state 212
    ADD        shift, and go to state 213
    SUB        shift, and go to state 214
    XOR        shift, and go to state 215
    MUL        shift, and go to state 216
    AND        shift, and go to state 217
    OR         shift, and go to state 218
    LOGOR      shift, and go to state 219
    LOGAND     shift, and go to state 220
    ISEQ       shift, and go to state 221
    NEQ        shift, and go to state 222
    LESSEQ     shift, and go to state 223
    GRTEQ      shift, and go to state 224
    GRT        shift, and go to state 225
    LESS       shift, and go to state 226
    MOD        shift, and go to state 227
    QUOT       shift, and go to state 228
    SHL        shift, and go to state 229
    SHR        shift, and go to state 230
    LEFTBRACE  shift, and go to state 102

    Block      go to state 381
    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 354

  143 IfStmt: IF Expression Block ELSE . IfStmt
  144       | IF Expression Block ELSE . Block

    IF         shift, and go to state 167
    LEFTBRACE  shift, and go to state 102

    Block   go to state 382
    IfStmt  go to state 383


State 355

  156 RangeClause: IdentifierList INFER_EQ RANGE . Expression

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 384
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 356

  151 ForClause: InitStmt SCOLON SCOLON . PostStmt

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 257

    $default  reduce using rule 54 (EmptyStmt)

    PackageName     go to state 76
    SimpleStmt      go to state 385
    EmptyStmt       go to state 180
    ExpressionStmt  go to state 181
    IncDecStmt      go to state 182
    Assignment      go to state 183
    ShortVarDecl    go to state 184
    IdentifierList  go to state 185
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    PostStmt        go to state 386
    Expression      go to state 195
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    ExpressionList  go to state 196
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 357

  152 ForClause: InitStmt SCOLON Condition . SCOLON PostStmt

    SCOLON  shift, and go to state 387


State 358

   24 Condition: Expression .
  159 Expression: Expression . Binary_OP Expression

    ANDNOT  shift, and go to state 212
    ADD     shift, and go to state 213
    SUB     shift, and go to state 214
    XOR     shift, and go to state 215
    MUL     shift, and go to state 216
    AND     shift, and go to state 217
    OR      shift, and go to state 218
    LOGOR   shift, and go to state 219
    LOGAND  shift, and go to state 220
    ISEQ    shift, and go to state 221
    NEQ     shift, and go to state 222
    LESSEQ  shift, and go to state 223
    GRTEQ   shift, and go to state 224
    GRT     shift, and go to state 225
    LESS    shift, and go to state 226
    MOD     shift, and go to state 227
    QUOT    shift, and go to state 228
    SHL     shift, and go to state 229
    SHR     shift, and go to state 230

    $default  reduce using rule 24 (Condition)

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 359

  157 RangeClause: ExpressionList EQ RANGE . Expression

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 388
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 360

  138 ExprSwitchCase: CASE ExpressionList .

    $default  reduce using rule 138 (ExprSwitchCase)


State 361

  131 ExprSwitchStmt: SWITCH LEFTBRACE ExprCaseClauseList RIGHTBRACE .

    $default  reduce using rule 131 (ExprSwitchStmt)


State 362

  135 ExprCaseClauseList: ExprCaseClauseList ExprCaseClause .

    $default  reduce using rule 135 (ExprCaseClauseList)


State 363

  137 ExprCaseClause: ExprSwitchCase COLON . StatementList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    BREAK               shift, and go to state 164
    CONTINUE            shift, and go to state 165
    RETURN              shift, and go to state 166
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 167
    FOR                 shift, and go to state 168
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 169
    NEW                 shift, and go to state 123
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    GOTO                shift, and go to state 170
    FALLTHROUGH         shift, and go to state 171
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 172

    $default  reduce using rule 54 (EmptyStmt)

    PackageName      go to state 76
    Block            go to state 173
    StatementList    go to state 389
    Statement        go to state 175
    Declaration      go to state 176
    LabeledStmt      go to state 177
    Label            go to state 178
    SimpleStmt       go to state 179
    EmptyStmt        go to state 180
    ExpressionStmt   go to state 181
    IncDecStmt       go to state 182
    Assignment       go to state 183
    ShortVarDecl     go to state 184
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 185
    QualifiedIdent   go to state 77
    CompositeLit     go to state 133
    LiteralType      go to state 134
    Operand          go to state 135
    OperandName      go to state 136
    SliceType        go to state 81
    ReturnStmt       go to state 186
    BreakStmt        go to state 187
    ContinueStmt     go to state 188
    GotoStmt         go to state 189
    SwitchStmt       go to state 190
    ExprSwitchStmt   go to state 191
    FallthroughStmt  go to state 192
    IfStmt           go to state 193
    ForStmt          go to state 194
    Expression       go to state 195
    UnaryExpr        go to state 138
    PrimaryExpr      go to state 139
    MakeExpr         go to state 140
    ExpressionList   go to state 196
    TypeDecl         go to state 22
    MapType          go to state 82
    StructType       go to state 83
    PointerType      go to state 84
    ArrayType        go to state 85
    Literal          go to state 142
    BasicLit         go to state 143
    String           go to state 144
    Unary_OP         go to state 145


State 364

  128 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE . RIGHTBRACE
  132               | SWITCH SimpleStmt SCOLON LEFTBRACE . ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 322
    DEFAULT     shift, and go to state 323
    RIGHTBRACE  shift, and go to state 390

    ExprCaseClauseList  go to state 391
    ExprCaseClause      go to state 326
    ExprSwitchCase      go to state 327


State 365

  130 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression . LEFTBRACE RIGHTBRACE
  134               | SWITCH SimpleStmt SCOLON Expression . LEFTBRACE ExprCaseClauseList RIGHTBRACE
  159 Expression: Expression . Binary_OP Expression

    ANDNOT     shift, and go to state 212
    ADD        shift, and go to state 213
    SUB        shift, and go to state 214
    XOR        shift, and go to state 215
    MUL        shift, and go to state 216
    AND        shift, and go to state 217
    OR         shift, and go to state 218
    LOGOR      shift, and go to state 219
    LOGAND     shift, and go to state 220
    ISEQ       shift, and go to state 221
    NEQ        shift, and go to state 222
    LESSEQ     shift, and go to state 223
    GRTEQ      shift, and go to state 224
    GRT        shift, and go to state 225
    LESS       shift, and go to state 226
    MOD        shift, and go to state 227
    QUOT       shift, and go to state 228
    SHL        shift, and go to state 229
    SHR        shift, and go to state 230
    LEFTBRACE  shift, and go to state 392

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 366

  129 ExprSwitchStmt: SWITCH Expression LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 129 (ExprSwitchStmt)


State 367

  133 ExprSwitchStmt: SWITCH Expression LEFTBRACE ExprCaseClauseList . RIGHTBRACE
  135 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 322
    DEFAULT     shift, and go to state 323
    RIGHTBRACE  shift, and go to state 393

    ExprCaseClause  go to state 362
    ExprSwitchCase  go to state 327


State 368

  159 Expression: Expression . Binary_OP Expression
  181 MakeExpr: MAKE LEFTPARAN Type COMMA Expression . COMMA Expression RIGHTPARAN
  182         | MAKE LEFTPARAN Type COMMA Expression . RIGHTPARAN

    ANDNOT      shift, and go to state 212
    ADD         shift, and go to state 213
    SUB         shift, and go to state 214
    XOR         shift, and go to state 215
    MUL         shift, and go to state 216
    AND         shift, and go to state 217
    OR          shift, and go to state 218
    LOGOR       shift, and go to state 219
    LOGAND      shift, and go to state 220
    ISEQ        shift, and go to state 221
    NEQ         shift, and go to state 222
    LESSEQ      shift, and go to state 223
    GRTEQ       shift, and go to state 224
    GRT         shift, and go to state 225
    LESS        shift, and go to state 226
    MOD         shift, and go to state 227
    QUOT        shift, and go to state 228
    SHL         shift, and go to state 229
    SHR         shift, and go to state 230
    RIGHTPARAN  shift, and go to state 394
    COMMA       shift, and go to state 395

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 369

  109 LiteralValue: LEFTBRACE ElementList COMMA RIGHTBRACE .

    $default  reduce using rule 109 (LiteralValue)


State 370

  112 ElementList: ElementList COMMA KeyedElement .

    $default  reduce using rule 112 (ElementList)


State 371

  118 Element: LiteralValue .

    $default  reduce using rule 118 (Element)


State 372

  114 KeyedElement: Key COLON Element .

    $default  reduce using rule 114 (KeyedElement)


State 373

  117 Element: Expression .
  159 Expression: Expression . Binary_OP Expression

    ANDNOT  shift, and go to state 212
    ADD     shift, and go to state 213
    SUB     shift, and go to state 214
    XOR     shift, and go to state 215
    MUL     shift, and go to state 216
    AND     shift, and go to state 217
    OR      shift, and go to state 218
    LOGOR   shift, and go to state 219
    LOGAND  shift, and go to state 220
    ISEQ    shift, and go to state 221
    NEQ     shift, and go to state 222
    LESSEQ  shift, and go to state 223
    GRTEQ   shift, and go to state 224
    GRT     shift, and go to state 225
    LESS    shift, and go to state 226
    MOD     shift, and go to state 227
    QUOT    shift, and go to state 228
    SHL     shift, and go to state 229
    SHR     shift, and go to state 230

    $default  reduce using rule 117 (Element)

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 374

  159 Expression: Expression . Binary_OP Expression
  171 KeyValueList: Expression COLON Expression .
  172             | Expression COLON Expression . COMMA KeyValueList

    ANDNOT  shift, and go to state 212
    ADD     shift, and go to state 213
    SUB     shift, and go to state 214
    XOR     shift, and go to state 215
    MUL     shift, and go to state 216
    AND     shift, and go to state 217
    OR      shift, and go to state 218
    LOGOR   shift, and go to state 219
    LOGAND  shift, and go to state 220
    ISEQ    shift, and go to state 221
    NEQ     shift, and go to state 222
    LESSEQ  shift, and go to state 223
    GRTEQ   shift, and go to state 224
    GRT     shift, and go to state 225
    LESS    shift, and go to state 226
    MOD     shift, and go to state 227
    QUOT    shift, and go to state 228
    SHL     shift, and go to state 229
    SHR     shift, and go to state 230
    COMMA   shift, and go to state 396

    $default  reduce using rule 171 (KeyValueList)

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 375

  187 Arguments: LEFTPARAN ExpressionList ELIPSIS RIGHTPARAN .

    $default  reduce using rule 187 (Arguments)


State 376

  175 Slice: LEFTSQUARE COLON Expression RIGHTSQUARE .

    $default  reduce using rule 175 (Slice)


State 377

  179 Slice: LEFTSQUARE COLON Expression COLON . Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 397
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 378

  177 Slice: LEFTSQUARE Expression COLON RIGHTSQUARE .

    $default  reduce using rule 177 (Slice)


State 379

  159 Expression: Expression . Binary_OP Expression
  178 Slice: LEFTSQUARE Expression COLON Expression . RIGHTSQUARE
  180      | LEFTSQUARE Expression COLON Expression . COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 212
    ADD          shift, and go to state 213
    SUB          shift, and go to state 214
    XOR          shift, and go to state 215
    MUL          shift, and go to state 216
    AND          shift, and go to state 217
    OR           shift, and go to state 218
    LOGOR        shift, and go to state 219
    LOGAND       shift, and go to state 220
    ISEQ         shift, and go to state 221
    NEQ          shift, and go to state 222
    LESSEQ       shift, and go to state 223
    GRTEQ        shift, and go to state 224
    GRT          shift, and go to state 225
    LESS         shift, and go to state 226
    MOD          shift, and go to state 227
    QUOT         shift, and go to state 228
    SHL          shift, and go to state 229
    SHR          shift, and go to state 230
    RIGHTSQUARE  shift, and go to state 398
    COLON        shift, and go to state 399

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 380

  185 TypeAssertion: DOT LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 185 (TypeAssertion)


State 381

  142 IfStmt: IF SimpleStmt SCOLON Expression Block .
  145       | IF SimpleStmt SCOLON Expression Block . ELSE IfStmt
  146       | IF SimpleStmt SCOLON Expression Block . ELSE Block

    ELSE  shift, and go to state 400

    $default  reduce using rule 142 (IfStmt)


State 382

  144 IfStmt: IF Expression Block ELSE Block .

    $default  reduce using rule 144 (IfStmt)


State 383

  143 IfStmt: IF Expression Block ELSE IfStmt .

    $default  reduce using rule 143 (IfStmt)


State 384

  156 RangeClause: IdentifierList INFER_EQ RANGE Expression .
  159 Expression: Expression . Binary_OP Expression

    ANDNOT  shift, and go to state 212
    ADD     shift, and go to state 213
    SUB     shift, and go to state 214
    XOR     shift, and go to state 215
    MUL     shift, and go to state 216
    AND     shift, and go to state 217
    OR      shift, and go to state 218
    LOGOR   shift, and go to state 219
    LOGAND  shift, and go to state 220
    ISEQ    shift, and go to state 221
    NEQ     shift, and go to state 222
    LESSEQ  shift, and go to state 223
    GRTEQ   shift, and go to state 224
    GRT     shift, and go to state 225
    LESS    shift, and go to state 226
    MOD     shift, and go to state 227
    QUOT    shift, and go to state 228
    SHL     shift, and go to state 229
    SHR     shift, and go to state 230

    $default  reduce using rule 156 (RangeClause)

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 385

  154 PostStmt: SimpleStmt .

    $default  reduce using rule 154 (PostStmt)


State 386

  151 ForClause: InitStmt SCOLON SCOLON PostStmt .

    $default  reduce using rule 151 (ForClause)


State 387

  152 ForClause: InitStmt SCOLON Condition SCOLON . PostStmt

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 257

    $default  reduce using rule 54 (EmptyStmt)

    PackageName     go to state 76
    SimpleStmt      go to state 385
    EmptyStmt       go to state 180
    ExpressionStmt  go to state 181
    IncDecStmt      go to state 182
    Assignment      go to state 183
    ShortVarDecl    go to state 184
    IdentifierList  go to state 185
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    PostStmt        go to state 401
    Expression      go to state 195
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    ExpressionList  go to state 196
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 388

  157 RangeClause: ExpressionList EQ RANGE Expression .
  159 Expression: Expression . Binary_OP Expression

    ANDNOT  shift, and go to state 212
    ADD     shift, and go to state 213
    SUB     shift, and go to state 214
    XOR     shift, and go to state 215
    MUL     shift, and go to state 216
    AND     shift, and go to state 217
    OR      shift, and go to state 218
    LOGOR   shift, and go to state 219
    LOGAND  shift, and go to state 220
    ISEQ    shift, and go to state 221
    NEQ     shift, and go to state 222
    LESSEQ  shift, and go to state 223
    GRTEQ   shift, and go to state 224
    GRT     shift, and go to state 225
    LESS    shift, and go to state 226
    MOD     shift, and go to state 227
    QUOT    shift, and go to state 228
    SHL     shift, and go to state 229
    SHR     shift, and go to state 230

    $default  reduce using rule 157 (RangeClause)

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 389

   25 StatementList: StatementList . Statement SCOLON
  137 ExprCaseClause: ExprSwitchCase COLON StatementList .

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    BREAK               shift, and go to state 164
    CONTINUE            shift, and go to state 165
    RETURN              shift, and go to state 166
    STRUCT              shift, and go to state 69
    IF                  shift, and go to state 167
    FOR                 shift, and go to state 168
    VAR                 shift, and go to state 10
    SWITCH              shift, and go to state 169
    NEW                 shift, and go to state 123
    CONST               shift, and go to state 11
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    GOTO                shift, and go to state 170
    FALLTHROUGH         shift, and go to state 171
    TYPE                shift, and go to state 12
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTBRACE           shift, and go to state 102
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 172

    SCOLON    reduce using rule 54 (EmptyStmt)
    $default  reduce using rule 137 (ExprCaseClause)

    PackageName      go to state 76
    Block            go to state 173
    Statement        go to state 275
    Declaration      go to state 176
    LabeledStmt      go to state 177
    Label            go to state 178
    SimpleStmt       go to state 179
    EmptyStmt        go to state 180
    ExpressionStmt   go to state 181
    IncDecStmt       go to state 182
    Assignment       go to state 183
    ShortVarDecl     go to state 184
    VarDecl          go to state 20
    ConstDecl        go to state 21
    IdentifierList   go to state 185
    QualifiedIdent   go to state 77
    CompositeLit     go to state 133
    LiteralType      go to state 134
    Operand          go to state 135
    OperandName      go to state 136
    SliceType        go to state 81
    ReturnStmt       go to state 186
    BreakStmt        go to state 187
    ContinueStmt     go to state 188
    GotoStmt         go to state 189
    SwitchStmt       go to state 190
    ExprSwitchStmt   go to state 191
    FallthroughStmt  go to state 192
    IfStmt           go to state 193
    ForStmt          go to state 194
    Expression       go to state 195
    UnaryExpr        go to state 138
    PrimaryExpr      go to state 139
    MakeExpr         go to state 140
    ExpressionList   go to state 196
    TypeDecl         go to state 22
    MapType          go to state 82
    StructType       go to state 83
    PointerType      go to state 84
    ArrayType        go to state 85
    Literal          go to state 142
    BasicLit         go to state 143
    String           go to state 144
    Unary_OP         go to state 145


State 390

  128 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 128 (ExprSwitchStmt)


State 391

  132 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList . RIGHTBRACE
  135 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 322
    DEFAULT     shift, and go to state 323
    RIGHTBRACE  shift, and go to state 402

    ExprCaseClause  go to state 362
    ExprSwitchCase  go to state 327


State 392

  130 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE . RIGHTBRACE
  134               | SWITCH SimpleStmt SCOLON Expression LEFTBRACE . ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 322
    DEFAULT     shift, and go to state 323
    RIGHTBRACE  shift, and go to state 403

    ExprCaseClauseList  go to state 404
    ExprCaseClause      go to state 326
    ExprSwitchCase      go to state 327


State 393

  133 ExprSwitchStmt: SWITCH Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE .

    $default  reduce using rule 133 (ExprSwitchStmt)


State 394

  182 MakeExpr: MAKE LEFTPARAN Type COMMA Expression RIGHTPARAN .

    $default  reduce using rule 182 (MakeExpr)


State 395

  181 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 405
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 396

  172 KeyValueList: Expression COLON Expression COMMA . KeyValueList

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 300
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    KeyValueList    go to state 406
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 397

  159 Expression: Expression . Binary_OP Expression
  179 Slice: LEFTSQUARE COLON Expression COLON Expression . RIGHTSQUARE

    ANDNOT       shift, and go to state 212
    ADD          shift, and go to state 213
    SUB          shift, and go to state 214
    XOR          shift, and go to state 215
    MUL          shift, and go to state 216
    AND          shift, and go to state 217
    OR           shift, and go to state 218
    LOGOR        shift, and go to state 219
    LOGAND       shift, and go to state 220
    ISEQ         shift, and go to state 221
    NEQ          shift, and go to state 222
    LESSEQ       shift, and go to state 223
    GRTEQ        shift, and go to state 224
    GRT          shift, and go to state 225
    LESS         shift, and go to state 226
    MOD          shift, and go to state 227
    QUOT         shift, and go to state 228
    SHL          shift, and go to state 229
    SHR          shift, and go to state 230
    RIGHTSQUARE  shift, and go to state 407

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 398

  178 Slice: LEFTSQUARE Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 178 (Slice)


State 399

  180 Slice: LEFTSQUARE Expression COLON Expression COLON . Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 119
    FLOAT_VAL           shift, and go to state 120
    TRUE                shift, and go to state 121
    FALSE               shift, and go to state 122
    STRUCT              shift, and go to state 69
    NEW                 shift, and go to state 123
    MAP                 shift, and go to state 70
    MAKE                shift, and go to state 124
    ADD                 shift, and go to state 125
    SUB                 shift, and go to state 126
    NOT                 shift, and go to state 127
    XOR                 shift, and go to state 128
    MUL                 shift, and go to state 129
    AND                 shift, and go to state 130
    LEFTPARAN           shift, and go to state 131
    LEFTSQUARE          shift, and go to state 73
    RAW_STRING          shift, and go to state 30
    INTERPRETED_STRING  shift, and go to state 31
    BYTE_VAL            shift, and go to state 132
    IDENTIFIER          shift, and go to state 75

    PackageName     go to state 76
    QualifiedIdent  go to state 77
    CompositeLit    go to state 133
    LiteralType     go to state 134
    Operand         go to state 135
    OperandName     go to state 136
    SliceType       go to state 81
    Expression      go to state 408
    UnaryExpr       go to state 138
    PrimaryExpr     go to state 139
    MakeExpr        go to state 140
    MapType         go to state 82
    StructType      go to state 83
    PointerType     go to state 84
    ArrayType       go to state 85
    Literal         go to state 142
    BasicLit        go to state 143
    String          go to state 144
    Unary_OP        go to state 145


State 400

  145 IfStmt: IF SimpleStmt SCOLON Expression Block ELSE . IfStmt
  146       | IF SimpleStmt SCOLON Expression Block ELSE . Block

    IF         shift, and go to state 167
    LEFTBRACE  shift, and go to state 102

    Block   go to state 409
    IfStmt  go to state 410


State 401

  152 ForClause: InitStmt SCOLON Condition SCOLON PostStmt .

    $default  reduce using rule 152 (ForClause)


State 402

  132 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE .

    $default  reduce using rule 132 (ExprSwitchStmt)


State 403

  130 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 130 (ExprSwitchStmt)


State 404

  134 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList . RIGHTBRACE
  135 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 322
    DEFAULT     shift, and go to state 323
    RIGHTBRACE  shift, and go to state 411

    ExprCaseClause  go to state 362
    ExprSwitchCase  go to state 327


State 405

  159 Expression: Expression . Binary_OP Expression
  181 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression . RIGHTPARAN

    ANDNOT      shift, and go to state 212
    ADD         shift, and go to state 213
    SUB         shift, and go to state 214
    XOR         shift, and go to state 215
    MUL         shift, and go to state 216
    AND         shift, and go to state 217
    OR          shift, and go to state 218
    LOGOR       shift, and go to state 219
    LOGAND      shift, and go to state 220
    ISEQ        shift, and go to state 221
    NEQ         shift, and go to state 222
    LESSEQ      shift, and go to state 223
    GRTEQ       shift, and go to state 224
    GRT         shift, and go to state 225
    LESS        shift, and go to state 226
    MOD         shift, and go to state 227
    QUOT        shift, and go to state 228
    SHL         shift, and go to state 229
    SHR         shift, and go to state 230
    RIGHTPARAN  shift, and go to state 412

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 406

  172 KeyValueList: Expression COLON Expression COMMA KeyValueList .

    $default  reduce using rule 172 (KeyValueList)


State 407

  179 Slice: LEFTSQUARE COLON Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 179 (Slice)


State 408

  159 Expression: Expression . Binary_OP Expression
  180 Slice: LEFTSQUARE Expression COLON Expression COLON Expression . RIGHTSQUARE

    ANDNOT       shift, and go to state 212
    ADD          shift, and go to state 213
    SUB          shift, and go to state 214
    XOR          shift, and go to state 215
    MUL          shift, and go to state 216
    AND          shift, and go to state 217
    OR           shift, and go to state 218
    LOGOR        shift, and go to state 219
    LOGAND       shift, and go to state 220
    ISEQ         shift, and go to state 221
    NEQ          shift, and go to state 222
    LESSEQ       shift, and go to state 223
    GRTEQ        shift, and go to state 224
    GRT          shift, and go to state 225
    LESS         shift, and go to state 226
    MOD          shift, and go to state 227
    QUOT         shift, and go to state 228
    SHL          shift, and go to state 229
    SHR          shift, and go to state 230
    RIGHTSQUARE  shift, and go to state 413

    Add_OP     go to state 232
    Rel_OP     go to state 233
    Mul_OP     go to state 234
    Binary_OP  go to state 235


State 409

  146 IfStmt: IF SimpleStmt SCOLON Expression Block ELSE Block .

    $default  reduce using rule 146 (IfStmt)


State 410

  145 IfStmt: IF SimpleStmt SCOLON Expression Block ELSE IfStmt .

    $default  reduce using rule 145 (IfStmt)


State 411

  134 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE .

    $default  reduce using rule 134 (ExprSwitchStmt)


State 412

  181 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN .

    $default  reduce using rule 181 (MakeExpr)


State 413

  180 Slice: LEFTSQUARE Expression COLON Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 180 (Slice)
