digraph G {
node1[label="PackageClause"];
node2[label="PackageName"];
node3[label="main"];
node4[label="ImportDeclList"];
node5[label="ImportDecl"];
node6[label="ImportSpec"];
node7[label="ImportPath"];
node8[label="String"];
node9[label="\"fmt\""];
node10[label="TopLevelDeclList"];
node11[label="TopLevelDecl"];
node12[label="FunctionDecl"];
node13[label="main"];
node14[label="Signature"];
node15[label="Parameters"];
node16[label="FunctionBody"];
node17[label="Block"];
node18[label="StatementList"];
node19[label="StatementList"];
node20[label="StatementList"];
node21[label="Statement"];
node22[label="Declaration"];
node23[label="VarDecl"];
node24[label="VarSpec"];
node25[label="IdentifierList"];
node26[label="a"];
node27[label="Type"];
node28[label="LiteralType"];
node29[label="PointerType"];
node30[label="*"];
node31[label="BaseType"];
node32[label="Type"];
node33[label="OperandName"];
node34[label="int"];
node35[label="Statement"];
node36[label="Declaration"];
node37[label="VarDecl"];
node38[label="VarSpec"];
node39[label="IdentifierList"];
node40[label="b"];
node41[label="Type"];
node42[label="OperandName"];
node43[label="int"];
node44[label="ExpressionList"];
node45[label="Expression"];
node46[label="UnaryExpr"];
node47[label="PrimaryExpr"];
node48[label="Operand"];
node49[label="Literal"];
node50[label="BasicLit"];
node51[label="3"];
node52[label="Statement"];
node53[label="SimpleStmt"];
node54[label="Assignment"];
node55[label="ExpressionList"];
node56[label="Expression"];
node57[label="UnaryExpr"];
node58[label="*"];
node59[label="PrimaryExpr"];
node60[label="Operand"];
node61[label="OperandName"];
node62[label="a"];
node63[label="="];
node64[label="ExpressionList"];
node65[label="Expression"];
node66[label="UnaryExpr"];
node67[label="PrimaryExpr"];
node68[label="Operand"];
node69[label="OperandName"];
node70[label="b"];


"node0"->"node1";
"node1"->"node2";
"node2"->"node3";
"node0"->"node4";
"node4"->"node5";
"node5"->"node6";
"node6"->"node7";
"node7"->"node8";
"node8"->"node9";
"node0"->"node10";
"node10"->"node11";
"node11"->"node12";
"node12"->"node13";
"node12"->"node14";
"node14"->"node15";
"node12"->"node16";
"node16"->"node17";
"node17"->"node18";
"node18"->"node19";
"node19"->"node20";
"node20"->"node21";
"node21"->"node22";
"node22"->"node23";
"node23"->"node24";
"node24"->"node25";
"node25"->"node26";
"node24"->"node27";
"node27"->"node28";
"node28"->"node29";
"node29"->"node30";
"node29"->"node31";
"node31"->"node32";
"node32"->"node33";
"node33"->"node34";
"node19"->"node35";
"node35"->"node36";
"node36"->"node37";
"node37"->"node38";
"node38"->"node39";
"node39"->"node40";
"node38"->"node41";
"node41"->"node42";
"node42"->"node43";
"node38"->"node44";
"node44"->"node45";
"node45"->"node46";
"node46"->"node47";
"node47"->"node48";
"node48"->"node49";
"node49"->"node50";
"node50"->"node51";
"node18"->"node52";
"node52"->"node53";
"node53"->"node54";
"node54"->"node55";
"node55"->"node56";
"node56"->"node57";
"node57"->"node58";
"node57"->"node59";
"node59"->"node60";
"node60"->"node61";
"node61"->"node62";
"node54"->"node63";
"node54"->"node64";
"node64"->"node65";
"node65"->"node66";
"node66"->"node67";
"node67"->"node68";
"node68"->"node69";
"node69"->"node70";

}