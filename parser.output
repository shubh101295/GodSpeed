Terminals unused in grammar

    NULLPOINTER
    RANGE
    CONST
    EQ


State 110 conflicts: 1 shift/reduce
State 144 conflicts: 1 shift/reduce
State 145 conflicts: 1 shift/reduce, 1 reduce/reduce
State 243 conflicts: 1 reduce/reduce
State 317 conflicts: 1 reduce/reduce


Grammar

    0 $accept: SourceFile $end

    1 SourceFile: PackageClause SCOLON ImportDeclList TopLevelDeclList

    2 OpenBlock: %empty

    3 CloseBlock: %empty

    4 PackageClause: PACKAGE PackageName

    5 PackageName: IDENTIFIER

    6 ImportDeclList: ImportDeclList ImportDecl SCOLON
    7               | ImportDecl SCOLON

    8 ImportDecl: IMPORT LEFTPARAN ImportSpecList RIGHTPARAN
    9           | IMPORT LEFTPARAN RIGHTPARAN
   10           | IMPORT ImportSpec

   11 ImportSpecList: ImportSpecList ImportSpec SCOLON
   12               | ImportSpec SCOLON

   13 ImportSpec: PackageName ImportPath
   14           | DOT ImportPath
   15           | ImportPath

   16 ImportPath: String

   17 TopLevelDeclList: TopLevelDeclList TopLevelDecl SCOLON
   18                 | TopLevelDecl SCOLON

   19 TopLevelDecl: Declaration
   20             | FunctionDecl
   21             | MethodDecl

   22 Block: LEFTBRACE OpenBlock StatementList CloseBlock RIGHTBRACE

   23 Condition: Expression

   24 StatementList: StatementList Statement SCOLON
   25              | Statement SCOLON

   26 Statement: Declaration
   27          | LabeledStmt
   28          | SimpleStmt
   29          | ReturnStmt
   30          | BreakStmt
   31          | ContinueStmt
   32          | GotoStmt
   33          | SwitchStmt
   34          | FallthroughStmt
   35          | Block
   36          | IfStmt
   37          | ForStmt

   38 Declaration: TypeDecl
   39            | VarDecl

   40 $@1: %empty

   41 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature FunctionBody $@1 CloseBlock

   42 $@2: %empty

   43 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature $@2 CloseBlock

   44 MethodDecl: FUNC Receiver IDENTIFIER Signature
   45           | FUNC Receiver IDENTIFIER Signature FunctionBody

   46 LabeledStmt: IDENTIFIER COLON Statement

   47 SimpleStmt: EmptyStmt
   48           | ExpressionStmt
   49           | IncDecStmt
   50           | Assignment
   51           | ShortVarDecl

   52 EmptyStmt: %empty

   53 EmptyExpr: %empty

   54 ExpressionStmt: Expression

   55 IncDecStmt: Expression PLUSPLUS
   56           | Expression MINUSMINUS

   57 Assignment: ExpressionList ASSGN_OP ExpressionList

   58 ShortVarDecl: IdentifierList INFER_EQ ExpressionList

   59 VarDecl: VAR VarSpec
   60        | VAR LEFTPARAN VarSpecList RIGHTPARAN

   61 VarSpecList: VarSpecList VarSpec SCOLON
   62            | VarSpec SCOLON

   63 VarSpec: IdentifierList Type
   64        | IdentifierList Type ASSGN_OP ExpressionList
   65        | IdentifierList ASSGN_OP ExpressionList

   66 FunctionBody: Block

   67 Signature: Parameters
   68          | Parameters Result

   69 Result: LEFTPARAN TypeList RIGHTPARAN
   70       | Type

   71 TypeList: TypeList COMMA Type
   72         | Type

   73 Parameters: LEFTPARAN RIGHTPARAN
   74           | LEFTPARAN ParameterList RIGHTPARAN
   75           | LEFTPARAN ParameterList COMMA RIGHTPARAN

   76 ParameterList: ParameterDecl
   77              | ParameterList COMMA ParameterDecl

   78 ParameterDecl: IdentifierList Type

   79 IdentifierList: IdentifierList COMMA IDENTIFIER
   80               | IDENTIFIER

   81 Receiver: Parameters

   82 CompositeLit: LiteralType LiteralValue

   83 LiteralType: StructType
   84            | ArrayType
   85            | PointerType
   86            | SliceType
   87            | LEFTSQUARE ELIPSIS RIGHTSQUARE Operand
   88            | MapType

   89 Type: LiteralType
   90     | OperandName

   91 Operand: Literal
   92        | OperandName
   93        | LEFTPARAN Expression RIGHTPARAN

   94 OperandName: IDENTIFIER

   95 LiteralValue: LEFTBRACE RIGHTBRACE
   96             | LEFTBRACE ElementList RIGHTBRACE
   97             | LEFTBRACE ElementList COMMA RIGHTBRACE

   98 SliceType: LEFTSQUARE RIGHTSQUARE Type

   99 ElementList: KeyedElement
  100            | ElementList COMMA KeyedElement

  101 KeyedElement: Element
  102             | Key COLON Element

  103 Key: Expression
  104    | LiteralValue

  105 Element: Expression
  106        | LiteralValue

  107 ReturnStmt: RETURN
  108           | RETURN ExpressionList

  109 BreakStmt: BREAK
  110          | BREAK IDENTIFIER

  111 ContinueStmt: CONTINUE

  112 GotoStmt: GOTO IDENTIFIER

  113 SwitchStmt: ExprSwitchStmt

  114 $@3: %empty

  115 ExprSwitchStmt: SWITCH OpenBlock FakeTrue LEFTBRACE $@3 ExprCaseClauseList RIGHTBRACE CloseBlock

  116 $@4: %empty

  117 ExprSwitchStmt: SWITCH OpenBlock SimpleStmt SCOLON LEFTBRACE $@4 ExprCaseClauseList RIGHTBRACE CloseBlock

  118 $@5: %empty

  119 ExprSwitchStmt: SWITCH OpenBlock Expression LEFTBRACE $@5 ExprCaseClauseList RIGHTBRACE CloseBlock

  120 ExprCaseClauseList: ExprCaseClauseList ExprCaseClause
  121                   | ExprCaseClause

  122 ExprCaseClause: ExprSwitchCase COLON StatementList

  123 FakeTrue: %empty

  124 ExprSwitchCase: CASE ExpressionList
  125               | DEFAULT FakeTrue

  126 FallthroughStmt: FALLTHROUGH

  127 IfStmt: IF OpenBlock Expression Block CloseBlock
  128       | IF OpenBlock SimpleStmt SCOLON Expression Block CloseBlock
  129       | IF OpenBlock Expression Block ELSE IfStmt CloseBlock
  130       | IF OpenBlock Expression Block ELSE Block CloseBlock
  131       | IF OpenBlock SimpleStmt SCOLON Expression Block ELSE IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt SCOLON Expression Block ELSE Block CloseBlock

  133 ForStmt: FOR forMarker Block forMarkerEnd
  134        | FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  136        | FOR OpenBlock Condition forMarker Block forMarkerEnd CloseBlock

  137 forMarker: %empty

  138 forMarkerEnd: %empty

  139 Expression: Expression MUL Expression
  140           | Expression QUOT Expression
  141           | Expression MOD Expression
  142           | Expression SHL Expression
  143           | Expression SHR Expression
  144           | Expression AND Expression
  145           | Expression ANDNOT Expression
  146           | Expression ADD Expression
  147           | Expression SUB Expression
  148           | Expression OR Expression
  149           | Expression XOR Expression
  150           | Expression LOGAND Expression
  151           | Expression LOGOR Expression
  152           | Expression ISEQ Expression
  153           | Expression NEQ Expression
  154           | Expression GRTEQ Expression
  155           | Expression GRT Expression
  156           | Expression LESSEQ Expression
  157           | Expression LESS Expression
  158           | UnaryExpr

  159 UnaryExpr: MUL PrimaryExpr
  160          | AND PrimaryExpr
  161          | ADD PrimaryExpr
  162          | SUB PrimaryExpr
  163          | NOT PrimaryExpr
  164          | PrimaryExpr

  165 PrimaryExpr: Operand
  166            | MakeExpr
  167            | PrimaryExpr Selector
  168            | PrimaryExpr Index
  169            | PrimaryExpr Slice
  170            | PrimaryExpr Arguments
  171            | OperandName StructLiteral
  172            | PrimaryExpr TypeAssertion

  173 StructLiteral: LEFTBRACE KeyValueList RIGHTBRACE

  174 KeyValueList: Expression COLON Expression
  175             | Expression COLON Expression COMMA KeyValueList

  176 Selector: DOT IDENTIFIER

  177 Index: LEFTSQUARE Expression RIGHTSQUARE

  178 Slice: LEFTSQUARE COLON Expression RIGHTSQUARE
  179      | LEFTSQUARE COLON RIGHTSQUARE
  180      | LEFTSQUARE Expression COLON RIGHTSQUARE
  181      | LEFTSQUARE Expression COLON Expression RIGHTSQUARE
  182      | LEFTSQUARE COLON Expression COLON Expression RIGHTSQUARE
  183      | LEFTSQUARE Expression COLON Expression COLON Expression RIGHTSQUARE

  184 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN
  185         | MAKE LEFTPARAN Type COMMA Expression RIGHTPARAN
  186         | MAKE LEFTPARAN Type RIGHTPARAN
  187         | NEW LEFTPARAN Type RIGHTPARAN

  188 TypeAssertion: DOT LEFTPARAN Type RIGHTPARAN

  189 Arguments: LEFTPARAN RIGHTPARAN
  190          | LEFTPARAN ExpressionList RIGHTPARAN
  191          | LEFTPARAN ExpressionList ELIPSIS RIGHTPARAN

  192 ExpressionList: Expression
  193               | ExpressionList COMMA Expression

  194 TypeDecl: TYPE TypeSpec

  195 TypeSpec: TypeDef

  196 TypeDef: IDENTIFIER Type

  197 MapType: MAP LEFTSQUARE Type RIGHTSQUARE Type

  198 StructType: STRUCT LEFTBRACE FieldDeclList RIGHTBRACE
  199           | STRUCT LEFTBRACE RIGHTBRACE

  200 FieldDeclList: FieldDecl SCOLON
  201              | FieldDeclList FieldDecl SCOLON

  202 FieldDecl: IdentifierList Type String
  203          | IdentifierList Type

  204 PointerType: MUL BaseType

  205 BaseType: Type

  206 ArrayType: LEFTSQUARE Expression RIGHTSQUARE Type

  207 Literal: BasicLit
  208        | CompositeLit

  209 BasicLit: INTEGER_VAL
  210         | FLOAT_VAL
  211         | BYTE_VAL
  212         | String
  213         | TRUE
  214         | FALSE

  215 String: RAW_STRING
  216       | INTERPRETED_STRING


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER_VAL <sval> (258) 209
    FLOAT_VAL <sval> (259) 210
    TRUE <sval> (260) 213
    FALSE <sval> (261) 214
    NULLPOINTER <sval> (262)
    BREAK <sval> (263) 109 110
    CONTINUE <sval> (264) 111
    RETURN <sval> (265) 107 108
    SCOLON <sval> (266) 1 6 7 11 12 17 18 24 25 61 62 117 128 131 132 134 135 200 201
    FUNC <sval> (267) 41 43 44 45
    STRUCT <sval> (268) 198 199
    ELSE <sval> (269) 129 130 131 132
    PACKAGE <sval> (270) 4
    IF <sval> (271) 127 128 129 130 131 132
    FOR <sval> (272) 133 134 135 136
    RANGE <sval> (273)
    IMPORT <sval> (274) 8 9 10
    VAR <sval> (275) 59 60
    SWITCH <sval> (276) 115 117 119
    CASE <sval> (277) 124
    NEW <sval> (278) 187
    CONST <sval> (279)
    MAP <sval> (280) 197
    DEFAULT <sval> (281) 125
    MAKE <sval> (282) 184 185 186
    GOTO <sval> (283) 112
    FALLTHROUGH <sval> (284) 126
    TYPE <sval> (285) 194
    PLUSPLUS <sval> (286) 55
    MINUSMINUS <sval> (287) 56
    ANDNOT <sval> (288) 145
    ELIPSIS <sval> (289) 87 191
    ADD <sval> (290) 146 161
    SUB <sval> (291) 147 162
    NOT <sval> (292) 163
    XOR <sval> (293) 149
    MUL <sval> (294) 139 159 204
    AND <sval> (295) 144 160
    OR <sval> (296) 148
    LOGOR <sval> (297) 151
    LOGAND <sval> (298) 150
    ISEQ <sval> (299) 152
    NEQ <sval> (300) 153
    LESSEQ <sval> (301) 156
    GRTEQ <sval> (302) 154
    GRT <sval> (303) 155
    LESS <sval> (304) 157
    MOD <sval> (305) 141
    QUOT <sval> (306) 140
    SHL <sval> (307) 142
    SHR <sval> (308) 143
    EQ <sval> (309)
    INFER_EQ <sval> (310) 58
    RIGHTPARAN <sval> (311) 8 9 60 69 73 74 75 93 184 185 186 187 188 189 190 191
    RIGHTBRACE <sval> (312) 22 95 96 97 115 117 119 173 198 199
    RIGHTSQUARE <sval> (313) 87 98 177 178 179 180 181 182 183 197 206
    LEFTPARAN <sval> (314) 8 9 60 69 73 74 75 93 184 185 186 187 188 189 190 191
    LEFTBRACE <sval> (315) 22 95 96 97 115 117 119 173 198 199
    LEFTSQUARE <sval> (316) 87 98 177 178 179 180 181 182 183 197 206
    COLON <sval> (317) 46 102 122 174 175 178 179 180 181 182 183
    DOT <sval> (318) 14 176 188
    COMMA <sval> (319) 71 75 77 79 97 100 175 184 185 193
    RAW_STRING <sval> (320) 215
    INTERPRETED_STRING <sval> (321) 216
    BYTE_VAL <sval> (322) 211
    IDENTIFIER <sval> (323) 5 41 43 44 45 46 79 80 94 110 112 176 196
    ASSGN_OP <sval> (324) 57 64 65


Nonterminals, with rules where they appear

    $accept (70)
        on left: 0
    SourceFile <nt> (71)
        on left: 1
        on right: 0
    OpenBlock (72)
        on left: 2
        on right: 22 41 43 115 117 119 127 128 129 130 131 132 134 135 136
    CloseBlock (73)
        on left: 3
        on right: 22 41 43 115 117 119 127 128 129 130 131 132 134 135 136
    PackageClause <nt> (74)
        on left: 4
        on right: 1
    PackageName <nt> (75)
        on left: 5
        on right: 4 13
    ImportDeclList <nt> (76)
        on left: 6 7
        on right: 1 6
    ImportDecl <nt> (77)
        on left: 8 9 10
        on right: 6 7
    ImportSpecList <nt> (78)
        on left: 11 12
        on right: 8 11
    ImportSpec <nt> (79)
        on left: 13 14 15
        on right: 10 11 12
    ImportPath <nt> (80)
        on left: 16
        on right: 13 14 15
    TopLevelDeclList <nt> (81)
        on left: 17 18
        on right: 1 17
    TopLevelDecl <nt> (82)
        on left: 19 20 21
        on right: 17 18
    Block <nt> (83)
        on left: 22
        on right: 35 66 127 128 129 130 131 132 133 134 135 136
    Condition <nt> (84)
        on left: 23
        on right: 136
    StatementList <nt> (85)
        on left: 24 25
        on right: 22 24 122
    Statement <nt> (86)
        on left: 26 27 28 29 30 31 32 33 34 35 36 37
        on right: 24 25 46
    Declaration <nt> (87)
        on left: 38 39
        on right: 19 26
    FunctionDecl <nt> (88)
        on left: 41 43
        on right: 20
    $@1 (89)
        on left: 40
        on right: 41
    $@2 (90)
        on left: 42
        on right: 43
    MethodDecl <nt> (91)
        on left: 44 45
        on right: 21
    LabeledStmt <nt> (92)
        on left: 46
        on right: 27
    SimpleStmt <nt> (93)
        on left: 47 48 49 50 51
        on right: 28 117 128 131 132 134 135
    EmptyStmt <nt> (94)
        on left: 52
        on right: 47
    EmptyExpr <nt> (95)
        on left: 53
        on right: 134
    ExpressionStmt <nt> (96)
        on left: 54
        on right: 48 135
    IncDecStmt <nt> (97)
        on left: 55 56
        on right: 49
    Assignment <nt> (98)
        on left: 57
        on right: 50
    ShortVarDecl <nt> (99)
        on left: 58
        on right: 51
    VarDecl <nt> (100)
        on left: 59 60
        on right: 39
    VarSpecList <nt> (101)
        on left: 61 62
        on right: 60 61
    VarSpec <nt> (102)
        on left: 63 64 65
        on right: 59 61 62
    FunctionBody <nt> (103)
        on left: 66
        on right: 41 45
    Signature <nt> (104)
        on left: 67 68
        on right: 41 43 44 45
    Result <nt> (105)
        on left: 69 70
        on right: 68
    TypeList <nt> (106)
        on left: 71 72
        on right: 69 71
    Parameters <nt> (107)
        on left: 73 74 75
        on right: 67 68 81
    ParameterList <nt> (108)
        on left: 76 77
        on right: 74 75 77
    ParameterDecl <nt> (109)
        on left: 78
        on right: 76 77
    IdentifierList <nt> (110)
        on left: 79 80
        on right: 58 63 64 65 78 79 202 203
    Receiver <nt> (111)
        on left: 81
        on right: 44 45
    CompositeLit <nt> (112)
        on left: 82
        on right: 208
    LiteralType <nt> (113)
        on left: 83 84 85 86 87 88
        on right: 82 89
    Type <nt> (114)
        on left: 89 90
        on right: 63 64 70 71 72 78 98 184 185 186 187 188 196 197 202 203 205 206
    Operand <nt> (115)
        on left: 91 92 93
        on right: 87 165
    OperandName <nt> (116)
        on left: 94
        on right: 90 92 171
    LiteralValue <nt> (117)
        on left: 95 96 97
        on right: 82 104 106
    SliceType <nt> (118)
        on left: 98
        on right: 86
    ElementList <nt> (119)
        on left: 99 100
        on right: 96 97 100
    KeyedElement <nt> (120)
        on left: 101 102
        on right: 99 100
    Key <nt> (121)
        on left: 103 104
        on right: 102
    Element <nt> (122)
        on left: 105 106
        on right: 101 102
    ReturnStmt <nt> (123)
        on left: 107 108
        on right: 29
    BreakStmt <nt> (124)
        on left: 109 110
        on right: 30
    ContinueStmt <nt> (125)
        on left: 111
        on right: 31
    GotoStmt <nt> (126)
        on left: 112
        on right: 32
    SwitchStmt <nt> (127)
        on left: 113
        on right: 33
    ExprSwitchStmt <nt> (128)
        on left: 115 117 119
        on right: 113
    $@3 (129)
        on left: 114
        on right: 115
    $@4 (130)
        on left: 116
        on right: 117
    $@5 (131)
        on left: 118
        on right: 119
    ExprCaseClauseList <nt> (132)
        on left: 120 121
        on right: 115 117 119 120
    ExprCaseClause <nt> (133)
        on left: 122
        on right: 120 121
    FakeTrue <nt> (134)
        on left: 123
        on right: 115 125
    ExprSwitchCase <nt> (135)
        on left: 124 125
        on right: 122
    FallthroughStmt <nt> (136)
        on left: 126
        on right: 34
    IfStmt <nt> (137)
        on left: 127 128 129 130 131 132
        on right: 36 129 131
    ForStmt <nt> (138)
        on left: 133 134 135 136
        on right: 37
    forMarker <nt> (139)
        on left: 137
        on right: 133 134 135 136
    forMarkerEnd <nt> (140)
        on left: 138
        on right: 133 134 135 136
    Expression <nt> (141)
        on left: 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158
        on right: 23 54 55 56 93 103 105 119 127 128 129 130 131 132 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 174 175 177 178 180 181 182 183 184 185 192 193 206
    UnaryExpr <nt> (142)
        on left: 159 160 161 162 163 164
        on right: 158
    PrimaryExpr <nt> (143)
        on left: 165 166 167 168 169 170 171 172
        on right: 159 160 161 162 163 164 167 168 169 170 172
    StructLiteral <nt> (144)
        on left: 173
        on right: 171
    KeyValueList <nt> (145)
        on left: 174 175
        on right: 173 175
    Selector <nt> (146)
        on left: 176
        on right: 167
    Index <nt> (147)
        on left: 177
        on right: 168
    Slice <nt> (148)
        on left: 178 179 180 181 182 183
        on right: 169
    MakeExpr <nt> (149)
        on left: 184 185 186 187
        on right: 166
    TypeAssertion <nt> (150)
        on left: 188
        on right: 172
    Arguments <nt> (151)
        on left: 189 190 191
        on right: 170
    ExpressionList <nt> (152)
        on left: 192 193
        on right: 57 58 64 65 108 124 190 191 193
    TypeDecl <nt> (153)
        on left: 194
        on right: 38
    TypeSpec <nt> (154)
        on left: 195
        on right: 194
    TypeDef <nt> (155)
        on left: 196
        on right: 195
    MapType <nt> (156)
        on left: 197
        on right: 88
    StructType <nt> (157)
        on left: 198 199
        on right: 83
    FieldDeclList <nt> (158)
        on left: 200 201
        on right: 198 201
    FieldDecl <nt> (159)
        on left: 202 203
        on right: 200 201
    PointerType <nt> (160)
        on left: 204
        on right: 85
    BaseType <nt> (161)
        on left: 205
        on right: 204
    ArrayType <nt> (162)
        on left: 206
        on right: 84
    Literal <nt> (163)
        on left: 207 208
        on right: 91
    BasicLit <nt> (164)
        on left: 209 210 211 212 213 214
        on right: 207
    String <nt> (165)
        on left: 215 216
        on right: 16 202 212


State 0

    0 $accept: . SourceFile $end

    PACKAGE  shift, and go to state 1

    SourceFile     go to state 2
    PackageClause  go to state 3


State 1

    4 PackageClause: PACKAGE . PackageName

    IDENTIFIER  shift, and go to state 4

    PackageName  go to state 5


State 2

    0 $accept: SourceFile . $end

    $end  shift, and go to state 6


State 3

    1 SourceFile: PackageClause . SCOLON ImportDeclList TopLevelDeclList

    SCOLON  shift, and go to state 7


State 4

    5 PackageName: IDENTIFIER .

    $default  reduce using rule 5 (PackageName)


State 5

    4 PackageClause: PACKAGE PackageName .

    $default  reduce using rule 4 (PackageClause)


State 6

    0 $accept: SourceFile $end .

    $default  accept


State 7

    1 SourceFile: PackageClause SCOLON . ImportDeclList TopLevelDeclList

    IMPORT  shift, and go to state 8

    ImportDeclList  go to state 9
    ImportDecl      go to state 10


State 8

    8 ImportDecl: IMPORT . LEFTPARAN ImportSpecList RIGHTPARAN
    9           | IMPORT . LEFTPARAN RIGHTPARAN
   10           | IMPORT . ImportSpec

    LEFTPARAN           shift, and go to state 11
    DOT                 shift, and go to state 12
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    IDENTIFIER          shift, and go to state 4

    PackageName  go to state 15
    ImportSpec   go to state 16
    ImportPath   go to state 17
    String       go to state 18


State 9

    1 SourceFile: PackageClause SCOLON ImportDeclList . TopLevelDeclList
    6 ImportDeclList: ImportDeclList . ImportDecl SCOLON

    FUNC    shift, and go to state 19
    IMPORT  shift, and go to state 8
    VAR     shift, and go to state 20
    TYPE    shift, and go to state 21

    ImportDecl        go to state 22
    TopLevelDeclList  go to state 23
    TopLevelDecl      go to state 24
    Declaration       go to state 25
    FunctionDecl      go to state 26
    MethodDecl        go to state 27
    VarDecl           go to state 28
    TypeDecl          go to state 29


State 10

    7 ImportDeclList: ImportDecl . SCOLON

    SCOLON  shift, and go to state 30


State 11

    8 ImportDecl: IMPORT LEFTPARAN . ImportSpecList RIGHTPARAN
    9           | IMPORT LEFTPARAN . RIGHTPARAN

    RIGHTPARAN          shift, and go to state 31
    DOT                 shift, and go to state 12
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 15
    ImportSpecList  go to state 32
    ImportSpec      go to state 33
    ImportPath      go to state 17
    String          go to state 18


State 12

   14 ImportSpec: DOT . ImportPath

    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14

    ImportPath  go to state 34
    String      go to state 18


State 13

  215 String: RAW_STRING .

    $default  reduce using rule 215 (String)


State 14

  216 String: INTERPRETED_STRING .

    $default  reduce using rule 216 (String)


State 15

   13 ImportSpec: PackageName . ImportPath

    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14

    ImportPath  go to state 35
    String      go to state 18


State 16

   10 ImportDecl: IMPORT ImportSpec .

    $default  reduce using rule 10 (ImportDecl)


State 17

   15 ImportSpec: ImportPath .

    $default  reduce using rule 15 (ImportSpec)


State 18

   16 ImportPath: String .

    $default  reduce using rule 16 (ImportPath)


State 19

   41 FunctionDecl: FUNC . IDENTIFIER OpenBlock Signature FunctionBody $@1 CloseBlock
   43             | FUNC . IDENTIFIER OpenBlock Signature $@2 CloseBlock
   44 MethodDecl: FUNC . Receiver IDENTIFIER Signature
   45           | FUNC . Receiver IDENTIFIER Signature FunctionBody

    LEFTPARAN   shift, and go to state 36
    IDENTIFIER  shift, and go to state 37

    Parameters  go to state 38
    Receiver    go to state 39


State 20

   59 VarDecl: VAR . VarSpec
   60        | VAR . LEFTPARAN VarSpecList RIGHTPARAN

    LEFTPARAN   shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    VarSpec         go to state 42
    IdentifierList  go to state 43


State 21

  194 TypeDecl: TYPE . TypeSpec

    IDENTIFIER  shift, and go to state 44

    TypeSpec  go to state 45
    TypeDef   go to state 46


State 22

    6 ImportDeclList: ImportDeclList ImportDecl . SCOLON

    SCOLON  shift, and go to state 47


State 23

    1 SourceFile: PackageClause SCOLON ImportDeclList TopLevelDeclList .
   17 TopLevelDeclList: TopLevelDeclList . TopLevelDecl SCOLON

    FUNC  shift, and go to state 19
    VAR   shift, and go to state 20
    TYPE  shift, and go to state 21

    $default  reduce using rule 1 (SourceFile)

    TopLevelDecl  go to state 48
    Declaration   go to state 25
    FunctionDecl  go to state 26
    MethodDecl    go to state 27
    VarDecl       go to state 28
    TypeDecl      go to state 29


State 24

   18 TopLevelDeclList: TopLevelDecl . SCOLON

    SCOLON  shift, and go to state 49


State 25

   19 TopLevelDecl: Declaration .

    $default  reduce using rule 19 (TopLevelDecl)


State 26

   20 TopLevelDecl: FunctionDecl .

    $default  reduce using rule 20 (TopLevelDecl)


State 27

   21 TopLevelDecl: MethodDecl .

    $default  reduce using rule 21 (TopLevelDecl)


State 28

   39 Declaration: VarDecl .

    $default  reduce using rule 39 (Declaration)


State 29

   38 Declaration: TypeDecl .

    $default  reduce using rule 38 (Declaration)


State 30

    7 ImportDeclList: ImportDecl SCOLON .

    $default  reduce using rule 7 (ImportDeclList)


State 31

    9 ImportDecl: IMPORT LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 9 (ImportDecl)


State 32

    8 ImportDecl: IMPORT LEFTPARAN ImportSpecList . RIGHTPARAN
   11 ImportSpecList: ImportSpecList . ImportSpec SCOLON

    RIGHTPARAN          shift, and go to state 50
    DOT                 shift, and go to state 12
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    IDENTIFIER          shift, and go to state 4

    PackageName  go to state 15
    ImportSpec   go to state 51
    ImportPath   go to state 17
    String       go to state 18


State 33

   12 ImportSpecList: ImportSpec . SCOLON

    SCOLON  shift, and go to state 52


State 34

   14 ImportSpec: DOT ImportPath .

    $default  reduce using rule 14 (ImportSpec)


State 35

   13 ImportSpec: PackageName ImportPath .

    $default  reduce using rule 13 (ImportSpec)


State 36

   73 Parameters: LEFTPARAN . RIGHTPARAN
   74           | LEFTPARAN . ParameterList RIGHTPARAN
   75           | LEFTPARAN . ParameterList COMMA RIGHTPARAN

    RIGHTPARAN  shift, and go to state 53
    IDENTIFIER  shift, and go to state 41

    ParameterList   go to state 54
    ParameterDecl   go to state 55
    IdentifierList  go to state 56


State 37

   41 FunctionDecl: FUNC IDENTIFIER . OpenBlock Signature FunctionBody $@1 CloseBlock
   43             | FUNC IDENTIFIER . OpenBlock Signature $@2 CloseBlock

    $default  reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 57


State 38

   81 Receiver: Parameters .

    $default  reduce using rule 81 (Receiver)


State 39

   44 MethodDecl: FUNC Receiver . IDENTIFIER Signature
   45           | FUNC Receiver . IDENTIFIER Signature FunctionBody

    IDENTIFIER  shift, and go to state 58


State 40

   60 VarDecl: VAR LEFTPARAN . VarSpecList RIGHTPARAN

    IDENTIFIER  shift, and go to state 41

    VarSpecList     go to state 59
    VarSpec         go to state 60
    IdentifierList  go to state 43


State 41

   80 IdentifierList: IDENTIFIER .

    $default  reduce using rule 80 (IdentifierList)


State 42

   59 VarDecl: VAR VarSpec .

    $default  reduce using rule 59 (VarDecl)


State 43

   63 VarSpec: IdentifierList . Type
   64        | IdentifierList . Type ASSGN_OP ExpressionList
   65        | IdentifierList . ASSGN_OP ExpressionList
   79 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    COMMA       shift, and go to state 65
    IDENTIFIER  shift, and go to state 66
    ASSGN_OP    shift, and go to state 67

    LiteralType  go to state 68
    Type         go to state 69
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 44

  196 TypeDef: IDENTIFIER . Type

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 76
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 45

  194 TypeDecl: TYPE TypeSpec .

    $default  reduce using rule 194 (TypeDecl)


State 46

  195 TypeSpec: TypeDef .

    $default  reduce using rule 195 (TypeSpec)


State 47

    6 ImportDeclList: ImportDeclList ImportDecl SCOLON .

    $default  reduce using rule 6 (ImportDeclList)


State 48

   17 TopLevelDeclList: TopLevelDeclList TopLevelDecl . SCOLON

    SCOLON  shift, and go to state 77


State 49

   18 TopLevelDeclList: TopLevelDecl SCOLON .

    $default  reduce using rule 18 (TopLevelDeclList)


State 50

    8 ImportDecl: IMPORT LEFTPARAN ImportSpecList RIGHTPARAN .

    $default  reduce using rule 8 (ImportDecl)


State 51

   11 ImportSpecList: ImportSpecList ImportSpec . SCOLON

    SCOLON  shift, and go to state 78


State 52

   12 ImportSpecList: ImportSpec SCOLON .

    $default  reduce using rule 12 (ImportSpecList)


State 53

   73 Parameters: LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 73 (Parameters)


State 54

   74 Parameters: LEFTPARAN ParameterList . RIGHTPARAN
   75           | LEFTPARAN ParameterList . COMMA RIGHTPARAN
   77 ParameterList: ParameterList . COMMA ParameterDecl

    RIGHTPARAN  shift, and go to state 79
    COMMA       shift, and go to state 80


State 55

   76 ParameterList: ParameterDecl .

    $default  reduce using rule 76 (ParameterList)


State 56

   78 ParameterDecl: IdentifierList . Type
   79 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    COMMA       shift, and go to state 65
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 81
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 57

   41 FunctionDecl: FUNC IDENTIFIER OpenBlock . Signature FunctionBody $@1 CloseBlock
   43             | FUNC IDENTIFIER OpenBlock . Signature $@2 CloseBlock

    LEFTPARAN  shift, and go to state 36

    Signature   go to state 82
    Parameters  go to state 83


State 58

   44 MethodDecl: FUNC Receiver IDENTIFIER . Signature
   45           | FUNC Receiver IDENTIFIER . Signature FunctionBody

    LEFTPARAN  shift, and go to state 36

    Signature   go to state 84
    Parameters  go to state 83


State 59

   60 VarDecl: VAR LEFTPARAN VarSpecList . RIGHTPARAN
   61 VarSpecList: VarSpecList . VarSpec SCOLON

    RIGHTPARAN  shift, and go to state 85
    IDENTIFIER  shift, and go to state 41

    VarSpec         go to state 86
    IdentifierList  go to state 43


State 60

   62 VarSpecList: VarSpec . SCOLON

    SCOLON  shift, and go to state 87


State 61

  198 StructType: STRUCT . LEFTBRACE FieldDeclList RIGHTBRACE
  199           | STRUCT . LEFTBRACE RIGHTBRACE

    LEFTBRACE  shift, and go to state 88


State 62

  197 MapType: MAP . LEFTSQUARE Type RIGHTSQUARE Type

    LEFTSQUARE  shift, and go to state 89


State 63

  204 PointerType: MUL . BaseType

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 90
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    BaseType     go to state 91
    ArrayType    go to state 75


State 64

   87 LiteralType: LEFTSQUARE . ELIPSIS RIGHTSQUARE Operand
   98 SliceType: LEFTSQUARE . RIGHTSQUARE Type
  206 ArrayType: LEFTSQUARE . Expression RIGHTSQUARE Type

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ELIPSIS             shift, and go to state 98
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    RIGHTSQUARE         shift, and go to state 104
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 111
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 65

   79 IdentifierList: IdentifierList COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 118


State 66

   94 OperandName: IDENTIFIER .

    $default  reduce using rule 94 (OperandName)


State 67

   65 VarSpec: IdentifierList ASSGN_OP . ExpressionList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 119
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 120
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 68

   89 Type: LiteralType .

    $default  reduce using rule 89 (Type)


State 69

   63 VarSpec: IdentifierList Type .
   64        | IdentifierList Type . ASSGN_OP ExpressionList

    ASSGN_OP  shift, and go to state 121

    $default  reduce using rule 63 (VarSpec)


State 70

   90 Type: OperandName .

    $default  reduce using rule 90 (Type)


State 71

   86 LiteralType: SliceType .

    $default  reduce using rule 86 (LiteralType)


State 72

   88 LiteralType: MapType .

    $default  reduce using rule 88 (LiteralType)


State 73

   83 LiteralType: StructType .

    $default  reduce using rule 83 (LiteralType)


State 74

   85 LiteralType: PointerType .

    $default  reduce using rule 85 (LiteralType)


State 75

   84 LiteralType: ArrayType .

    $default  reduce using rule 84 (LiteralType)


State 76

  196 TypeDef: IDENTIFIER Type .

    $default  reduce using rule 196 (TypeDef)


State 77

   17 TopLevelDeclList: TopLevelDeclList TopLevelDecl SCOLON .

    $default  reduce using rule 17 (TopLevelDeclList)


State 78

   11 ImportSpecList: ImportSpecList ImportSpec SCOLON .

    $default  reduce using rule 11 (ImportSpecList)


State 79

   74 Parameters: LEFTPARAN ParameterList RIGHTPARAN .

    $default  reduce using rule 74 (Parameters)


State 80

   75 Parameters: LEFTPARAN ParameterList COMMA . RIGHTPARAN
   77 ParameterList: ParameterList COMMA . ParameterDecl

    RIGHTPARAN  shift, and go to state 122
    IDENTIFIER  shift, and go to state 41

    ParameterDecl   go to state 123
    IdentifierList  go to state 56


State 81

   78 ParameterDecl: IdentifierList Type .

    $default  reduce using rule 78 (ParameterDecl)


State 82

   41 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature . FunctionBody $@1 CloseBlock
   43             | FUNC IDENTIFIER OpenBlock Signature . $@2 CloseBlock

    LEFTBRACE  shift, and go to state 124

    $default  reduce using rule 42 ($@2)

    Block         go to state 125
    $@2           go to state 126
    FunctionBody  go to state 127


State 83

   67 Signature: Parameters .
   68          | Parameters . Result

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTPARAN   shift, and go to state 128
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    $default  reduce using rule 67 (Signature)

    Result       go to state 129
    LiteralType  go to state 68
    Type         go to state 130
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 84

   44 MethodDecl: FUNC Receiver IDENTIFIER Signature .
   45           | FUNC Receiver IDENTIFIER Signature . FunctionBody

    LEFTBRACE  shift, and go to state 124

    $default  reduce using rule 44 (MethodDecl)

    Block         go to state 125
    FunctionBody  go to state 131


State 85

   60 VarDecl: VAR LEFTPARAN VarSpecList RIGHTPARAN .

    $default  reduce using rule 60 (VarDecl)


State 86

   61 VarSpecList: VarSpecList VarSpec . SCOLON

    SCOLON  shift, and go to state 132


State 87

   62 VarSpecList: VarSpec SCOLON .

    $default  reduce using rule 62 (VarSpecList)


State 88

  198 StructType: STRUCT LEFTBRACE . FieldDeclList RIGHTBRACE
  199           | STRUCT LEFTBRACE . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 133
    IDENTIFIER  shift, and go to state 41

    IdentifierList  go to state 134
    FieldDeclList   go to state 135
    FieldDecl       go to state 136


State 89

  197 MapType: MAP LEFTSQUARE . Type RIGHTSQUARE Type

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 137
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 90

  205 BaseType: Type .

    $default  reduce using rule 205 (BaseType)


State 91

  204 PointerType: MUL BaseType .

    $default  reduce using rule 204 (PointerType)


State 92

  209 BasicLit: INTEGER_VAL .

    $default  reduce using rule 209 (BasicLit)


State 93

  210 BasicLit: FLOAT_VAL .

    $default  reduce using rule 210 (BasicLit)


State 94

  213 BasicLit: TRUE .

    $default  reduce using rule 213 (BasicLit)


State 95

  214 BasicLit: FALSE .

    $default  reduce using rule 214 (BasicLit)


State 96

  187 MakeExpr: NEW . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN  shift, and go to state 138


State 97

  184 MakeExpr: MAKE . LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN
  185         | MAKE . LEFTPARAN Type COMMA Expression RIGHTPARAN
  186         | MAKE . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN  shift, and go to state 139


State 98

   87 LiteralType: LEFTSQUARE ELIPSIS . RIGHTSQUARE Operand

    RIGHTSQUARE  shift, and go to state 140


State 99

  161 UnaryExpr: ADD . PrimaryExpr

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    MUL                 shift, and go to state 63
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    PrimaryExpr   go to state 141
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 100

  162 UnaryExpr: SUB . PrimaryExpr

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    MUL                 shift, and go to state 63
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    PrimaryExpr   go to state 142
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 101

  163 UnaryExpr: NOT . PrimaryExpr

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    MUL                 shift, and go to state 63
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    PrimaryExpr   go to state 143
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 102

  159 UnaryExpr: MUL . PrimaryExpr
  204 PointerType: MUL . BaseType

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    MUL                 shift, and go to state 63
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 144
    Type          go to state 90
    Operand       go to state 109
    OperandName   go to state 145
    SliceType     go to state 71
    PrimaryExpr   go to state 146
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    BaseType      go to state 91
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 103

  160 UnaryExpr: AND . PrimaryExpr

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    MUL                 shift, and go to state 63
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    PrimaryExpr   go to state 147
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 104

   98 SliceType: LEFTSQUARE RIGHTSQUARE . Type

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 148
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 105

   93 Operand: LEFTPARAN . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 149
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 106

  211 BasicLit: BYTE_VAL .

    $default  reduce using rule 211 (BasicLit)


State 107

  208 Literal: CompositeLit .

    $default  reduce using rule 208 (Literal)


State 108

   82 CompositeLit: LiteralType . LiteralValue

    LEFTBRACE  shift, and go to state 150

    LiteralValue  go to state 151


State 109

  165 PrimaryExpr: Operand .

    $default  reduce using rule 165 (PrimaryExpr)


State 110

   92 Operand: OperandName .
  171 PrimaryExpr: OperandName . StructLiteral

    LEFTBRACE  shift, and go to state 152

    LEFTBRACE  [reduce using rule 92 (Operand)]
    $default   reduce using rule 92 (Operand)

    StructLiteral  go to state 153


State 111

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression
  206 ArrayType: LEFTSQUARE Expression . RIGHTSQUARE Type

    ANDNOT       shift, and go to state 154
    ADD          shift, and go to state 155
    SUB          shift, and go to state 156
    XOR          shift, and go to state 157
    MUL          shift, and go to state 158
    AND          shift, and go to state 159
    OR           shift, and go to state 160
    LOGOR        shift, and go to state 161
    LOGAND       shift, and go to state 162
    ISEQ         shift, and go to state 163
    NEQ          shift, and go to state 164
    LESSEQ       shift, and go to state 165
    GRTEQ        shift, and go to state 166
    GRT          shift, and go to state 167
    LESS         shift, and go to state 168
    MOD          shift, and go to state 169
    QUOT         shift, and go to state 170
    SHL          shift, and go to state 171
    SHR          shift, and go to state 172
    RIGHTSQUARE  shift, and go to state 173


State 112

  158 Expression: UnaryExpr .

    $default  reduce using rule 158 (Expression)


State 113

  164 UnaryExpr: PrimaryExpr .
  167 PrimaryExpr: PrimaryExpr . Selector
  168            | PrimaryExpr . Index
  169            | PrimaryExpr . Slice
  170            | PrimaryExpr . Arguments
  172            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 174
    LEFTSQUARE  shift, and go to state 175
    DOT         shift, and go to state 176

    $default  reduce using rule 164 (UnaryExpr)

    Selector       go to state 177
    Index          go to state 178
    Slice          go to state 179
    TypeAssertion  go to state 180
    Arguments      go to state 181


State 114

  166 PrimaryExpr: MakeExpr .

    $default  reduce using rule 166 (PrimaryExpr)


State 115

   91 Operand: Literal .

    $default  reduce using rule 91 (Operand)


State 116

  207 Literal: BasicLit .

    $default  reduce using rule 207 (Literal)


State 117

  212 BasicLit: String .

    $default  reduce using rule 212 (BasicLit)


State 118

   79 IdentifierList: IdentifierList COMMA IDENTIFIER .

    $default  reduce using rule 79 (IdentifierList)


State 119

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression
  192 ExpressionList: Expression .

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    LOGOR   shift, and go to state 161
    LOGAND  shift, and go to state 162
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 192 (ExpressionList)


State 120

   65 VarSpec: IdentifierList ASSGN_OP ExpressionList .
  193 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 182

    $default  reduce using rule 65 (VarSpec)


State 121

   64 VarSpec: IdentifierList Type ASSGN_OP . ExpressionList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 119
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 183
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 122

   75 Parameters: LEFTPARAN ParameterList COMMA RIGHTPARAN .

    $default  reduce using rule 75 (Parameters)


State 123

   77 ParameterList: ParameterList COMMA ParameterDecl .

    $default  reduce using rule 77 (ParameterList)


State 124

   22 Block: LEFTBRACE . OpenBlock StatementList CloseBlock RIGHTBRACE

    $default  reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 184


State 125

   66 FunctionBody: Block .

    $default  reduce using rule 66 (FunctionBody)


State 126

   43 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature $@2 . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 185


State 127

   41 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature FunctionBody . $@1 CloseBlock

    $default  reduce using rule 40 ($@1)

    $@1  go to state 186


State 128

   69 Result: LEFTPARAN . TypeList RIGHTPARAN

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    TypeList     go to state 187
    LiteralType  go to state 68
    Type         go to state 188
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 129

   68 Signature: Parameters Result .

    $default  reduce using rule 68 (Signature)


State 130

   70 Result: Type .

    $default  reduce using rule 70 (Result)


State 131

   45 MethodDecl: FUNC Receiver IDENTIFIER Signature FunctionBody .

    $default  reduce using rule 45 (MethodDecl)


State 132

   61 VarSpecList: VarSpecList VarSpec SCOLON .

    $default  reduce using rule 61 (VarSpecList)


State 133

  199 StructType: STRUCT LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 199 (StructType)


State 134

   79 IdentifierList: IdentifierList . COMMA IDENTIFIER
  202 FieldDecl: IdentifierList . Type String
  203          | IdentifierList . Type

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    COMMA       shift, and go to state 65
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 189
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 135

  198 StructType: STRUCT LEFTBRACE FieldDeclList . RIGHTBRACE
  201 FieldDeclList: FieldDeclList . FieldDecl SCOLON

    RIGHTBRACE  shift, and go to state 190
    IDENTIFIER  shift, and go to state 41

    IdentifierList  go to state 134
    FieldDecl       go to state 191


State 136

  200 FieldDeclList: FieldDecl . SCOLON

    SCOLON  shift, and go to state 192


State 137

  197 MapType: MAP LEFTSQUARE Type . RIGHTSQUARE Type

    RIGHTSQUARE  shift, and go to state 193


State 138

  187 MakeExpr: NEW LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 194
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 139

  184 MakeExpr: MAKE LEFTPARAN . Type COMMA Expression COMMA Expression RIGHTPARAN
  185         | MAKE LEFTPARAN . Type COMMA Expression RIGHTPARAN
  186         | MAKE LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 195
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 140

   87 LiteralType: LEFTSQUARE ELIPSIS RIGHTSQUARE . Operand

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    MAP                 shift, and go to state 62
    MUL                 shift, and go to state 63
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 196
    OperandName   go to state 197
    SliceType     go to state 71
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 141

  161 UnaryExpr: ADD PrimaryExpr .
  167 PrimaryExpr: PrimaryExpr . Selector
  168            | PrimaryExpr . Index
  169            | PrimaryExpr . Slice
  170            | PrimaryExpr . Arguments
  172            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 174
    LEFTSQUARE  shift, and go to state 175
    DOT         shift, and go to state 176

    $default  reduce using rule 161 (UnaryExpr)

    Selector       go to state 177
    Index          go to state 178
    Slice          go to state 179
    TypeAssertion  go to state 180
    Arguments      go to state 181


State 142

  162 UnaryExpr: SUB PrimaryExpr .
  167 PrimaryExpr: PrimaryExpr . Selector
  168            | PrimaryExpr . Index
  169            | PrimaryExpr . Slice
  170            | PrimaryExpr . Arguments
  172            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 174
    LEFTSQUARE  shift, and go to state 175
    DOT         shift, and go to state 176

    $default  reduce using rule 162 (UnaryExpr)

    Selector       go to state 177
    Index          go to state 178
    Slice          go to state 179
    TypeAssertion  go to state 180
    Arguments      go to state 181


State 143

  163 UnaryExpr: NOT PrimaryExpr .
  167 PrimaryExpr: PrimaryExpr . Selector
  168            | PrimaryExpr . Index
  169            | PrimaryExpr . Slice
  170            | PrimaryExpr . Arguments
  172            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 174
    LEFTSQUARE  shift, and go to state 175
    DOT         shift, and go to state 176

    $default  reduce using rule 163 (UnaryExpr)

    Selector       go to state 177
    Index          go to state 178
    Slice          go to state 179
    TypeAssertion  go to state 180
    Arguments      go to state 181


State 144

   82 CompositeLit: LiteralType . LiteralValue
   89 Type: LiteralType .

    LEFTBRACE  shift, and go to state 150

    LEFTBRACE  [reduce using rule 89 (Type)]

    LiteralValue  go to state 151


State 145

   90 Type: OperandName .
   92 Operand: OperandName .
  171 PrimaryExpr: OperandName . StructLiteral

    LEFTBRACE  shift, and go to state 152

    LEFTBRACE  [reduce using rule 90 (Type)]
    LEFTBRACE  [reduce using rule 92 (Operand)]
    $default   reduce using rule 92 (Operand)

    StructLiteral  go to state 153


State 146

  159 UnaryExpr: MUL PrimaryExpr .
  167 PrimaryExpr: PrimaryExpr . Selector
  168            | PrimaryExpr . Index
  169            | PrimaryExpr . Slice
  170            | PrimaryExpr . Arguments
  172            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 174
    LEFTSQUARE  shift, and go to state 175
    DOT         shift, and go to state 176

    $default  reduce using rule 159 (UnaryExpr)

    Selector       go to state 177
    Index          go to state 178
    Slice          go to state 179
    TypeAssertion  go to state 180
    Arguments      go to state 181


State 147

  160 UnaryExpr: AND PrimaryExpr .
  167 PrimaryExpr: PrimaryExpr . Selector
  168            | PrimaryExpr . Index
  169            | PrimaryExpr . Slice
  170            | PrimaryExpr . Arguments
  172            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 174
    LEFTSQUARE  shift, and go to state 175
    DOT         shift, and go to state 176

    $default  reduce using rule 160 (UnaryExpr)

    Selector       go to state 177
    Index          go to state 178
    Slice          go to state 179
    TypeAssertion  go to state 180
    Arguments      go to state 181


State 148

   98 SliceType: LEFTSQUARE RIGHTSQUARE Type .

    $default  reduce using rule 98 (SliceType)


State 149

   93 Operand: LEFTPARAN Expression . RIGHTPARAN
  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    ANDNOT      shift, and go to state 154
    ADD         shift, and go to state 155
    SUB         shift, and go to state 156
    XOR         shift, and go to state 157
    MUL         shift, and go to state 158
    AND         shift, and go to state 159
    OR          shift, and go to state 160
    LOGOR       shift, and go to state 161
    LOGAND      shift, and go to state 162
    ISEQ        shift, and go to state 163
    NEQ         shift, and go to state 164
    LESSEQ      shift, and go to state 165
    GRTEQ       shift, and go to state 166
    GRT         shift, and go to state 167
    LESS        shift, and go to state 168
    MOD         shift, and go to state 169
    QUOT        shift, and go to state 170
    SHL         shift, and go to state 171
    SHR         shift, and go to state 172
    RIGHTPARAN  shift, and go to state 198


State 150

   95 LiteralValue: LEFTBRACE . RIGHTBRACE
   96             | LEFTBRACE . ElementList RIGHTBRACE
   97             | LEFTBRACE . ElementList COMMA RIGHTBRACE

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    RIGHTBRACE          shift, and go to state 199
    LEFTPARAN           shift, and go to state 105
    LEFTBRACE           shift, and go to state 150
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    LiteralValue  go to state 200
    SliceType     go to state 71
    ElementList   go to state 201
    KeyedElement  go to state 202
    Key           go to state 203
    Element       go to state 204
    Expression    go to state 205
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 151

   82 CompositeLit: LiteralType LiteralValue .

    $default  reduce using rule 82 (CompositeLit)


State 152

  173 StructLiteral: LEFTBRACE . KeyValueList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 206
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    KeyValueList  go to state 207
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 153

  171 PrimaryExpr: OperandName StructLiteral .

    $default  reduce using rule 171 (PrimaryExpr)


State 154

  145 Expression: Expression ANDNOT . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 208
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 155

  146 Expression: Expression ADD . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 209
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 156

  147 Expression: Expression SUB . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 210
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 157

  149 Expression: Expression XOR . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 211
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 158

  139 Expression: Expression MUL . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 212
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 159

  144 Expression: Expression AND . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 213
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 160

  148 Expression: Expression OR . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 214
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 161

  151 Expression: Expression LOGOR . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 215
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 162

  150 Expression: Expression LOGAND . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 216
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 163

  152 Expression: Expression ISEQ . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 217
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 164

  153 Expression: Expression NEQ . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 218
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 165

  156 Expression: Expression LESSEQ . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 219
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 166

  154 Expression: Expression GRTEQ . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 220
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 167

  155 Expression: Expression GRT . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 221
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 168

  157 Expression: Expression LESS . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 222
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 169

  141 Expression: Expression MOD . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 223
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 170

  140 Expression: Expression QUOT . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 224
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 171

  142 Expression: Expression SHL . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 225
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 172

  143 Expression: Expression SHR . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 226
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 173

  206 ArrayType: LEFTSQUARE Expression RIGHTSQUARE . Type

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 227
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 174

  189 Arguments: LEFTPARAN . RIGHTPARAN
  190          | LEFTPARAN . ExpressionList RIGHTPARAN
  191          | LEFTPARAN . ExpressionList ELIPSIS RIGHTPARAN

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    RIGHTPARAN          shift, and go to state 228
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 119
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 229
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 175

  177 Index: LEFTSQUARE . Expression RIGHTSQUARE
  178 Slice: LEFTSQUARE . COLON Expression RIGHTSQUARE
  179      | LEFTSQUARE . COLON RIGHTSQUARE
  180      | LEFTSQUARE . Expression COLON RIGHTSQUARE
  181      | LEFTSQUARE . Expression COLON Expression RIGHTSQUARE
  182      | LEFTSQUARE . COLON Expression COLON Expression RIGHTSQUARE
  183      | LEFTSQUARE . Expression COLON Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    COLON               shift, and go to state 230
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 231
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 176

  176 Selector: DOT . IDENTIFIER
  188 TypeAssertion: DOT . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN   shift, and go to state 232
    IDENTIFIER  shift, and go to state 233


State 177

  167 PrimaryExpr: PrimaryExpr Selector .

    $default  reduce using rule 167 (PrimaryExpr)


State 178

  168 PrimaryExpr: PrimaryExpr Index .

    $default  reduce using rule 168 (PrimaryExpr)


State 179

  169 PrimaryExpr: PrimaryExpr Slice .

    $default  reduce using rule 169 (PrimaryExpr)


State 180

  172 PrimaryExpr: PrimaryExpr TypeAssertion .

    $default  reduce using rule 172 (PrimaryExpr)


State 181

  170 PrimaryExpr: PrimaryExpr Arguments .

    $default  reduce using rule 170 (PrimaryExpr)


State 182

  193 ExpressionList: ExpressionList COMMA . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 234
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 183

   64 VarSpec: IdentifierList Type ASSGN_OP ExpressionList .
  193 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 182

    $default  reduce using rule 64 (VarSpec)


State 184

   22 Block: LEFTBRACE OpenBlock . StatementList CloseBlock RIGHTBRACE

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    BREAK               shift, and go to state 235
    CONTINUE            shift, and go to state 236
    RETURN              shift, and go to state 237
    STRUCT              shift, and go to state 61
    IF                  shift, and go to state 238
    FOR                 shift, and go to state 239
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 240
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    GOTO                shift, and go to state 241
    FALLTHROUGH         shift, and go to state 242
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTBRACE           shift, and go to state 124
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 243

    $default  reduce using rule 52 (EmptyStmt)

    Block            go to state 244
    StatementList    go to state 245
    Statement        go to state 246
    Declaration      go to state 247
    LabeledStmt      go to state 248
    SimpleStmt       go to state 249
    EmptyStmt        go to state 250
    ExpressionStmt   go to state 251
    IncDecStmt       go to state 252
    Assignment       go to state 253
    ShortVarDecl     go to state 254
    VarDecl          go to state 28
    IdentifierList   go to state 255
    CompositeLit     go to state 107
    LiteralType      go to state 108
    Operand          go to state 109
    OperandName      go to state 110
    SliceType        go to state 71
    ReturnStmt       go to state 256
    BreakStmt        go to state 257
    ContinueStmt     go to state 258
    GotoStmt         go to state 259
    SwitchStmt       go to state 260
    ExprSwitchStmt   go to state 261
    FallthroughStmt  go to state 262
    IfStmt           go to state 263
    ForStmt          go to state 264
    Expression       go to state 265
    UnaryExpr        go to state 112
    PrimaryExpr      go to state 113
    MakeExpr         go to state 114
    ExpressionList   go to state 266
    TypeDecl         go to state 29
    MapType          go to state 72
    StructType       go to state 73
    PointerType      go to state 74
    ArrayType        go to state 75
    Literal          go to state 115
    BasicLit         go to state 116
    String           go to state 117


State 185

   43 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature $@2 CloseBlock .

    $default  reduce using rule 43 (FunctionDecl)


State 186

   41 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature FunctionBody $@1 . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 267


State 187

   69 Result: LEFTPARAN TypeList . RIGHTPARAN
   71 TypeList: TypeList . COMMA Type

    RIGHTPARAN  shift, and go to state 268
    COMMA       shift, and go to state 269


State 188

   72 TypeList: Type .

    $default  reduce using rule 72 (TypeList)


State 189

  202 FieldDecl: IdentifierList Type . String
  203          | IdentifierList Type .

    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14

    $default  reduce using rule 203 (FieldDecl)

    String  go to state 270


State 190

  198 StructType: STRUCT LEFTBRACE FieldDeclList RIGHTBRACE .

    $default  reduce using rule 198 (StructType)


State 191

  201 FieldDeclList: FieldDeclList FieldDecl . SCOLON

    SCOLON  shift, and go to state 271


State 192

  200 FieldDeclList: FieldDecl SCOLON .

    $default  reduce using rule 200 (FieldDeclList)


State 193

  197 MapType: MAP LEFTSQUARE Type RIGHTSQUARE . Type

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 272
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 194

  187 MakeExpr: NEW LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 273


State 195

  184 MakeExpr: MAKE LEFTPARAN Type . COMMA Expression COMMA Expression RIGHTPARAN
  185         | MAKE LEFTPARAN Type . COMMA Expression RIGHTPARAN
  186         | MAKE LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 274
    COMMA       shift, and go to state 275


State 196

   87 LiteralType: LEFTSQUARE ELIPSIS RIGHTSQUARE Operand .

    $default  reduce using rule 87 (LiteralType)


State 197

   92 Operand: OperandName .

    $default  reduce using rule 92 (Operand)


State 198

   93 Operand: LEFTPARAN Expression RIGHTPARAN .

    $default  reduce using rule 93 (Operand)


State 199

   95 LiteralValue: LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 95 (LiteralValue)


State 200

  104 Key: LiteralValue .
  106 Element: LiteralValue .

    COLON     reduce using rule 104 (Key)
    $default  reduce using rule 106 (Element)


State 201

   96 LiteralValue: LEFTBRACE ElementList . RIGHTBRACE
   97             | LEFTBRACE ElementList . COMMA RIGHTBRACE
  100 ElementList: ElementList . COMMA KeyedElement

    RIGHTBRACE  shift, and go to state 276
    COMMA       shift, and go to state 277


State 202

   99 ElementList: KeyedElement .

    $default  reduce using rule 99 (ElementList)


State 203

  102 KeyedElement: Key . COLON Element

    COLON  shift, and go to state 278


State 204

  101 KeyedElement: Element .

    $default  reduce using rule 101 (KeyedElement)


State 205

  103 Key: Expression .
  105 Element: Expression .
  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    LOGOR   shift, and go to state 161
    LOGAND  shift, and go to state 162
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    COLON     reduce using rule 103 (Key)
    $default  reduce using rule 105 (Element)


State 206

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression
  174 KeyValueList: Expression . COLON Expression
  175             | Expression . COLON Expression COMMA KeyValueList

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    LOGOR   shift, and go to state 161
    LOGAND  shift, and go to state 162
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172
    COLON   shift, and go to state 279


State 207

  173 StructLiteral: LEFTBRACE KeyValueList . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 280


State 208

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  145           | Expression ANDNOT Expression .
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    $default  reduce using rule 145 (Expression)


State 209

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  146           | Expression ADD Expression .
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 146 (Expression)


State 210

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  147           | Expression SUB Expression .
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 147 (Expression)


State 211

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  149           | Expression XOR Expression .
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    $default  reduce using rule 149 (Expression)


State 212

  139 Expression: Expression . MUL Expression
  139           | Expression MUL Expression .
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    $default  reduce using rule 139 (Expression)


State 213

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  144           | Expression AND Expression .
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    $default  reduce using rule 144 (Expression)


State 214

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  148           | Expression OR Expression .
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 148 (Expression)


State 215

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  151           | Expression LOGOR Expression .
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    LOGAND  shift, and go to state 162
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 151 (Expression)


State 216

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  150           | Expression LOGAND Expression .
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 150 (Expression)


State 217

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  152           | Expression ISEQ Expression .
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 152 (Expression)


State 218

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  153           | Expression NEQ Expression .
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 153 (Expression)


State 219

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  156           | Expression LESSEQ Expression .
  157           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 156 (Expression)


State 220

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  154           | Expression GRTEQ Expression .
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 154 (Expression)


State 221

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  155           | Expression GRT Expression .
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 155 (Expression)


State 222

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression
  157           | Expression LESS Expression .

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 157 (Expression)


State 223

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  141           | Expression MOD Expression .
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    $default  reduce using rule 141 (Expression)


State 224

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  140           | Expression QUOT Expression .
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    $default  reduce using rule 140 (Expression)


State 225

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  142           | Expression SHL Expression .
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    $default  reduce using rule 142 (Expression)


State 226

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  143           | Expression SHR Expression .
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    $default  reduce using rule 143 (Expression)


State 227

  206 ArrayType: LEFTSQUARE Expression RIGHTSQUARE Type .

    $default  reduce using rule 206 (ArrayType)


State 228

  189 Arguments: LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 189 (Arguments)


State 229

  190 Arguments: LEFTPARAN ExpressionList . RIGHTPARAN
  191          | LEFTPARAN ExpressionList . ELIPSIS RIGHTPARAN
  193 ExpressionList: ExpressionList . COMMA Expression

    ELIPSIS     shift, and go to state 281
    RIGHTPARAN  shift, and go to state 282
    COMMA       shift, and go to state 182


State 230

  178 Slice: LEFTSQUARE COLON . Expression RIGHTSQUARE
  179      | LEFTSQUARE COLON . RIGHTSQUARE
  182      | LEFTSQUARE COLON . Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    RIGHTSQUARE         shift, and go to state 283
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 284
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 231

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression
  177 Index: LEFTSQUARE Expression . RIGHTSQUARE
  180 Slice: LEFTSQUARE Expression . COLON RIGHTSQUARE
  181      | LEFTSQUARE Expression . COLON Expression RIGHTSQUARE
  183      | LEFTSQUARE Expression . COLON Expression COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 154
    ADD          shift, and go to state 155
    SUB          shift, and go to state 156
    XOR          shift, and go to state 157
    MUL          shift, and go to state 158
    AND          shift, and go to state 159
    OR           shift, and go to state 160
    LOGOR        shift, and go to state 161
    LOGAND       shift, and go to state 162
    ISEQ         shift, and go to state 163
    NEQ          shift, and go to state 164
    LESSEQ       shift, and go to state 165
    GRTEQ        shift, and go to state 166
    GRT          shift, and go to state 167
    LESS         shift, and go to state 168
    MOD          shift, and go to state 169
    QUOT         shift, and go to state 170
    SHL          shift, and go to state 171
    SHR          shift, and go to state 172
    RIGHTSQUARE  shift, and go to state 285
    COLON        shift, and go to state 286


State 232

  188 TypeAssertion: DOT LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 287
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 233

  176 Selector: DOT IDENTIFIER .

    $default  reduce using rule 176 (Selector)


State 234

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression
  193 ExpressionList: ExpressionList COMMA Expression .

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    LOGOR   shift, and go to state 161
    LOGAND  shift, and go to state 162
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 193 (ExpressionList)


State 235

  109 BreakStmt: BREAK .
  110          | BREAK . IDENTIFIER

    IDENTIFIER  shift, and go to state 288

    $default  reduce using rule 109 (BreakStmt)


State 236

  111 ContinueStmt: CONTINUE .

    $default  reduce using rule 111 (ContinueStmt)


State 237

  107 ReturnStmt: RETURN .
  108           | RETURN . ExpressionList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    $default  reduce using rule 107 (ReturnStmt)

    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 119
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 289
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 238

  127 IfStmt: IF . OpenBlock Expression Block CloseBlock
  128       | IF . OpenBlock SimpleStmt SCOLON Expression Block CloseBlock
  129       | IF . OpenBlock Expression Block ELSE IfStmt CloseBlock
  130       | IF . OpenBlock Expression Block ELSE Block CloseBlock
  131       | IF . OpenBlock SimpleStmt SCOLON Expression Block ELSE IfStmt CloseBlock
  132       | IF . OpenBlock SimpleStmt SCOLON Expression Block ELSE Block CloseBlock

    $default  reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 290


State 239

  133 ForStmt: FOR . forMarker Block forMarkerEnd
  134        | FOR . OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR . OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  136        | FOR . OpenBlock Condition forMarker Block forMarkerEnd CloseBlock

    LEFTBRACE  reduce using rule 137 (forMarker)
    $default   reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 291
    forMarker  go to state 292


State 240

  115 ExprSwitchStmt: SWITCH . OpenBlock FakeTrue LEFTBRACE $@3 ExprCaseClauseList RIGHTBRACE CloseBlock
  117               | SWITCH . OpenBlock SimpleStmt SCOLON LEFTBRACE $@4 ExprCaseClauseList RIGHTBRACE CloseBlock
  119               | SWITCH . OpenBlock Expression LEFTBRACE $@5 ExprCaseClauseList RIGHTBRACE CloseBlock

    $default  reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 293


State 241

  112 GotoStmt: GOTO . IDENTIFIER

    IDENTIFIER  shift, and go to state 294


State 242

  126 FallthroughStmt: FALLTHROUGH .

    $default  reduce using rule 126 (FallthroughStmt)


State 243

   46 LabeledStmt: IDENTIFIER . COLON Statement
   80 IdentifierList: IDENTIFIER .
   94 OperandName: IDENTIFIER .

    COLON  shift, and go to state 295

    INFER_EQ  reduce using rule 80 (IdentifierList)
    COMMA     reduce using rule 80 (IdentifierList)
    COMMA     [reduce using rule 94 (OperandName)]
    $default  reduce using rule 94 (OperandName)


State 244

   35 Statement: Block .

    $default  reduce using rule 35 (Statement)


State 245

   22 Block: LEFTBRACE OpenBlock StatementList . CloseBlock RIGHTBRACE
   24 StatementList: StatementList . Statement SCOLON

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    BREAK               shift, and go to state 235
    CONTINUE            shift, and go to state 236
    RETURN              shift, and go to state 237
    STRUCT              shift, and go to state 61
    IF                  shift, and go to state 238
    FOR                 shift, and go to state 239
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 240
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    GOTO                shift, and go to state 241
    FALLTHROUGH         shift, and go to state 242
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTBRACE           shift, and go to state 124
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 243

    SCOLON    reduce using rule 52 (EmptyStmt)
    $default  reduce using rule 3 (CloseBlock)

    CloseBlock       go to state 296
    Block            go to state 244
    Statement        go to state 297
    Declaration      go to state 247
    LabeledStmt      go to state 248
    SimpleStmt       go to state 249
    EmptyStmt        go to state 250
    ExpressionStmt   go to state 251
    IncDecStmt       go to state 252
    Assignment       go to state 253
    ShortVarDecl     go to state 254
    VarDecl          go to state 28
    IdentifierList   go to state 255
    CompositeLit     go to state 107
    LiteralType      go to state 108
    Operand          go to state 109
    OperandName      go to state 110
    SliceType        go to state 71
    ReturnStmt       go to state 256
    BreakStmt        go to state 257
    ContinueStmt     go to state 258
    GotoStmt         go to state 259
    SwitchStmt       go to state 260
    ExprSwitchStmt   go to state 261
    FallthroughStmt  go to state 262
    IfStmt           go to state 263
    ForStmt          go to state 264
    Expression       go to state 265
    UnaryExpr        go to state 112
    PrimaryExpr      go to state 113
    MakeExpr         go to state 114
    ExpressionList   go to state 266
    TypeDecl         go to state 29
    MapType          go to state 72
    StructType       go to state 73
    PointerType      go to state 74
    ArrayType        go to state 75
    Literal          go to state 115
    BasicLit         go to state 116
    String           go to state 117


State 246

   25 StatementList: Statement . SCOLON

    SCOLON  shift, and go to state 298


State 247

   26 Statement: Declaration .

    $default  reduce using rule 26 (Statement)


State 248

   27 Statement: LabeledStmt .

    $default  reduce using rule 27 (Statement)


State 249

   28 Statement: SimpleStmt .

    $default  reduce using rule 28 (Statement)


State 250

   47 SimpleStmt: EmptyStmt .

    $default  reduce using rule 47 (SimpleStmt)


State 251

   48 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 48 (SimpleStmt)


State 252

   49 SimpleStmt: IncDecStmt .

    $default  reduce using rule 49 (SimpleStmt)


State 253

   50 SimpleStmt: Assignment .

    $default  reduce using rule 50 (SimpleStmt)


State 254

   51 SimpleStmt: ShortVarDecl .

    $default  reduce using rule 51 (SimpleStmt)


State 255

   58 ShortVarDecl: IdentifierList . INFER_EQ ExpressionList
   79 IdentifierList: IdentifierList . COMMA IDENTIFIER

    INFER_EQ  shift, and go to state 299
    COMMA     shift, and go to state 65


State 256

   29 Statement: ReturnStmt .

    $default  reduce using rule 29 (Statement)


State 257

   30 Statement: BreakStmt .

    $default  reduce using rule 30 (Statement)


State 258

   31 Statement: ContinueStmt .

    $default  reduce using rule 31 (Statement)


State 259

   32 Statement: GotoStmt .

    $default  reduce using rule 32 (Statement)


State 260

   33 Statement: SwitchStmt .

    $default  reduce using rule 33 (Statement)


State 261

  113 SwitchStmt: ExprSwitchStmt .

    $default  reduce using rule 113 (SwitchStmt)


State 262

   34 Statement: FallthroughStmt .

    $default  reduce using rule 34 (Statement)


State 263

   36 Statement: IfStmt .

    $default  reduce using rule 36 (Statement)


State 264

   37 Statement: ForStmt .

    $default  reduce using rule 37 (Statement)


State 265

   54 ExpressionStmt: Expression .
   55 IncDecStmt: Expression . PLUSPLUS
   56           | Expression . MINUSMINUS
  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression
  192 ExpressionList: Expression .

    PLUSPLUS    shift, and go to state 300
    MINUSMINUS  shift, and go to state 301
    ANDNOT      shift, and go to state 154
    ADD         shift, and go to state 155
    SUB         shift, and go to state 156
    XOR         shift, and go to state 157
    MUL         shift, and go to state 158
    AND         shift, and go to state 159
    OR          shift, and go to state 160
    LOGOR       shift, and go to state 161
    LOGAND      shift, and go to state 162
    ISEQ        shift, and go to state 163
    NEQ         shift, and go to state 164
    LESSEQ      shift, and go to state 165
    GRTEQ       shift, and go to state 166
    GRT         shift, and go to state 167
    LESS        shift, and go to state 168
    MOD         shift, and go to state 169
    QUOT        shift, and go to state 170
    SHL         shift, and go to state 171
    SHR         shift, and go to state 172

    COMMA     reduce using rule 192 (ExpressionList)
    ASSGN_OP  reduce using rule 192 (ExpressionList)
    $default  reduce using rule 54 (ExpressionStmt)


State 266

   57 Assignment: ExpressionList . ASSGN_OP ExpressionList
  193 ExpressionList: ExpressionList . COMMA Expression

    COMMA     shift, and go to state 182
    ASSGN_OP  shift, and go to state 302


State 267

   41 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature FunctionBody $@1 CloseBlock .

    $default  reduce using rule 41 (FunctionDecl)


State 268

   69 Result: LEFTPARAN TypeList RIGHTPARAN .

    $default  reduce using rule 69 (Result)


State 269

   71 TypeList: TypeList COMMA . Type

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 303
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 270

  202 FieldDecl: IdentifierList Type String .

    $default  reduce using rule 202 (FieldDecl)


State 271

  201 FieldDeclList: FieldDeclList FieldDecl SCOLON .

    $default  reduce using rule 201 (FieldDeclList)


State 272

  197 MapType: MAP LEFTSQUARE Type RIGHTSQUARE Type .

    $default  reduce using rule 197 (MapType)


State 273

  187 MakeExpr: NEW LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 187 (MakeExpr)


State 274

  186 MakeExpr: MAKE LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 186 (MakeExpr)


State 275

  184 MakeExpr: MAKE LEFTPARAN Type COMMA . Expression COMMA Expression RIGHTPARAN
  185         | MAKE LEFTPARAN Type COMMA . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 304
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 276

   96 LiteralValue: LEFTBRACE ElementList RIGHTBRACE .

    $default  reduce using rule 96 (LiteralValue)


State 277

   97 LiteralValue: LEFTBRACE ElementList COMMA . RIGHTBRACE
  100 ElementList: ElementList COMMA . KeyedElement

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    RIGHTBRACE          shift, and go to state 305
    LEFTPARAN           shift, and go to state 105
    LEFTBRACE           shift, and go to state 150
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    LiteralValue  go to state 200
    SliceType     go to state 71
    KeyedElement  go to state 306
    Key           go to state 203
    Element       go to state 204
    Expression    go to state 205
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 278

  102 KeyedElement: Key COLON . Element

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTBRACE           shift, and go to state 150
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    LiteralValue  go to state 307
    SliceType     go to state 71
    Element       go to state 308
    Expression    go to state 309
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 279

  174 KeyValueList: Expression COLON . Expression
  175             | Expression COLON . Expression COMMA KeyValueList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 310
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 280

  173 StructLiteral: LEFTBRACE KeyValueList RIGHTBRACE .

    $default  reduce using rule 173 (StructLiteral)


State 281

  191 Arguments: LEFTPARAN ExpressionList ELIPSIS . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 311


State 282

  190 Arguments: LEFTPARAN ExpressionList RIGHTPARAN .

    $default  reduce using rule 190 (Arguments)


State 283

  179 Slice: LEFTSQUARE COLON RIGHTSQUARE .

    $default  reduce using rule 179 (Slice)


State 284

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression
  178 Slice: LEFTSQUARE COLON Expression . RIGHTSQUARE
  182      | LEFTSQUARE COLON Expression . COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 154
    ADD          shift, and go to state 155
    SUB          shift, and go to state 156
    XOR          shift, and go to state 157
    MUL          shift, and go to state 158
    AND          shift, and go to state 159
    OR           shift, and go to state 160
    LOGOR        shift, and go to state 161
    LOGAND       shift, and go to state 162
    ISEQ         shift, and go to state 163
    NEQ          shift, and go to state 164
    LESSEQ       shift, and go to state 165
    GRTEQ        shift, and go to state 166
    GRT          shift, and go to state 167
    LESS         shift, and go to state 168
    MOD          shift, and go to state 169
    QUOT         shift, and go to state 170
    SHL          shift, and go to state 171
    SHR          shift, and go to state 172
    RIGHTSQUARE  shift, and go to state 312
    COLON        shift, and go to state 313


State 285

  177 Index: LEFTSQUARE Expression RIGHTSQUARE .

    $default  reduce using rule 177 (Index)


State 286

  180 Slice: LEFTSQUARE Expression COLON . RIGHTSQUARE
  181      | LEFTSQUARE Expression COLON . Expression RIGHTSQUARE
  183      | LEFTSQUARE Expression COLON . Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    RIGHTSQUARE         shift, and go to state 314
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 315
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 287

  188 TypeAssertion: DOT LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 316


State 288

  110 BreakStmt: BREAK IDENTIFIER .

    $default  reduce using rule 110 (BreakStmt)


State 289

  108 ReturnStmt: RETURN ExpressionList .
  193 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 182

    $default  reduce using rule 108 (ReturnStmt)


State 290

  127 IfStmt: IF OpenBlock . Expression Block CloseBlock
  128       | IF OpenBlock . SimpleStmt SCOLON Expression Block CloseBlock
  129       | IF OpenBlock . Expression Block ELSE IfStmt CloseBlock
  130       | IF OpenBlock . Expression Block ELSE Block CloseBlock
  131       | IF OpenBlock . SimpleStmt SCOLON Expression Block ELSE IfStmt CloseBlock
  132       | IF OpenBlock . SimpleStmt SCOLON Expression Block ELSE Block CloseBlock

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 317

    $default  reduce using rule 52 (EmptyStmt)

    SimpleStmt      go to state 318
    EmptyStmt       go to state 250
    ExpressionStmt  go to state 251
    IncDecStmt      go to state 252
    Assignment      go to state 253
    ShortVarDecl    go to state 254
    IdentifierList  go to state 255
    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 319
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 266
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 291

  134 ForStmt: FOR OpenBlock . SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR OpenBlock . SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  136        | FOR OpenBlock . Condition forMarker Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 317

    $default  reduce using rule 52 (EmptyStmt)

    Condition       go to state 320
    SimpleStmt      go to state 321
    EmptyStmt       go to state 250
    ExpressionStmt  go to state 251
    IncDecStmt      go to state 252
    Assignment      go to state 253
    ShortVarDecl    go to state 254
    IdentifierList  go to state 255
    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 322
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 266
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 292

  133 ForStmt: FOR forMarker . Block forMarkerEnd

    LEFTBRACE  shift, and go to state 124

    Block  go to state 323


State 293

  115 ExprSwitchStmt: SWITCH OpenBlock . FakeTrue LEFTBRACE $@3 ExprCaseClauseList RIGHTBRACE CloseBlock
  117               | SWITCH OpenBlock . SimpleStmt SCOLON LEFTBRACE $@4 ExprCaseClauseList RIGHTBRACE CloseBlock
  119               | SWITCH OpenBlock . Expression LEFTBRACE $@5 ExprCaseClauseList RIGHTBRACE CloseBlock

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 317

    LEFTBRACE  reduce using rule 123 (FakeTrue)
    $default   reduce using rule 52 (EmptyStmt)

    SimpleStmt      go to state 324
    EmptyStmt       go to state 250
    ExpressionStmt  go to state 251
    IncDecStmt      go to state 252
    Assignment      go to state 253
    ShortVarDecl    go to state 254
    IdentifierList  go to state 255
    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    FakeTrue        go to state 325
    Expression      go to state 326
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 266
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 294

  112 GotoStmt: GOTO IDENTIFIER .

    $default  reduce using rule 112 (GotoStmt)


State 295

   46 LabeledStmt: IDENTIFIER COLON . Statement

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    BREAK               shift, and go to state 235
    CONTINUE            shift, and go to state 236
    RETURN              shift, and go to state 237
    STRUCT              shift, and go to state 61
    IF                  shift, and go to state 238
    FOR                 shift, and go to state 239
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 240
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    GOTO                shift, and go to state 241
    FALLTHROUGH         shift, and go to state 242
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTBRACE           shift, and go to state 124
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 243

    $default  reduce using rule 52 (EmptyStmt)

    Block            go to state 244
    Statement        go to state 327
    Declaration      go to state 247
    LabeledStmt      go to state 248
    SimpleStmt       go to state 249
    EmptyStmt        go to state 250
    ExpressionStmt   go to state 251
    IncDecStmt       go to state 252
    Assignment       go to state 253
    ShortVarDecl     go to state 254
    VarDecl          go to state 28
    IdentifierList   go to state 255
    CompositeLit     go to state 107
    LiteralType      go to state 108
    Operand          go to state 109
    OperandName      go to state 110
    SliceType        go to state 71
    ReturnStmt       go to state 256
    BreakStmt        go to state 257
    ContinueStmt     go to state 258
    GotoStmt         go to state 259
    SwitchStmt       go to state 260
    ExprSwitchStmt   go to state 261
    FallthroughStmt  go to state 262
    IfStmt           go to state 263
    ForStmt          go to state 264
    Expression       go to state 265
    UnaryExpr        go to state 112
    PrimaryExpr      go to state 113
    MakeExpr         go to state 114
    ExpressionList   go to state 266
    TypeDecl         go to state 29
    MapType          go to state 72
    StructType       go to state 73
    PointerType      go to state 74
    ArrayType        go to state 75
    Literal          go to state 115
    BasicLit         go to state 116
    String           go to state 117


State 296

   22 Block: LEFTBRACE OpenBlock StatementList CloseBlock . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 328


State 297

   24 StatementList: StatementList Statement . SCOLON

    SCOLON  shift, and go to state 329


State 298

   25 StatementList: Statement SCOLON .

    $default  reduce using rule 25 (StatementList)


State 299

   58 ShortVarDecl: IdentifierList INFER_EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 119
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 330
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 300

   55 IncDecStmt: Expression PLUSPLUS .

    $default  reduce using rule 55 (IncDecStmt)


State 301

   56 IncDecStmt: Expression MINUSMINUS .

    $default  reduce using rule 56 (IncDecStmt)


State 302

   57 Assignment: ExpressionList ASSGN_OP . ExpressionList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 119
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 331
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 303

   71 TypeList: TypeList COMMA Type .

    $default  reduce using rule 71 (TypeList)


State 304

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression
  184 MakeExpr: MAKE LEFTPARAN Type COMMA Expression . COMMA Expression RIGHTPARAN
  185         | MAKE LEFTPARAN Type COMMA Expression . RIGHTPARAN

    ANDNOT      shift, and go to state 154
    ADD         shift, and go to state 155
    SUB         shift, and go to state 156
    XOR         shift, and go to state 157
    MUL         shift, and go to state 158
    AND         shift, and go to state 159
    OR          shift, and go to state 160
    LOGOR       shift, and go to state 161
    LOGAND      shift, and go to state 162
    ISEQ        shift, and go to state 163
    NEQ         shift, and go to state 164
    LESSEQ      shift, and go to state 165
    GRTEQ       shift, and go to state 166
    GRT         shift, and go to state 167
    LESS        shift, and go to state 168
    MOD         shift, and go to state 169
    QUOT        shift, and go to state 170
    SHL         shift, and go to state 171
    SHR         shift, and go to state 172
    RIGHTPARAN  shift, and go to state 332
    COMMA       shift, and go to state 333


State 305

   97 LiteralValue: LEFTBRACE ElementList COMMA RIGHTBRACE .

    $default  reduce using rule 97 (LiteralValue)


State 306

  100 ElementList: ElementList COMMA KeyedElement .

    $default  reduce using rule 100 (ElementList)


State 307

  106 Element: LiteralValue .

    $default  reduce using rule 106 (Element)


State 308

  102 KeyedElement: Key COLON Element .

    $default  reduce using rule 102 (KeyedElement)


State 309

  105 Element: Expression .
  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    LOGOR   shift, and go to state 161
    LOGAND  shift, and go to state 162
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 105 (Element)


State 310

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression
  174 KeyValueList: Expression COLON Expression .
  175             | Expression COLON Expression . COMMA KeyValueList

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    LOGOR   shift, and go to state 161
    LOGAND  shift, and go to state 162
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172
    COMMA   shift, and go to state 334

    $default  reduce using rule 174 (KeyValueList)


State 311

  191 Arguments: LEFTPARAN ExpressionList ELIPSIS RIGHTPARAN .

    $default  reduce using rule 191 (Arguments)


State 312

  178 Slice: LEFTSQUARE COLON Expression RIGHTSQUARE .

    $default  reduce using rule 178 (Slice)


State 313

  182 Slice: LEFTSQUARE COLON Expression COLON . Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 335
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 314

  180 Slice: LEFTSQUARE Expression COLON RIGHTSQUARE .

    $default  reduce using rule 180 (Slice)


State 315

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression
  181 Slice: LEFTSQUARE Expression COLON Expression . RIGHTSQUARE
  183      | LEFTSQUARE Expression COLON Expression . COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 154
    ADD          shift, and go to state 155
    SUB          shift, and go to state 156
    XOR          shift, and go to state 157
    MUL          shift, and go to state 158
    AND          shift, and go to state 159
    OR           shift, and go to state 160
    LOGOR        shift, and go to state 161
    LOGAND       shift, and go to state 162
    ISEQ         shift, and go to state 163
    NEQ          shift, and go to state 164
    LESSEQ       shift, and go to state 165
    GRTEQ        shift, and go to state 166
    GRT          shift, and go to state 167
    LESS         shift, and go to state 168
    MOD          shift, and go to state 169
    QUOT         shift, and go to state 170
    SHL          shift, and go to state 171
    SHR          shift, and go to state 172
    RIGHTSQUARE  shift, and go to state 336
    COLON        shift, and go to state 337


State 316

  188 TypeAssertion: DOT LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 188 (TypeAssertion)


State 317

   80 IdentifierList: IDENTIFIER .
   94 OperandName: IDENTIFIER .

    INFER_EQ  reduce using rule 80 (IdentifierList)
    COMMA     reduce using rule 80 (IdentifierList)
    COMMA     [reduce using rule 94 (OperandName)]
    $default  reduce using rule 94 (OperandName)


State 318

  128 IfStmt: IF OpenBlock SimpleStmt . SCOLON Expression Block CloseBlock
  131       | IF OpenBlock SimpleStmt . SCOLON Expression Block ELSE IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt . SCOLON Expression Block ELSE Block CloseBlock

    SCOLON  shift, and go to state 338


State 319

   54 ExpressionStmt: Expression .
   55 IncDecStmt: Expression . PLUSPLUS
   56           | Expression . MINUSMINUS
  127 IfStmt: IF OpenBlock Expression . Block CloseBlock
  129       | IF OpenBlock Expression . Block ELSE IfStmt CloseBlock
  130       | IF OpenBlock Expression . Block ELSE Block CloseBlock
  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression
  192 ExpressionList: Expression .

    PLUSPLUS    shift, and go to state 300
    MINUSMINUS  shift, and go to state 301
    ANDNOT      shift, and go to state 154
    ADD         shift, and go to state 155
    SUB         shift, and go to state 156
    XOR         shift, and go to state 157
    MUL         shift, and go to state 158
    AND         shift, and go to state 159
    OR          shift, and go to state 160
    LOGOR       shift, and go to state 161
    LOGAND      shift, and go to state 162
    ISEQ        shift, and go to state 163
    NEQ         shift, and go to state 164
    LESSEQ      shift, and go to state 165
    GRTEQ       shift, and go to state 166
    GRT         shift, and go to state 167
    LESS        shift, and go to state 168
    MOD         shift, and go to state 169
    QUOT        shift, and go to state 170
    SHL         shift, and go to state 171
    SHR         shift, and go to state 172
    LEFTBRACE   shift, and go to state 124

    SCOLON    reduce using rule 54 (ExpressionStmt)
    $default  reduce using rule 192 (ExpressionList)

    Block  go to state 339


State 320

  136 ForStmt: FOR OpenBlock Condition . forMarker Block forMarkerEnd CloseBlock

    $default  reduce using rule 137 (forMarker)

    forMarker  go to state 340


State 321

  134 ForStmt: FOR OpenBlock SimpleStmt . SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR OpenBlock SimpleStmt . SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    SCOLON  shift, and go to state 341


State 322

   23 Condition: Expression .
   54 ExpressionStmt: Expression .
   55 IncDecStmt: Expression . PLUSPLUS
   56           | Expression . MINUSMINUS
  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression
  192 ExpressionList: Expression .

    PLUSPLUS    shift, and go to state 300
    MINUSMINUS  shift, and go to state 301
    ANDNOT      shift, and go to state 154
    ADD         shift, and go to state 155
    SUB         shift, and go to state 156
    XOR         shift, and go to state 157
    MUL         shift, and go to state 158
    AND         shift, and go to state 159
    OR          shift, and go to state 160
    LOGOR       shift, and go to state 161
    LOGAND      shift, and go to state 162
    ISEQ        shift, and go to state 163
    NEQ         shift, and go to state 164
    LESSEQ      shift, and go to state 165
    GRTEQ       shift, and go to state 166
    GRT         shift, and go to state 167
    LESS        shift, and go to state 168
    MOD         shift, and go to state 169
    QUOT        shift, and go to state 170
    SHL         shift, and go to state 171
    SHR         shift, and go to state 172

    SCOLON     reduce using rule 54 (ExpressionStmt)
    LEFTBRACE  reduce using rule 23 (Condition)
    $default   reduce using rule 192 (ExpressionList)


State 323

  133 ForStmt: FOR forMarker Block . forMarkerEnd

    $default  reduce using rule 138 (forMarkerEnd)

    forMarkerEnd  go to state 342


State 324

  117 ExprSwitchStmt: SWITCH OpenBlock SimpleStmt . SCOLON LEFTBRACE $@4 ExprCaseClauseList RIGHTBRACE CloseBlock

    SCOLON  shift, and go to state 343


State 325

  115 ExprSwitchStmt: SWITCH OpenBlock FakeTrue . LEFTBRACE $@3 ExprCaseClauseList RIGHTBRACE CloseBlock

    LEFTBRACE  shift, and go to state 344


State 326

   54 ExpressionStmt: Expression .
   55 IncDecStmt: Expression . PLUSPLUS
   56           | Expression . MINUSMINUS
  119 ExprSwitchStmt: SWITCH OpenBlock Expression . LEFTBRACE $@5 ExprCaseClauseList RIGHTBRACE CloseBlock
  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression
  192 ExpressionList: Expression .

    PLUSPLUS    shift, and go to state 300
    MINUSMINUS  shift, and go to state 301
    ANDNOT      shift, and go to state 154
    ADD         shift, and go to state 155
    SUB         shift, and go to state 156
    XOR         shift, and go to state 157
    MUL         shift, and go to state 158
    AND         shift, and go to state 159
    OR          shift, and go to state 160
    LOGOR       shift, and go to state 161
    LOGAND      shift, and go to state 162
    ISEQ        shift, and go to state 163
    NEQ         shift, and go to state 164
    LESSEQ      shift, and go to state 165
    GRTEQ       shift, and go to state 166
    GRT         shift, and go to state 167
    LESS        shift, and go to state 168
    MOD         shift, and go to state 169
    QUOT        shift, and go to state 170
    SHL         shift, and go to state 171
    SHR         shift, and go to state 172
    LEFTBRACE   shift, and go to state 345

    SCOLON    reduce using rule 54 (ExpressionStmt)
    $default  reduce using rule 192 (ExpressionList)


State 327

   46 LabeledStmt: IDENTIFIER COLON Statement .

    $default  reduce using rule 46 (LabeledStmt)


State 328

   22 Block: LEFTBRACE OpenBlock StatementList CloseBlock RIGHTBRACE .

    $default  reduce using rule 22 (Block)


State 329

   24 StatementList: StatementList Statement SCOLON .

    $default  reduce using rule 24 (StatementList)


State 330

   58 ShortVarDecl: IdentifierList INFER_EQ ExpressionList .
  193 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 182

    $default  reduce using rule 58 (ShortVarDecl)


State 331

   57 Assignment: ExpressionList ASSGN_OP ExpressionList .
  193 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 182

    $default  reduce using rule 57 (Assignment)


State 332

  185 MakeExpr: MAKE LEFTPARAN Type COMMA Expression RIGHTPARAN .

    $default  reduce using rule 185 (MakeExpr)


State 333

  184 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 346
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 334

  175 KeyValueList: Expression COLON Expression COMMA . KeyValueList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 206
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    KeyValueList  go to state 347
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 335

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression
  182 Slice: LEFTSQUARE COLON Expression COLON Expression . RIGHTSQUARE

    ANDNOT       shift, and go to state 154
    ADD          shift, and go to state 155
    SUB          shift, and go to state 156
    XOR          shift, and go to state 157
    MUL          shift, and go to state 158
    AND          shift, and go to state 159
    OR           shift, and go to state 160
    LOGOR        shift, and go to state 161
    LOGAND       shift, and go to state 162
    ISEQ         shift, and go to state 163
    NEQ          shift, and go to state 164
    LESSEQ       shift, and go to state 165
    GRTEQ        shift, and go to state 166
    GRT          shift, and go to state 167
    LESS         shift, and go to state 168
    MOD          shift, and go to state 169
    QUOT         shift, and go to state 170
    SHL          shift, and go to state 171
    SHR          shift, and go to state 172
    RIGHTSQUARE  shift, and go to state 348


State 336

  181 Slice: LEFTSQUARE Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 181 (Slice)


State 337

  183 Slice: LEFTSQUARE Expression COLON Expression COLON . Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 349
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 338

  128 IfStmt: IF OpenBlock SimpleStmt SCOLON . Expression Block CloseBlock
  131       | IF OpenBlock SimpleStmt SCOLON . Expression Block ELSE IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt SCOLON . Expression Block ELSE Block CloseBlock

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 350
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 339

  127 IfStmt: IF OpenBlock Expression Block . CloseBlock
  129       | IF OpenBlock Expression Block . ELSE IfStmt CloseBlock
  130       | IF OpenBlock Expression Block . ELSE Block CloseBlock

    ELSE  shift, and go to state 351

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 352


State 340

  136 ForStmt: FOR OpenBlock Condition forMarker . Block forMarkerEnd CloseBlock

    LEFTBRACE  shift, and go to state 124

    Block  go to state 353


State 341

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON . forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR OpenBlock SimpleStmt SCOLON . forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    $default  reduce using rule 137 (forMarker)

    forMarker  go to state 354


State 342

  133 ForStmt: FOR forMarker Block forMarkerEnd .

    $default  reduce using rule 133 (ForStmt)


State 343

  117 ExprSwitchStmt: SWITCH OpenBlock SimpleStmt SCOLON . LEFTBRACE $@4 ExprCaseClauseList RIGHTBRACE CloseBlock

    LEFTBRACE  shift, and go to state 355


State 344

  115 ExprSwitchStmt: SWITCH OpenBlock FakeTrue LEFTBRACE . $@3 ExprCaseClauseList RIGHTBRACE CloseBlock

    $default  reduce using rule 114 ($@3)

    $@3  go to state 356


State 345

  119 ExprSwitchStmt: SWITCH OpenBlock Expression LEFTBRACE . $@5 ExprCaseClauseList RIGHTBRACE CloseBlock

    $default  reduce using rule 118 ($@5)

    $@5  go to state 357


State 346

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression
  184 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression . RIGHTPARAN

    ANDNOT      shift, and go to state 154
    ADD         shift, and go to state 155
    SUB         shift, and go to state 156
    XOR         shift, and go to state 157
    MUL         shift, and go to state 158
    AND         shift, and go to state 159
    OR          shift, and go to state 160
    LOGOR       shift, and go to state 161
    LOGAND      shift, and go to state 162
    ISEQ        shift, and go to state 163
    NEQ         shift, and go to state 164
    LESSEQ      shift, and go to state 165
    GRTEQ       shift, and go to state 166
    GRT         shift, and go to state 167
    LESS        shift, and go to state 168
    MOD         shift, and go to state 169
    QUOT        shift, and go to state 170
    SHL         shift, and go to state 171
    SHR         shift, and go to state 172
    RIGHTPARAN  shift, and go to state 358


State 347

  175 KeyValueList: Expression COLON Expression COMMA KeyValueList .

    $default  reduce using rule 175 (KeyValueList)


State 348

  182 Slice: LEFTSQUARE COLON Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 182 (Slice)


State 349

  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression
  183 Slice: LEFTSQUARE Expression COLON Expression COLON Expression . RIGHTSQUARE

    ANDNOT       shift, and go to state 154
    ADD          shift, and go to state 155
    SUB          shift, and go to state 156
    XOR          shift, and go to state 157
    MUL          shift, and go to state 158
    AND          shift, and go to state 159
    OR           shift, and go to state 160
    LOGOR        shift, and go to state 161
    LOGAND       shift, and go to state 162
    ISEQ         shift, and go to state 163
    NEQ          shift, and go to state 164
    LESSEQ       shift, and go to state 165
    GRTEQ        shift, and go to state 166
    GRT          shift, and go to state 167
    LESS         shift, and go to state 168
    MOD          shift, and go to state 169
    QUOT         shift, and go to state 170
    SHL          shift, and go to state 171
    SHR          shift, and go to state 172
    RIGHTSQUARE  shift, and go to state 359


State 350

  128 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression . Block CloseBlock
  131       | IF OpenBlock SimpleStmt SCOLON Expression . Block ELSE IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt SCOLON Expression . Block ELSE Block CloseBlock
  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    ANDNOT     shift, and go to state 154
    ADD        shift, and go to state 155
    SUB        shift, and go to state 156
    XOR        shift, and go to state 157
    MUL        shift, and go to state 158
    AND        shift, and go to state 159
    OR         shift, and go to state 160
    LOGOR      shift, and go to state 161
    LOGAND     shift, and go to state 162
    ISEQ       shift, and go to state 163
    NEQ        shift, and go to state 164
    LESSEQ     shift, and go to state 165
    GRTEQ      shift, and go to state 166
    GRT        shift, and go to state 167
    LESS       shift, and go to state 168
    MOD        shift, and go to state 169
    QUOT       shift, and go to state 170
    SHL        shift, and go to state 171
    SHR        shift, and go to state 172
    LEFTBRACE  shift, and go to state 124

    Block  go to state 360


State 351

  129 IfStmt: IF OpenBlock Expression Block ELSE . IfStmt CloseBlock
  130       | IF OpenBlock Expression Block ELSE . Block CloseBlock

    IF         shift, and go to state 238
    LEFTBRACE  shift, and go to state 124

    Block   go to state 361
    IfStmt  go to state 362


State 352

  127 IfStmt: IF OpenBlock Expression Block CloseBlock .

    $default  reduce using rule 127 (IfStmt)


State 353

  136 ForStmt: FOR OpenBlock Condition forMarker Block . forMarkerEnd CloseBlock

    $default  reduce using rule 138 (forMarkerEnd)

    forMarkerEnd  go to state 363


State 354

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker . EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR OpenBlock SimpleStmt SCOLON forMarker . ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    $default  reduce using rule 53 (EmptyExpr)

    EmptyExpr       go to state 364
    ExpressionStmt  go to state 365
    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 366
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 355

  117 ExprSwitchStmt: SWITCH OpenBlock SimpleStmt SCOLON LEFTBRACE . $@4 ExprCaseClauseList RIGHTBRACE CloseBlock

    $default  reduce using rule 116 ($@4)

    $@4  go to state 367


State 356

  115 ExprSwitchStmt: SWITCH OpenBlock FakeTrue LEFTBRACE $@3 . ExprCaseClauseList RIGHTBRACE CloseBlock

    CASE     shift, and go to state 368
    DEFAULT  shift, and go to state 369

    ExprCaseClauseList  go to state 370
    ExprCaseClause      go to state 371
    ExprSwitchCase      go to state 372


State 357

  119 ExprSwitchStmt: SWITCH OpenBlock Expression LEFTBRACE $@5 . ExprCaseClauseList RIGHTBRACE CloseBlock

    CASE     shift, and go to state 368
    DEFAULT  shift, and go to state 369

    ExprCaseClauseList  go to state 373
    ExprCaseClause      go to state 371
    ExprSwitchCase      go to state 372


State 358

  184 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN .

    $default  reduce using rule 184 (MakeExpr)


State 359

  183 Slice: LEFTSQUARE Expression COLON Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 183 (Slice)


State 360

  128 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block . CloseBlock
  131       | IF OpenBlock SimpleStmt SCOLON Expression Block . ELSE IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt SCOLON Expression Block . ELSE Block CloseBlock

    ELSE  shift, and go to state 374

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 375


State 361

  130 IfStmt: IF OpenBlock Expression Block ELSE Block . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 376


State 362

  129 IfStmt: IF OpenBlock Expression Block ELSE IfStmt . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 377


State 363

  136 ForStmt: FOR OpenBlock Condition forMarker Block forMarkerEnd . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 378


State 364

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr . SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    SCOLON  shift, and go to state 379


State 365

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt . SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    SCOLON  shift, and go to state 380


State 366

   54 ExpressionStmt: Expression .
  139 Expression: Expression . MUL Expression
  140           | Expression . QUOT Expression
  141           | Expression . MOD Expression
  142           | Expression . SHL Expression
  143           | Expression . SHR Expression
  144           | Expression . AND Expression
  145           | Expression . ANDNOT Expression
  146           | Expression . ADD Expression
  147           | Expression . SUB Expression
  148           | Expression . OR Expression
  149           | Expression . XOR Expression
  150           | Expression . LOGAND Expression
  151           | Expression . LOGOR Expression
  152           | Expression . ISEQ Expression
  153           | Expression . NEQ Expression
  154           | Expression . GRTEQ Expression
  155           | Expression . GRT Expression
  156           | Expression . LESSEQ Expression
  157           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    LOGOR   shift, and go to state 161
    LOGAND  shift, and go to state 162
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 54 (ExpressionStmt)


State 367

  117 ExprSwitchStmt: SWITCH OpenBlock SimpleStmt SCOLON LEFTBRACE $@4 . ExprCaseClauseList RIGHTBRACE CloseBlock

    CASE     shift, and go to state 368
    DEFAULT  shift, and go to state 369

    ExprCaseClauseList  go to state 381
    ExprCaseClause      go to state 371
    ExprSwitchCase      go to state 372


State 368

  124 ExprSwitchCase: CASE . ExpressionList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 119
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 382
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 369

  125 ExprSwitchCase: DEFAULT . FakeTrue

    $default  reduce using rule 123 (FakeTrue)

    FakeTrue  go to state 383


State 370

  115 ExprSwitchStmt: SWITCH OpenBlock FakeTrue LEFTBRACE $@3 ExprCaseClauseList . RIGHTBRACE CloseBlock
  120 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 368
    DEFAULT     shift, and go to state 369
    RIGHTBRACE  shift, and go to state 384

    ExprCaseClause  go to state 385
    ExprSwitchCase  go to state 372


State 371

  121 ExprCaseClauseList: ExprCaseClause .

    $default  reduce using rule 121 (ExprCaseClauseList)


State 372

  122 ExprCaseClause: ExprSwitchCase . COLON StatementList

    COLON  shift, and go to state 386


State 373

  119 ExprSwitchStmt: SWITCH OpenBlock Expression LEFTBRACE $@5 ExprCaseClauseList . RIGHTBRACE CloseBlock
  120 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 368
    DEFAULT     shift, and go to state 369
    RIGHTBRACE  shift, and go to state 387

    ExprCaseClause  go to state 385
    ExprSwitchCase  go to state 372


State 374

  131 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE . IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt SCOLON Expression Block ELSE . Block CloseBlock

    IF         shift, and go to state 238
    LEFTBRACE  shift, and go to state 124

    Block   go to state 388
    IfStmt  go to state 389


State 375

  128 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block CloseBlock .

    $default  reduce using rule 128 (IfStmt)


State 376

  130 IfStmt: IF OpenBlock Expression Block ELSE Block CloseBlock .

    $default  reduce using rule 130 (IfStmt)


State 377

  129 IfStmt: IF OpenBlock Expression Block ELSE IfStmt CloseBlock .

    $default  reduce using rule 129 (IfStmt)


State 378

  136 ForStmt: FOR OpenBlock Condition forMarker Block forMarkerEnd CloseBlock .

    $default  reduce using rule 136 (ForStmt)


State 379

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON . SimpleStmt Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 317

    $default  reduce using rule 52 (EmptyStmt)

    SimpleStmt      go to state 390
    EmptyStmt       go to state 250
    ExpressionStmt  go to state 251
    IncDecStmt      go to state 252
    Assignment      go to state 253
    ShortVarDecl    go to state 254
    IdentifierList  go to state 255
    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 265
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 266
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 380

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON . SimpleStmt Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 317

    $default  reduce using rule 52 (EmptyStmt)

    SimpleStmt      go to state 391
    EmptyStmt       go to state 250
    ExpressionStmt  go to state 251
    IncDecStmt      go to state 252
    Assignment      go to state 253
    ShortVarDecl    go to state 254
    IdentifierList  go to state 255
    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 265
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 266
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 381

  117 ExprSwitchStmt: SWITCH OpenBlock SimpleStmt SCOLON LEFTBRACE $@4 ExprCaseClauseList . RIGHTBRACE CloseBlock
  120 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 368
    DEFAULT     shift, and go to state 369
    RIGHTBRACE  shift, and go to state 392

    ExprCaseClause  go to state 385
    ExprSwitchCase  go to state 372


State 382

  124 ExprSwitchCase: CASE ExpressionList .
  193 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 182

    $default  reduce using rule 124 (ExprSwitchCase)


State 383

  125 ExprSwitchCase: DEFAULT FakeTrue .

    $default  reduce using rule 125 (ExprSwitchCase)


State 384

  115 ExprSwitchStmt: SWITCH OpenBlock FakeTrue LEFTBRACE $@3 ExprCaseClauseList RIGHTBRACE . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 393


State 385

  120 ExprCaseClauseList: ExprCaseClauseList ExprCaseClause .

    $default  reduce using rule 120 (ExprCaseClauseList)


State 386

  122 ExprCaseClause: ExprSwitchCase COLON . StatementList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    BREAK               shift, and go to state 235
    CONTINUE            shift, and go to state 236
    RETURN              shift, and go to state 237
    STRUCT              shift, and go to state 61
    IF                  shift, and go to state 238
    FOR                 shift, and go to state 239
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 240
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    GOTO                shift, and go to state 241
    FALLTHROUGH         shift, and go to state 242
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTBRACE           shift, and go to state 124
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 243

    $default  reduce using rule 52 (EmptyStmt)

    Block            go to state 244
    StatementList    go to state 394
    Statement        go to state 246
    Declaration      go to state 247
    LabeledStmt      go to state 248
    SimpleStmt       go to state 249
    EmptyStmt        go to state 250
    ExpressionStmt   go to state 251
    IncDecStmt       go to state 252
    Assignment       go to state 253
    ShortVarDecl     go to state 254
    VarDecl          go to state 28
    IdentifierList   go to state 255
    CompositeLit     go to state 107
    LiteralType      go to state 108
    Operand          go to state 109
    OperandName      go to state 110
    SliceType        go to state 71
    ReturnStmt       go to state 256
    BreakStmt        go to state 257
    ContinueStmt     go to state 258
    GotoStmt         go to state 259
    SwitchStmt       go to state 260
    ExprSwitchStmt   go to state 261
    FallthroughStmt  go to state 262
    IfStmt           go to state 263
    ForStmt          go to state 264
    Expression       go to state 265
    UnaryExpr        go to state 112
    PrimaryExpr      go to state 113
    MakeExpr         go to state 114
    ExpressionList   go to state 266
    TypeDecl         go to state 29
    MapType          go to state 72
    StructType       go to state 73
    PointerType      go to state 74
    ArrayType        go to state 75
    Literal          go to state 115
    BasicLit         go to state 116
    String           go to state 117


State 387

  119 ExprSwitchStmt: SWITCH OpenBlock Expression LEFTBRACE $@5 ExprCaseClauseList RIGHTBRACE . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 395


State 388

  132 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE Block . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 396


State 389

  131 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE IfStmt . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 397


State 390

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt . Block forMarkerEnd CloseBlock

    LEFTBRACE  shift, and go to state 124

    Block  go to state 398


State 391

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt . Block forMarkerEnd CloseBlock

    LEFTBRACE  shift, and go to state 124

    Block  go to state 399


State 392

  117 ExprSwitchStmt: SWITCH OpenBlock SimpleStmt SCOLON LEFTBRACE $@4 ExprCaseClauseList RIGHTBRACE . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 400


State 393

  115 ExprSwitchStmt: SWITCH OpenBlock FakeTrue LEFTBRACE $@3 ExprCaseClauseList RIGHTBRACE CloseBlock .

    $default  reduce using rule 115 (ExprSwitchStmt)


State 394

   24 StatementList: StatementList . Statement SCOLON
  122 ExprCaseClause: ExprSwitchCase COLON StatementList .

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    BREAK               shift, and go to state 235
    CONTINUE            shift, and go to state 236
    RETURN              shift, and go to state 237
    STRUCT              shift, and go to state 61
    IF                  shift, and go to state 238
    FOR                 shift, and go to state 239
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 240
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    GOTO                shift, and go to state 241
    FALLTHROUGH         shift, and go to state 242
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTBRACE           shift, and go to state 124
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 243

    SCOLON    reduce using rule 52 (EmptyStmt)
    $default  reduce using rule 122 (ExprCaseClause)

    Block            go to state 244
    Statement        go to state 297
    Declaration      go to state 247
    LabeledStmt      go to state 248
    SimpleStmt       go to state 249
    EmptyStmt        go to state 250
    ExpressionStmt   go to state 251
    IncDecStmt       go to state 252
    Assignment       go to state 253
    ShortVarDecl     go to state 254
    VarDecl          go to state 28
    IdentifierList   go to state 255
    CompositeLit     go to state 107
    LiteralType      go to state 108
    Operand          go to state 109
    OperandName      go to state 110
    SliceType        go to state 71
    ReturnStmt       go to state 256
    BreakStmt        go to state 257
    ContinueStmt     go to state 258
    GotoStmt         go to state 259
    SwitchStmt       go to state 260
    ExprSwitchStmt   go to state 261
    FallthroughStmt  go to state 262
    IfStmt           go to state 263
    ForStmt          go to state 264
    Expression       go to state 265
    UnaryExpr        go to state 112
    PrimaryExpr      go to state 113
    MakeExpr         go to state 114
    ExpressionList   go to state 266
    TypeDecl         go to state 29
    MapType          go to state 72
    StructType       go to state 73
    PointerType      go to state 74
    ArrayType        go to state 75
    Literal          go to state 115
    BasicLit         go to state 116
    String           go to state 117


State 395

  119 ExprSwitchStmt: SWITCH OpenBlock Expression LEFTBRACE $@5 ExprCaseClauseList RIGHTBRACE CloseBlock .

    $default  reduce using rule 119 (ExprSwitchStmt)


State 396

  132 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE Block CloseBlock .

    $default  reduce using rule 132 (IfStmt)


State 397

  131 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE IfStmt CloseBlock .

    $default  reduce using rule 131 (IfStmt)


State 398

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block . forMarkerEnd CloseBlock

    $default  reduce using rule 138 (forMarkerEnd)

    forMarkerEnd  go to state 401


State 399

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block . forMarkerEnd CloseBlock

    $default  reduce using rule 138 (forMarkerEnd)

    forMarkerEnd  go to state 402


State 400

  117 ExprSwitchStmt: SWITCH OpenBlock SimpleStmt SCOLON LEFTBRACE $@4 ExprCaseClauseList RIGHTBRACE CloseBlock .

    $default  reduce using rule 117 (ExprSwitchStmt)


State 401

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 403


State 402

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 404


State 403

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock .

    $default  reduce using rule 134 (ForStmt)


State 404

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock .

    $default  reduce using rule 135 (ForStmt)
