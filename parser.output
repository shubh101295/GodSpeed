Terminals unused in grammar

    NULLPOINTER
    RANGE
    CONST
    EQ


State 110 conflicts: 1 shift/reduce
State 144 conflicts: 1 shift/reduce
State 145 conflicts: 1 shift/reduce, 1 reduce/reduce
State 242 conflicts: 1 reduce/reduce
State 315 conflicts: 1 reduce/reduce


Grammar

    0 $accept: SourceFile $end

    1 SourceFile: PackageClause SCOLON ImportDeclList TopLevelDeclList

    2 OpenBlock: %empty

    3 CloseBlock: %empty

    4 PackageClause: PACKAGE PackageName

    5 PackageName: IDENTIFIER

    6 ImportDeclList: ImportDeclList ImportDecl SCOLON
    7               | ImportDecl SCOLON

    8 ImportDecl: IMPORT LEFTPARAN ImportSpecList RIGHTPARAN
    9           | IMPORT LEFTPARAN RIGHTPARAN
   10           | IMPORT ImportSpec

   11 ImportSpecList: ImportSpecList ImportSpec SCOLON
   12               | ImportSpec SCOLON

   13 ImportSpec: PackageName ImportPath
   14           | DOT ImportPath
   15           | ImportPath

   16 ImportPath: String

   17 TopLevelDeclList: TopLevelDeclList TopLevelDecl SCOLON
   18                 | TopLevelDecl SCOLON

   19 TopLevelDecl: Declaration
   20             | FunctionDecl
   21             | MethodDecl

   22 Block: LEFTBRACE OpenBlock StatementList CloseBlock RIGHTBRACE

   23 Condition: Expression

   24 StatementList: StatementList Statement SCOLON
   25              | Statement SCOLON

   26 Statement: Declaration
   27          | LabeledStmt
   28          | SimpleStmt
   29          | ReturnStmt
   30          | BreakStmt
   31          | ContinueStmt
   32          | GotoStmt
   33          | SwitchStmt
   34          | FallthroughStmt
   35          | Block
   36          | IfStmt
   37          | ForStmt

   38 Declaration: TypeDecl
   39            | VarDecl

   40 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature FunctionBody CloseBlock
   41             | FUNC IDENTIFIER OpenBlock Signature CloseBlock

   42 MethodDecl: FUNC Receiver IDENTIFIER Signature
   43           | FUNC Receiver IDENTIFIER Signature FunctionBody

   44 LabeledStmt: IDENTIFIER COLON Statement

   45 SimpleStmt: EmptyStmt
   46           | ExpressionStmt
   47           | IncDecStmt
   48           | Assignment
   49           | ShortVarDecl

   50 EmptyStmt: %empty

   51 EmptyExpr: %empty

   52 ExpressionStmt: Expression

   53 IncDecStmt: Expression PLUSPLUS
   54           | Expression MINUSMINUS

   55 Assignment: ExpressionList ASSGN_OP ExpressionList

   56 ShortVarDecl: IdentifierList INFER_EQ ExpressionList

   57 VarDecl: VAR VarSpec
   58        | VAR LEFTPARAN VarSpecList RIGHTPARAN

   59 VarSpecList: VarSpecList VarSpec SCOLON
   60            | VarSpec SCOLON

   61 VarSpec: IdentifierList Type
   62        | IdentifierList Type ASSGN_OP ExpressionList
   63        | IdentifierList ASSGN_OP ExpressionList

   64 FunctionBody: Block

   65 Signature: Parameters
   66          | Parameters Result

   67 Result: LEFTPARAN TypeList RIGHTPARAN
   68       | Type

   69 TypeList: TypeList COMMA Type
   70         | Type

   71 Parameters: LEFTPARAN RIGHTPARAN
   72           | LEFTPARAN ParameterList RIGHTPARAN
   73           | LEFTPARAN ParameterList COMMA RIGHTPARAN

   74 ParameterList: ParameterDecl
   75              | ParameterList COMMA ParameterDecl

   76 ParameterDecl: IdentifierList Type

   77 IdentifierList: IdentifierList COMMA IDENTIFIER
   78               | IDENTIFIER

   79 Receiver: Parameters

   80 CompositeLit: LiteralType LiteralValue

   81 LiteralType: StructType
   82            | ArrayType
   83            | PointerType
   84            | SliceType
   85            | LEFTSQUARE ELIPSIS RIGHTSQUARE Operand
   86            | MapType

   87 Type: LiteralType
   88     | OperandName

   89 Operand: Literal
   90        | OperandName
   91        | LEFTPARAN Expression RIGHTPARAN

   92 OperandName: IDENTIFIER

   93 LiteralValue: LEFTBRACE RIGHTBRACE
   94             | LEFTBRACE ElementList RIGHTBRACE
   95             | LEFTBRACE ElementList COMMA RIGHTBRACE

   96 SliceType: LEFTSQUARE RIGHTSQUARE Type

   97 ElementList: KeyedElement
   98            | ElementList COMMA KeyedElement

   99 KeyedElement: Element
  100             | Key COLON Element

  101 Key: Expression
  102    | LiteralValue

  103 Element: Expression
  104        | LiteralValue

  105 ReturnStmt: RETURN
  106           | RETURN ExpressionList

  107 BreakStmt: BREAK
  108          | BREAK IDENTIFIER

  109 ContinueStmt: CONTINUE

  110 GotoStmt: GOTO IDENTIFIER

  111 SwitchStmt: ExprSwitchStmt

  112 $@1: %empty

  113 ExprSwitchStmt: SWITCH OpenBlock FakeTrue LEFTBRACE $@1 ExprCaseClauseList RIGHTBRACE CloseBlock

  114 $@2: %empty

  115 ExprSwitchStmt: SWITCH OpenBlock SimpleStmt SCOLON LEFTBRACE $@2 ExprCaseClauseList RIGHTBRACE CloseBlock

  116 $@3: %empty

  117 ExprSwitchStmt: SWITCH OpenBlock Expression LEFTBRACE $@3 ExprCaseClauseList RIGHTBRACE CloseBlock

  118 ExprCaseClauseList: ExprCaseClauseList ExprCaseClause
  119                   | ExprCaseClause

  120 ExprCaseClause: ExprSwitchCase COLON StatementList

  121 FakeTrue: %empty

  122 ExprSwitchCase: CASE ExpressionList
  123               | DEFAULT FakeTrue

  124 FallthroughStmt: FALLTHROUGH

  125 IfStmt: IF OpenBlock Expression Block CloseBlock
  126       | IF OpenBlock SimpleStmt SCOLON Expression Block CloseBlock
  127       | IF OpenBlock Expression Block ELSE IfStmt CloseBlock
  128       | IF OpenBlock Expression Block ELSE Block CloseBlock
  129       | IF OpenBlock SimpleStmt SCOLON Expression Block ELSE IfStmt CloseBlock
  130       | IF OpenBlock SimpleStmt SCOLON Expression Block ELSE Block CloseBlock

  131 ForStmt: FOR forMarker Block forMarkerEnd
  132        | FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  133        | FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  134        | FOR OpenBlock Condition forMarker Block forMarkerEnd CloseBlock

  135 forMarker: %empty

  136 forMarkerEnd: %empty

  137 Expression: Expression MUL Expression
  138           | Expression QUOT Expression
  139           | Expression MOD Expression
  140           | Expression SHL Expression
  141           | Expression SHR Expression
  142           | Expression AND Expression
  143           | Expression ANDNOT Expression
  144           | Expression ADD Expression
  145           | Expression SUB Expression
  146           | Expression OR Expression
  147           | Expression XOR Expression
  148           | Expression LOGAND Expression
  149           | Expression LOGOR Expression
  150           | Expression ISEQ Expression
  151           | Expression NEQ Expression
  152           | Expression GRTEQ Expression
  153           | Expression GRT Expression
  154           | Expression LESSEQ Expression
  155           | Expression LESS Expression
  156           | UnaryExpr

  157 UnaryExpr: MUL PrimaryExpr
  158          | AND PrimaryExpr
  159          | ADD PrimaryExpr
  160          | SUB PrimaryExpr
  161          | NOT PrimaryExpr
  162          | PrimaryExpr

  163 PrimaryExpr: Operand
  164            | MakeExpr
  165            | PrimaryExpr Selector
  166            | PrimaryExpr Index
  167            | PrimaryExpr Slice
  168            | PrimaryExpr Arguments
  169            | OperandName StructLiteral
  170            | PrimaryExpr TypeAssertion

  171 StructLiteral: LEFTBRACE KeyValueList RIGHTBRACE

  172 KeyValueList: Expression COLON Expression
  173             | Expression COLON Expression COMMA KeyValueList

  174 Selector: DOT IDENTIFIER

  175 Index: LEFTSQUARE Expression RIGHTSQUARE

  176 Slice: LEFTSQUARE COLON Expression RIGHTSQUARE
  177      | LEFTSQUARE COLON RIGHTSQUARE
  178      | LEFTSQUARE Expression COLON RIGHTSQUARE
  179      | LEFTSQUARE Expression COLON Expression RIGHTSQUARE
  180      | LEFTSQUARE COLON Expression COLON Expression RIGHTSQUARE
  181      | LEFTSQUARE Expression COLON Expression COLON Expression RIGHTSQUARE

  182 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN
  183         | MAKE LEFTPARAN Type COMMA Expression RIGHTPARAN
  184         | MAKE LEFTPARAN Type RIGHTPARAN
  185         | NEW LEFTPARAN Type RIGHTPARAN

  186 TypeAssertion: DOT LEFTPARAN Type RIGHTPARAN

  187 Arguments: LEFTPARAN RIGHTPARAN
  188          | LEFTPARAN ExpressionList RIGHTPARAN
  189          | LEFTPARAN ExpressionList ELIPSIS RIGHTPARAN

  190 ExpressionList: Expression
  191               | ExpressionList COMMA Expression

  192 TypeDecl: TYPE TypeSpec

  193 TypeSpec: TypeDef

  194 TypeDef: IDENTIFIER Type

  195 MapType: MAP LEFTSQUARE Type RIGHTSQUARE Type

  196 StructType: STRUCT LEFTBRACE FieldDeclList RIGHTBRACE
  197           | STRUCT LEFTBRACE RIGHTBRACE

  198 FieldDeclList: FieldDecl SCOLON
  199              | FieldDeclList FieldDecl SCOLON

  200 FieldDecl: IdentifierList Type String
  201          | IdentifierList Type

  202 PointerType: MUL BaseType

  203 BaseType: Type

  204 ArrayType: LEFTSQUARE Expression RIGHTSQUARE Type

  205 Literal: BasicLit
  206        | CompositeLit

  207 BasicLit: INTEGER_VAL
  208         | FLOAT_VAL
  209         | BYTE_VAL
  210         | String
  211         | TRUE
  212         | FALSE

  213 String: RAW_STRING
  214       | INTERPRETED_STRING


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER_VAL <sval> (258) 207
    FLOAT_VAL <sval> (259) 208
    TRUE <sval> (260) 211
    FALSE <sval> (261) 212
    NULLPOINTER <sval> (262)
    BREAK <sval> (263) 107 108
    CONTINUE <sval> (264) 109
    RETURN <sval> (265) 105 106
    SCOLON <sval> (266) 1 6 7 11 12 17 18 24 25 59 60 115 126 129 130 132 133 198 199
    FUNC <sval> (267) 40 41 42 43
    STRUCT <sval> (268) 196 197
    ELSE <sval> (269) 127 128 129 130
    PACKAGE <sval> (270) 4
    IF <sval> (271) 125 126 127 128 129 130
    FOR <sval> (272) 131 132 133 134
    RANGE <sval> (273)
    IMPORT <sval> (274) 8 9 10
    VAR <sval> (275) 57 58
    SWITCH <sval> (276) 113 115 117
    CASE <sval> (277) 122
    NEW <sval> (278) 185
    CONST <sval> (279)
    MAP <sval> (280) 195
    DEFAULT <sval> (281) 123
    MAKE <sval> (282) 182 183 184
    GOTO <sval> (283) 110
    FALLTHROUGH <sval> (284) 124
    TYPE <sval> (285) 192
    PLUSPLUS <sval> (286) 53
    MINUSMINUS <sval> (287) 54
    ANDNOT <sval> (288) 143
    ELIPSIS <sval> (289) 85 189
    ADD <sval> (290) 144 159
    SUB <sval> (291) 145 160
    NOT <sval> (292) 161
    XOR <sval> (293) 147
    MUL <sval> (294) 137 157 202
    AND <sval> (295) 142 158
    OR <sval> (296) 146
    LOGOR <sval> (297) 149
    LOGAND <sval> (298) 148
    ISEQ <sval> (299) 150
    NEQ <sval> (300) 151
    LESSEQ <sval> (301) 154
    GRTEQ <sval> (302) 152
    GRT <sval> (303) 153
    LESS <sval> (304) 155
    MOD <sval> (305) 139
    QUOT <sval> (306) 138
    SHL <sval> (307) 140
    SHR <sval> (308) 141
    EQ <sval> (309)
    INFER_EQ <sval> (310) 56
    RIGHTPARAN <sval> (311) 8 9 58 67 71 72 73 91 182 183 184 185 186 187 188 189
    RIGHTBRACE <sval> (312) 22 93 94 95 113 115 117 171 196 197
    RIGHTSQUARE <sval> (313) 85 96 175 176 177 178 179 180 181 195 204
    LEFTPARAN <sval> (314) 8 9 58 67 71 72 73 91 182 183 184 185 186 187 188 189
    LEFTBRACE <sval> (315) 22 93 94 95 113 115 117 171 196 197
    LEFTSQUARE <sval> (316) 85 96 175 176 177 178 179 180 181 195 204
    COLON <sval> (317) 44 100 120 172 173 176 177 178 179 180 181
    DOT <sval> (318) 14 174 186
    COMMA <sval> (319) 69 73 75 77 95 98 173 182 183 191
    RAW_STRING <sval> (320) 213
    INTERPRETED_STRING <sval> (321) 214
    BYTE_VAL <sval> (322) 209
    IDENTIFIER <sval> (323) 5 40 41 42 43 44 77 78 92 108 110 174 194
    ASSGN_OP <sval> (324) 55 62 63


Nonterminals, with rules where they appear

    $accept (70)
        on left: 0
    SourceFile <nt> (71)
        on left: 1
        on right: 0
    OpenBlock (72)
        on left: 2
        on right: 22 40 41 113 115 117 125 126 127 128 129 130 132 133 134
    CloseBlock (73)
        on left: 3
        on right: 22 40 41 113 115 117 125 126 127 128 129 130 132 133 134
    PackageClause <nt> (74)
        on left: 4
        on right: 1
    PackageName <nt> (75)
        on left: 5
        on right: 4 13
    ImportDeclList <nt> (76)
        on left: 6 7
        on right: 1 6
    ImportDecl <nt> (77)
        on left: 8 9 10
        on right: 6 7
    ImportSpecList <nt> (78)
        on left: 11 12
        on right: 8 11
    ImportSpec <nt> (79)
        on left: 13 14 15
        on right: 10 11 12
    ImportPath <nt> (80)
        on left: 16
        on right: 13 14 15
    TopLevelDeclList <nt> (81)
        on left: 17 18
        on right: 1 17
    TopLevelDecl <nt> (82)
        on left: 19 20 21
        on right: 17 18
    Block <nt> (83)
        on left: 22
        on right: 35 64 125 126 127 128 129 130 131 132 133 134
    Condition <nt> (84)
        on left: 23
        on right: 134
    StatementList <nt> (85)
        on left: 24 25
        on right: 22 24 120
    Statement <nt> (86)
        on left: 26 27 28 29 30 31 32 33 34 35 36 37
        on right: 24 25 44
    Declaration <nt> (87)
        on left: 38 39
        on right: 19 26
    FunctionDecl <nt> (88)
        on left: 40 41
        on right: 20
    MethodDecl <nt> (89)
        on left: 42 43
        on right: 21
    LabeledStmt <nt> (90)
        on left: 44
        on right: 27
    SimpleStmt <nt> (91)
        on left: 45 46 47 48 49
        on right: 28 115 126 129 130 132 133
    EmptyStmt <nt> (92)
        on left: 50
        on right: 45
    EmptyExpr <nt> (93)
        on left: 51
        on right: 132
    ExpressionStmt <nt> (94)
        on left: 52
        on right: 46 133
    IncDecStmt <nt> (95)
        on left: 53 54
        on right: 47
    Assignment <nt> (96)
        on left: 55
        on right: 48
    ShortVarDecl <nt> (97)
        on left: 56
        on right: 49
    VarDecl <nt> (98)
        on left: 57 58
        on right: 39
    VarSpecList <nt> (99)
        on left: 59 60
        on right: 58 59
    VarSpec <nt> (100)
        on left: 61 62 63
        on right: 57 59 60
    FunctionBody <nt> (101)
        on left: 64
        on right: 40 43
    Signature <nt> (102)
        on left: 65 66
        on right: 40 41 42 43
    Result <nt> (103)
        on left: 67 68
        on right: 66
    TypeList <nt> (104)
        on left: 69 70
        on right: 67 69
    Parameters <nt> (105)
        on left: 71 72 73
        on right: 65 66 79
    ParameterList <nt> (106)
        on left: 74 75
        on right: 72 73 75
    ParameterDecl <nt> (107)
        on left: 76
        on right: 74 75
    IdentifierList <nt> (108)
        on left: 77 78
        on right: 56 61 62 63 76 77 200 201
    Receiver <nt> (109)
        on left: 79
        on right: 42 43
    CompositeLit <nt> (110)
        on left: 80
        on right: 206
    LiteralType <nt> (111)
        on left: 81 82 83 84 85 86
        on right: 80 87
    Type <nt> (112)
        on left: 87 88
        on right: 61 62 68 69 70 76 96 182 183 184 185 186 194 195 200 201 203 204
    Operand <nt> (113)
        on left: 89 90 91
        on right: 85 163
    OperandName <nt> (114)
        on left: 92
        on right: 88 90 169
    LiteralValue <nt> (115)
        on left: 93 94 95
        on right: 80 102 104
    SliceType <nt> (116)
        on left: 96
        on right: 84
    ElementList <nt> (117)
        on left: 97 98
        on right: 94 95 98
    KeyedElement <nt> (118)
        on left: 99 100
        on right: 97 98
    Key <nt> (119)
        on left: 101 102
        on right: 100
    Element <nt> (120)
        on left: 103 104
        on right: 99 100
    ReturnStmt <nt> (121)
        on left: 105 106
        on right: 29
    BreakStmt <nt> (122)
        on left: 107 108
        on right: 30
    ContinueStmt <nt> (123)
        on left: 109
        on right: 31
    GotoStmt <nt> (124)
        on left: 110
        on right: 32
    SwitchStmt <nt> (125)
        on left: 111
        on right: 33
    ExprSwitchStmt <nt> (126)
        on left: 113 115 117
        on right: 111
    $@1 (127)
        on left: 112
        on right: 113
    $@2 (128)
        on left: 114
        on right: 115
    $@3 (129)
        on left: 116
        on right: 117
    ExprCaseClauseList <nt> (130)
        on left: 118 119
        on right: 113 115 117 118
    ExprCaseClause <nt> (131)
        on left: 120
        on right: 118 119
    FakeTrue <nt> (132)
        on left: 121
        on right: 113 123
    ExprSwitchCase <nt> (133)
        on left: 122 123
        on right: 120
    FallthroughStmt <nt> (134)
        on left: 124
        on right: 34
    IfStmt <nt> (135)
        on left: 125 126 127 128 129 130
        on right: 36 127 129
    ForStmt <nt> (136)
        on left: 131 132 133 134
        on right: 37
    forMarker <nt> (137)
        on left: 135
        on right: 131 132 133 134
    forMarkerEnd <nt> (138)
        on left: 136
        on right: 131 132 133 134
    Expression <nt> (139)
        on left: 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156
        on right: 23 52 53 54 91 101 103 117 125 126 127 128 129 130 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 172 173 175 176 178 179 180 181 182 183 190 191 204
    UnaryExpr <nt> (140)
        on left: 157 158 159 160 161 162
        on right: 156
    PrimaryExpr <nt> (141)
        on left: 163 164 165 166 167 168 169 170
        on right: 157 158 159 160 161 162 165 166 167 168 170
    StructLiteral <nt> (142)
        on left: 171
        on right: 169
    KeyValueList <nt> (143)
        on left: 172 173
        on right: 171 173
    Selector <nt> (144)
        on left: 174
        on right: 165
    Index <nt> (145)
        on left: 175
        on right: 166
    Slice <nt> (146)
        on left: 176 177 178 179 180 181
        on right: 167
    MakeExpr <nt> (147)
        on left: 182 183 184 185
        on right: 164
    TypeAssertion <nt> (148)
        on left: 186
        on right: 170
    Arguments <nt> (149)
        on left: 187 188 189
        on right: 168
    ExpressionList <nt> (150)
        on left: 190 191
        on right: 55 56 62 63 106 122 188 189 191
    TypeDecl <nt> (151)
        on left: 192
        on right: 38
    TypeSpec <nt> (152)
        on left: 193
        on right: 192
    TypeDef <nt> (153)
        on left: 194
        on right: 193
    MapType <nt> (154)
        on left: 195
        on right: 86
    StructType <nt> (155)
        on left: 196 197
        on right: 81
    FieldDeclList <nt> (156)
        on left: 198 199
        on right: 196 199
    FieldDecl <nt> (157)
        on left: 200 201
        on right: 198 199
    PointerType <nt> (158)
        on left: 202
        on right: 83
    BaseType <nt> (159)
        on left: 203
        on right: 202
    ArrayType <nt> (160)
        on left: 204
        on right: 82
    Literal <nt> (161)
        on left: 205 206
        on right: 89
    BasicLit <nt> (162)
        on left: 207 208 209 210 211 212
        on right: 205
    String <nt> (163)
        on left: 213 214
        on right: 16 200 210


State 0

    0 $accept: . SourceFile $end

    PACKAGE  shift, and go to state 1

    SourceFile     go to state 2
    PackageClause  go to state 3


State 1

    4 PackageClause: PACKAGE . PackageName

    IDENTIFIER  shift, and go to state 4

    PackageName  go to state 5


State 2

    0 $accept: SourceFile . $end

    $end  shift, and go to state 6


State 3

    1 SourceFile: PackageClause . SCOLON ImportDeclList TopLevelDeclList

    SCOLON  shift, and go to state 7


State 4

    5 PackageName: IDENTIFIER .

    $default  reduce using rule 5 (PackageName)


State 5

    4 PackageClause: PACKAGE PackageName .

    $default  reduce using rule 4 (PackageClause)


State 6

    0 $accept: SourceFile $end .

    $default  accept


State 7

    1 SourceFile: PackageClause SCOLON . ImportDeclList TopLevelDeclList

    IMPORT  shift, and go to state 8

    ImportDeclList  go to state 9
    ImportDecl      go to state 10


State 8

    8 ImportDecl: IMPORT . LEFTPARAN ImportSpecList RIGHTPARAN
    9           | IMPORT . LEFTPARAN RIGHTPARAN
   10           | IMPORT . ImportSpec

    LEFTPARAN           shift, and go to state 11
    DOT                 shift, and go to state 12
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    IDENTIFIER          shift, and go to state 4

    PackageName  go to state 15
    ImportSpec   go to state 16
    ImportPath   go to state 17
    String       go to state 18


State 9

    1 SourceFile: PackageClause SCOLON ImportDeclList . TopLevelDeclList
    6 ImportDeclList: ImportDeclList . ImportDecl SCOLON

    FUNC    shift, and go to state 19
    IMPORT  shift, and go to state 8
    VAR     shift, and go to state 20
    TYPE    shift, and go to state 21

    ImportDecl        go to state 22
    TopLevelDeclList  go to state 23
    TopLevelDecl      go to state 24
    Declaration       go to state 25
    FunctionDecl      go to state 26
    MethodDecl        go to state 27
    VarDecl           go to state 28
    TypeDecl          go to state 29


State 10

    7 ImportDeclList: ImportDecl . SCOLON

    SCOLON  shift, and go to state 30


State 11

    8 ImportDecl: IMPORT LEFTPARAN . ImportSpecList RIGHTPARAN
    9           | IMPORT LEFTPARAN . RIGHTPARAN

    RIGHTPARAN          shift, and go to state 31
    DOT                 shift, and go to state 12
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 15
    ImportSpecList  go to state 32
    ImportSpec      go to state 33
    ImportPath      go to state 17
    String          go to state 18


State 12

   14 ImportSpec: DOT . ImportPath

    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14

    ImportPath  go to state 34
    String      go to state 18


State 13

  213 String: RAW_STRING .

    $default  reduce using rule 213 (String)


State 14

  214 String: INTERPRETED_STRING .

    $default  reduce using rule 214 (String)


State 15

   13 ImportSpec: PackageName . ImportPath

    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14

    ImportPath  go to state 35
    String      go to state 18


State 16

   10 ImportDecl: IMPORT ImportSpec .

    $default  reduce using rule 10 (ImportDecl)


State 17

   15 ImportSpec: ImportPath .

    $default  reduce using rule 15 (ImportSpec)


State 18

   16 ImportPath: String .

    $default  reduce using rule 16 (ImportPath)


State 19

   40 FunctionDecl: FUNC . IDENTIFIER OpenBlock Signature FunctionBody CloseBlock
   41             | FUNC . IDENTIFIER OpenBlock Signature CloseBlock
   42 MethodDecl: FUNC . Receiver IDENTIFIER Signature
   43           | FUNC . Receiver IDENTIFIER Signature FunctionBody

    LEFTPARAN   shift, and go to state 36
    IDENTIFIER  shift, and go to state 37

    Parameters  go to state 38
    Receiver    go to state 39


State 20

   57 VarDecl: VAR . VarSpec
   58        | VAR . LEFTPARAN VarSpecList RIGHTPARAN

    LEFTPARAN   shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    VarSpec         go to state 42
    IdentifierList  go to state 43


State 21

  192 TypeDecl: TYPE . TypeSpec

    IDENTIFIER  shift, and go to state 44

    TypeSpec  go to state 45
    TypeDef   go to state 46


State 22

    6 ImportDeclList: ImportDeclList ImportDecl . SCOLON

    SCOLON  shift, and go to state 47


State 23

    1 SourceFile: PackageClause SCOLON ImportDeclList TopLevelDeclList .
   17 TopLevelDeclList: TopLevelDeclList . TopLevelDecl SCOLON

    FUNC  shift, and go to state 19
    VAR   shift, and go to state 20
    TYPE  shift, and go to state 21

    $default  reduce using rule 1 (SourceFile)

    TopLevelDecl  go to state 48
    Declaration   go to state 25
    FunctionDecl  go to state 26
    MethodDecl    go to state 27
    VarDecl       go to state 28
    TypeDecl      go to state 29


State 24

   18 TopLevelDeclList: TopLevelDecl . SCOLON

    SCOLON  shift, and go to state 49


State 25

   19 TopLevelDecl: Declaration .

    $default  reduce using rule 19 (TopLevelDecl)


State 26

   20 TopLevelDecl: FunctionDecl .

    $default  reduce using rule 20 (TopLevelDecl)


State 27

   21 TopLevelDecl: MethodDecl .

    $default  reduce using rule 21 (TopLevelDecl)


State 28

   39 Declaration: VarDecl .

    $default  reduce using rule 39 (Declaration)


State 29

   38 Declaration: TypeDecl .

    $default  reduce using rule 38 (Declaration)


State 30

    7 ImportDeclList: ImportDecl SCOLON .

    $default  reduce using rule 7 (ImportDeclList)


State 31

    9 ImportDecl: IMPORT LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 9 (ImportDecl)


State 32

    8 ImportDecl: IMPORT LEFTPARAN ImportSpecList . RIGHTPARAN
   11 ImportSpecList: ImportSpecList . ImportSpec SCOLON

    RIGHTPARAN          shift, and go to state 50
    DOT                 shift, and go to state 12
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    IDENTIFIER          shift, and go to state 4

    PackageName  go to state 15
    ImportSpec   go to state 51
    ImportPath   go to state 17
    String       go to state 18


State 33

   12 ImportSpecList: ImportSpec . SCOLON

    SCOLON  shift, and go to state 52


State 34

   14 ImportSpec: DOT ImportPath .

    $default  reduce using rule 14 (ImportSpec)


State 35

   13 ImportSpec: PackageName ImportPath .

    $default  reduce using rule 13 (ImportSpec)


State 36

   71 Parameters: LEFTPARAN . RIGHTPARAN
   72           | LEFTPARAN . ParameterList RIGHTPARAN
   73           | LEFTPARAN . ParameterList COMMA RIGHTPARAN

    RIGHTPARAN  shift, and go to state 53
    IDENTIFIER  shift, and go to state 41

    ParameterList   go to state 54
    ParameterDecl   go to state 55
    IdentifierList  go to state 56


State 37

   40 FunctionDecl: FUNC IDENTIFIER . OpenBlock Signature FunctionBody CloseBlock
   41             | FUNC IDENTIFIER . OpenBlock Signature CloseBlock

    $default  reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 57


State 38

   79 Receiver: Parameters .

    $default  reduce using rule 79 (Receiver)


State 39

   42 MethodDecl: FUNC Receiver . IDENTIFIER Signature
   43           | FUNC Receiver . IDENTIFIER Signature FunctionBody

    IDENTIFIER  shift, and go to state 58


State 40

   58 VarDecl: VAR LEFTPARAN . VarSpecList RIGHTPARAN

    IDENTIFIER  shift, and go to state 41

    VarSpecList     go to state 59
    VarSpec         go to state 60
    IdentifierList  go to state 43


State 41

   78 IdentifierList: IDENTIFIER .

    $default  reduce using rule 78 (IdentifierList)


State 42

   57 VarDecl: VAR VarSpec .

    $default  reduce using rule 57 (VarDecl)


State 43

   61 VarSpec: IdentifierList . Type
   62        | IdentifierList . Type ASSGN_OP ExpressionList
   63        | IdentifierList . ASSGN_OP ExpressionList
   77 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    COMMA       shift, and go to state 65
    IDENTIFIER  shift, and go to state 66
    ASSGN_OP    shift, and go to state 67

    LiteralType  go to state 68
    Type         go to state 69
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 44

  194 TypeDef: IDENTIFIER . Type

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 76
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 45

  192 TypeDecl: TYPE TypeSpec .

    $default  reduce using rule 192 (TypeDecl)


State 46

  193 TypeSpec: TypeDef .

    $default  reduce using rule 193 (TypeSpec)


State 47

    6 ImportDeclList: ImportDeclList ImportDecl SCOLON .

    $default  reduce using rule 6 (ImportDeclList)


State 48

   17 TopLevelDeclList: TopLevelDeclList TopLevelDecl . SCOLON

    SCOLON  shift, and go to state 77


State 49

   18 TopLevelDeclList: TopLevelDecl SCOLON .

    $default  reduce using rule 18 (TopLevelDeclList)


State 50

    8 ImportDecl: IMPORT LEFTPARAN ImportSpecList RIGHTPARAN .

    $default  reduce using rule 8 (ImportDecl)


State 51

   11 ImportSpecList: ImportSpecList ImportSpec . SCOLON

    SCOLON  shift, and go to state 78


State 52

   12 ImportSpecList: ImportSpec SCOLON .

    $default  reduce using rule 12 (ImportSpecList)


State 53

   71 Parameters: LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 71 (Parameters)


State 54

   72 Parameters: LEFTPARAN ParameterList . RIGHTPARAN
   73           | LEFTPARAN ParameterList . COMMA RIGHTPARAN
   75 ParameterList: ParameterList . COMMA ParameterDecl

    RIGHTPARAN  shift, and go to state 79
    COMMA       shift, and go to state 80


State 55

   74 ParameterList: ParameterDecl .

    $default  reduce using rule 74 (ParameterList)


State 56

   76 ParameterDecl: IdentifierList . Type
   77 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    COMMA       shift, and go to state 65
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 81
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 57

   40 FunctionDecl: FUNC IDENTIFIER OpenBlock . Signature FunctionBody CloseBlock
   41             | FUNC IDENTIFIER OpenBlock . Signature CloseBlock

    LEFTPARAN  shift, and go to state 36

    Signature   go to state 82
    Parameters  go to state 83


State 58

   42 MethodDecl: FUNC Receiver IDENTIFIER . Signature
   43           | FUNC Receiver IDENTIFIER . Signature FunctionBody

    LEFTPARAN  shift, and go to state 36

    Signature   go to state 84
    Parameters  go to state 83


State 59

   58 VarDecl: VAR LEFTPARAN VarSpecList . RIGHTPARAN
   59 VarSpecList: VarSpecList . VarSpec SCOLON

    RIGHTPARAN  shift, and go to state 85
    IDENTIFIER  shift, and go to state 41

    VarSpec         go to state 86
    IdentifierList  go to state 43


State 60

   60 VarSpecList: VarSpec . SCOLON

    SCOLON  shift, and go to state 87


State 61

  196 StructType: STRUCT . LEFTBRACE FieldDeclList RIGHTBRACE
  197           | STRUCT . LEFTBRACE RIGHTBRACE

    LEFTBRACE  shift, and go to state 88


State 62

  195 MapType: MAP . LEFTSQUARE Type RIGHTSQUARE Type

    LEFTSQUARE  shift, and go to state 89


State 63

  202 PointerType: MUL . BaseType

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 90
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    BaseType     go to state 91
    ArrayType    go to state 75


State 64

   85 LiteralType: LEFTSQUARE . ELIPSIS RIGHTSQUARE Operand
   96 SliceType: LEFTSQUARE . RIGHTSQUARE Type
  204 ArrayType: LEFTSQUARE . Expression RIGHTSQUARE Type

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ELIPSIS             shift, and go to state 98
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    RIGHTSQUARE         shift, and go to state 104
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 111
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 65

   77 IdentifierList: IdentifierList COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 118


State 66

   92 OperandName: IDENTIFIER .

    $default  reduce using rule 92 (OperandName)


State 67

   63 VarSpec: IdentifierList ASSGN_OP . ExpressionList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 119
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 120
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 68

   87 Type: LiteralType .

    $default  reduce using rule 87 (Type)


State 69

   61 VarSpec: IdentifierList Type .
   62        | IdentifierList Type . ASSGN_OP ExpressionList

    ASSGN_OP  shift, and go to state 121

    $default  reduce using rule 61 (VarSpec)


State 70

   88 Type: OperandName .

    $default  reduce using rule 88 (Type)


State 71

   84 LiteralType: SliceType .

    $default  reduce using rule 84 (LiteralType)


State 72

   86 LiteralType: MapType .

    $default  reduce using rule 86 (LiteralType)


State 73

   81 LiteralType: StructType .

    $default  reduce using rule 81 (LiteralType)


State 74

   83 LiteralType: PointerType .

    $default  reduce using rule 83 (LiteralType)


State 75

   82 LiteralType: ArrayType .

    $default  reduce using rule 82 (LiteralType)


State 76

  194 TypeDef: IDENTIFIER Type .

    $default  reduce using rule 194 (TypeDef)


State 77

   17 TopLevelDeclList: TopLevelDeclList TopLevelDecl SCOLON .

    $default  reduce using rule 17 (TopLevelDeclList)


State 78

   11 ImportSpecList: ImportSpecList ImportSpec SCOLON .

    $default  reduce using rule 11 (ImportSpecList)


State 79

   72 Parameters: LEFTPARAN ParameterList RIGHTPARAN .

    $default  reduce using rule 72 (Parameters)


State 80

   73 Parameters: LEFTPARAN ParameterList COMMA . RIGHTPARAN
   75 ParameterList: ParameterList COMMA . ParameterDecl

    RIGHTPARAN  shift, and go to state 122
    IDENTIFIER  shift, and go to state 41

    ParameterDecl   go to state 123
    IdentifierList  go to state 56


State 81

   76 ParameterDecl: IdentifierList Type .

    $default  reduce using rule 76 (ParameterDecl)


State 82

   40 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature . FunctionBody CloseBlock
   41             | FUNC IDENTIFIER OpenBlock Signature . CloseBlock

    LEFTBRACE  shift, and go to state 124

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock    go to state 125
    Block         go to state 126
    FunctionBody  go to state 127


State 83

   65 Signature: Parameters .
   66          | Parameters . Result

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTPARAN   shift, and go to state 128
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    $default  reduce using rule 65 (Signature)

    Result       go to state 129
    LiteralType  go to state 68
    Type         go to state 130
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 84

   42 MethodDecl: FUNC Receiver IDENTIFIER Signature .
   43           | FUNC Receiver IDENTIFIER Signature . FunctionBody

    LEFTBRACE  shift, and go to state 124

    $default  reduce using rule 42 (MethodDecl)

    Block         go to state 126
    FunctionBody  go to state 131


State 85

   58 VarDecl: VAR LEFTPARAN VarSpecList RIGHTPARAN .

    $default  reduce using rule 58 (VarDecl)


State 86

   59 VarSpecList: VarSpecList VarSpec . SCOLON

    SCOLON  shift, and go to state 132


State 87

   60 VarSpecList: VarSpec SCOLON .

    $default  reduce using rule 60 (VarSpecList)


State 88

  196 StructType: STRUCT LEFTBRACE . FieldDeclList RIGHTBRACE
  197           | STRUCT LEFTBRACE . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 133
    IDENTIFIER  shift, and go to state 41

    IdentifierList  go to state 134
    FieldDeclList   go to state 135
    FieldDecl       go to state 136


State 89

  195 MapType: MAP LEFTSQUARE . Type RIGHTSQUARE Type

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 137
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 90

  203 BaseType: Type .

    $default  reduce using rule 203 (BaseType)


State 91

  202 PointerType: MUL BaseType .

    $default  reduce using rule 202 (PointerType)


State 92

  207 BasicLit: INTEGER_VAL .

    $default  reduce using rule 207 (BasicLit)


State 93

  208 BasicLit: FLOAT_VAL .

    $default  reduce using rule 208 (BasicLit)


State 94

  211 BasicLit: TRUE .

    $default  reduce using rule 211 (BasicLit)


State 95

  212 BasicLit: FALSE .

    $default  reduce using rule 212 (BasicLit)


State 96

  185 MakeExpr: NEW . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN  shift, and go to state 138


State 97

  182 MakeExpr: MAKE . LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN
  183         | MAKE . LEFTPARAN Type COMMA Expression RIGHTPARAN
  184         | MAKE . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN  shift, and go to state 139


State 98

   85 LiteralType: LEFTSQUARE ELIPSIS . RIGHTSQUARE Operand

    RIGHTSQUARE  shift, and go to state 140


State 99

  159 UnaryExpr: ADD . PrimaryExpr

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    MUL                 shift, and go to state 63
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    PrimaryExpr   go to state 141
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 100

  160 UnaryExpr: SUB . PrimaryExpr

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    MUL                 shift, and go to state 63
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    PrimaryExpr   go to state 142
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 101

  161 UnaryExpr: NOT . PrimaryExpr

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    MUL                 shift, and go to state 63
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    PrimaryExpr   go to state 143
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 102

  157 UnaryExpr: MUL . PrimaryExpr
  202 PointerType: MUL . BaseType

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    MUL                 shift, and go to state 63
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 144
    Type          go to state 90
    Operand       go to state 109
    OperandName   go to state 145
    SliceType     go to state 71
    PrimaryExpr   go to state 146
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    BaseType      go to state 91
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 103

  158 UnaryExpr: AND . PrimaryExpr

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    MUL                 shift, and go to state 63
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    PrimaryExpr   go to state 147
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 104

   96 SliceType: LEFTSQUARE RIGHTSQUARE . Type

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 148
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 105

   91 Operand: LEFTPARAN . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 149
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 106

  209 BasicLit: BYTE_VAL .

    $default  reduce using rule 209 (BasicLit)


State 107

  206 Literal: CompositeLit .

    $default  reduce using rule 206 (Literal)


State 108

   80 CompositeLit: LiteralType . LiteralValue

    LEFTBRACE  shift, and go to state 150

    LiteralValue  go to state 151


State 109

  163 PrimaryExpr: Operand .

    $default  reduce using rule 163 (PrimaryExpr)


State 110

   90 Operand: OperandName .
  169 PrimaryExpr: OperandName . StructLiteral

    LEFTBRACE  shift, and go to state 152

    LEFTBRACE  [reduce using rule 90 (Operand)]
    $default   reduce using rule 90 (Operand)

    StructLiteral  go to state 153


State 111

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression
  204 ArrayType: LEFTSQUARE Expression . RIGHTSQUARE Type

    ANDNOT       shift, and go to state 154
    ADD          shift, and go to state 155
    SUB          shift, and go to state 156
    XOR          shift, and go to state 157
    MUL          shift, and go to state 158
    AND          shift, and go to state 159
    OR           shift, and go to state 160
    LOGOR        shift, and go to state 161
    LOGAND       shift, and go to state 162
    ISEQ         shift, and go to state 163
    NEQ          shift, and go to state 164
    LESSEQ       shift, and go to state 165
    GRTEQ        shift, and go to state 166
    GRT          shift, and go to state 167
    LESS         shift, and go to state 168
    MOD          shift, and go to state 169
    QUOT         shift, and go to state 170
    SHL          shift, and go to state 171
    SHR          shift, and go to state 172
    RIGHTSQUARE  shift, and go to state 173


State 112

  156 Expression: UnaryExpr .

    $default  reduce using rule 156 (Expression)


State 113

  162 UnaryExpr: PrimaryExpr .
  165 PrimaryExpr: PrimaryExpr . Selector
  166            | PrimaryExpr . Index
  167            | PrimaryExpr . Slice
  168            | PrimaryExpr . Arguments
  170            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 174
    LEFTSQUARE  shift, and go to state 175
    DOT         shift, and go to state 176

    $default  reduce using rule 162 (UnaryExpr)

    Selector       go to state 177
    Index          go to state 178
    Slice          go to state 179
    TypeAssertion  go to state 180
    Arguments      go to state 181


State 114

  164 PrimaryExpr: MakeExpr .

    $default  reduce using rule 164 (PrimaryExpr)


State 115

   89 Operand: Literal .

    $default  reduce using rule 89 (Operand)


State 116

  205 Literal: BasicLit .

    $default  reduce using rule 205 (Literal)


State 117

  210 BasicLit: String .

    $default  reduce using rule 210 (BasicLit)


State 118

   77 IdentifierList: IdentifierList COMMA IDENTIFIER .

    $default  reduce using rule 77 (IdentifierList)


State 119

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression
  190 ExpressionList: Expression .

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    LOGOR   shift, and go to state 161
    LOGAND  shift, and go to state 162
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 190 (ExpressionList)


State 120

   63 VarSpec: IdentifierList ASSGN_OP ExpressionList .
  191 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 182

    $default  reduce using rule 63 (VarSpec)


State 121

   62 VarSpec: IdentifierList Type ASSGN_OP . ExpressionList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 119
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 183
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 122

   73 Parameters: LEFTPARAN ParameterList COMMA RIGHTPARAN .

    $default  reduce using rule 73 (Parameters)


State 123

   75 ParameterList: ParameterList COMMA ParameterDecl .

    $default  reduce using rule 75 (ParameterList)


State 124

   22 Block: LEFTBRACE . OpenBlock StatementList CloseBlock RIGHTBRACE

    $default  reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 184


State 125

   41 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature CloseBlock .

    $default  reduce using rule 41 (FunctionDecl)


State 126

   64 FunctionBody: Block .

    $default  reduce using rule 64 (FunctionBody)


State 127

   40 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature FunctionBody . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 185


State 128

   67 Result: LEFTPARAN . TypeList RIGHTPARAN

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    TypeList     go to state 186
    LiteralType  go to state 68
    Type         go to state 187
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 129

   66 Signature: Parameters Result .

    $default  reduce using rule 66 (Signature)


State 130

   68 Result: Type .

    $default  reduce using rule 68 (Result)


State 131

   43 MethodDecl: FUNC Receiver IDENTIFIER Signature FunctionBody .

    $default  reduce using rule 43 (MethodDecl)


State 132

   59 VarSpecList: VarSpecList VarSpec SCOLON .

    $default  reduce using rule 59 (VarSpecList)


State 133

  197 StructType: STRUCT LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 197 (StructType)


State 134

   77 IdentifierList: IdentifierList . COMMA IDENTIFIER
  200 FieldDecl: IdentifierList . Type String
  201          | IdentifierList . Type

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    COMMA       shift, and go to state 65
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 188
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 135

  196 StructType: STRUCT LEFTBRACE FieldDeclList . RIGHTBRACE
  199 FieldDeclList: FieldDeclList . FieldDecl SCOLON

    RIGHTBRACE  shift, and go to state 189
    IDENTIFIER  shift, and go to state 41

    IdentifierList  go to state 134
    FieldDecl       go to state 190


State 136

  198 FieldDeclList: FieldDecl . SCOLON

    SCOLON  shift, and go to state 191


State 137

  195 MapType: MAP LEFTSQUARE Type . RIGHTSQUARE Type

    RIGHTSQUARE  shift, and go to state 192


State 138

  185 MakeExpr: NEW LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 193
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 139

  182 MakeExpr: MAKE LEFTPARAN . Type COMMA Expression COMMA Expression RIGHTPARAN
  183         | MAKE LEFTPARAN . Type COMMA Expression RIGHTPARAN
  184         | MAKE LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 194
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 140

   85 LiteralType: LEFTSQUARE ELIPSIS RIGHTSQUARE . Operand

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    MAP                 shift, and go to state 62
    MUL                 shift, and go to state 63
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 195
    OperandName   go to state 196
    SliceType     go to state 71
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 141

  159 UnaryExpr: ADD PrimaryExpr .
  165 PrimaryExpr: PrimaryExpr . Selector
  166            | PrimaryExpr . Index
  167            | PrimaryExpr . Slice
  168            | PrimaryExpr . Arguments
  170            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 174
    LEFTSQUARE  shift, and go to state 175
    DOT         shift, and go to state 176

    $default  reduce using rule 159 (UnaryExpr)

    Selector       go to state 177
    Index          go to state 178
    Slice          go to state 179
    TypeAssertion  go to state 180
    Arguments      go to state 181


State 142

  160 UnaryExpr: SUB PrimaryExpr .
  165 PrimaryExpr: PrimaryExpr . Selector
  166            | PrimaryExpr . Index
  167            | PrimaryExpr . Slice
  168            | PrimaryExpr . Arguments
  170            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 174
    LEFTSQUARE  shift, and go to state 175
    DOT         shift, and go to state 176

    $default  reduce using rule 160 (UnaryExpr)

    Selector       go to state 177
    Index          go to state 178
    Slice          go to state 179
    TypeAssertion  go to state 180
    Arguments      go to state 181


State 143

  161 UnaryExpr: NOT PrimaryExpr .
  165 PrimaryExpr: PrimaryExpr . Selector
  166            | PrimaryExpr . Index
  167            | PrimaryExpr . Slice
  168            | PrimaryExpr . Arguments
  170            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 174
    LEFTSQUARE  shift, and go to state 175
    DOT         shift, and go to state 176

    $default  reduce using rule 161 (UnaryExpr)

    Selector       go to state 177
    Index          go to state 178
    Slice          go to state 179
    TypeAssertion  go to state 180
    Arguments      go to state 181


State 144

   80 CompositeLit: LiteralType . LiteralValue
   87 Type: LiteralType .

    LEFTBRACE  shift, and go to state 150

    LEFTBRACE  [reduce using rule 87 (Type)]

    LiteralValue  go to state 151


State 145

   88 Type: OperandName .
   90 Operand: OperandName .
  169 PrimaryExpr: OperandName . StructLiteral

    LEFTBRACE  shift, and go to state 152

    LEFTBRACE  [reduce using rule 88 (Type)]
    LEFTBRACE  [reduce using rule 90 (Operand)]
    $default   reduce using rule 90 (Operand)

    StructLiteral  go to state 153


State 146

  157 UnaryExpr: MUL PrimaryExpr .
  165 PrimaryExpr: PrimaryExpr . Selector
  166            | PrimaryExpr . Index
  167            | PrimaryExpr . Slice
  168            | PrimaryExpr . Arguments
  170            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 174
    LEFTSQUARE  shift, and go to state 175
    DOT         shift, and go to state 176

    $default  reduce using rule 157 (UnaryExpr)

    Selector       go to state 177
    Index          go to state 178
    Slice          go to state 179
    TypeAssertion  go to state 180
    Arguments      go to state 181


State 147

  158 UnaryExpr: AND PrimaryExpr .
  165 PrimaryExpr: PrimaryExpr . Selector
  166            | PrimaryExpr . Index
  167            | PrimaryExpr . Slice
  168            | PrimaryExpr . Arguments
  170            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 174
    LEFTSQUARE  shift, and go to state 175
    DOT         shift, and go to state 176

    $default  reduce using rule 158 (UnaryExpr)

    Selector       go to state 177
    Index          go to state 178
    Slice          go to state 179
    TypeAssertion  go to state 180
    Arguments      go to state 181


State 148

   96 SliceType: LEFTSQUARE RIGHTSQUARE Type .

    $default  reduce using rule 96 (SliceType)


State 149

   91 Operand: LEFTPARAN Expression . RIGHTPARAN
  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    ANDNOT      shift, and go to state 154
    ADD         shift, and go to state 155
    SUB         shift, and go to state 156
    XOR         shift, and go to state 157
    MUL         shift, and go to state 158
    AND         shift, and go to state 159
    OR          shift, and go to state 160
    LOGOR       shift, and go to state 161
    LOGAND      shift, and go to state 162
    ISEQ        shift, and go to state 163
    NEQ         shift, and go to state 164
    LESSEQ      shift, and go to state 165
    GRTEQ       shift, and go to state 166
    GRT         shift, and go to state 167
    LESS        shift, and go to state 168
    MOD         shift, and go to state 169
    QUOT        shift, and go to state 170
    SHL         shift, and go to state 171
    SHR         shift, and go to state 172
    RIGHTPARAN  shift, and go to state 197


State 150

   93 LiteralValue: LEFTBRACE . RIGHTBRACE
   94             | LEFTBRACE . ElementList RIGHTBRACE
   95             | LEFTBRACE . ElementList COMMA RIGHTBRACE

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    RIGHTBRACE          shift, and go to state 198
    LEFTPARAN           shift, and go to state 105
    LEFTBRACE           shift, and go to state 150
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    LiteralValue  go to state 199
    SliceType     go to state 71
    ElementList   go to state 200
    KeyedElement  go to state 201
    Key           go to state 202
    Element       go to state 203
    Expression    go to state 204
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 151

   80 CompositeLit: LiteralType LiteralValue .

    $default  reduce using rule 80 (CompositeLit)


State 152

  171 StructLiteral: LEFTBRACE . KeyValueList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 205
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    KeyValueList  go to state 206
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 153

  169 PrimaryExpr: OperandName StructLiteral .

    $default  reduce using rule 169 (PrimaryExpr)


State 154

  143 Expression: Expression ANDNOT . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 207
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 155

  144 Expression: Expression ADD . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 208
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 156

  145 Expression: Expression SUB . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 209
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 157

  147 Expression: Expression XOR . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 210
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 158

  137 Expression: Expression MUL . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 211
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 159

  142 Expression: Expression AND . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 212
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 160

  146 Expression: Expression OR . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 213
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 161

  149 Expression: Expression LOGOR . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 214
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 162

  148 Expression: Expression LOGAND . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 215
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 163

  150 Expression: Expression ISEQ . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 216
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 164

  151 Expression: Expression NEQ . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 217
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 165

  154 Expression: Expression LESSEQ . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 218
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 166

  152 Expression: Expression GRTEQ . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 219
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 167

  153 Expression: Expression GRT . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 220
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 168

  155 Expression: Expression LESS . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 221
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 169

  139 Expression: Expression MOD . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 222
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 170

  138 Expression: Expression QUOT . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 223
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 171

  140 Expression: Expression SHL . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 224
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 172

  141 Expression: Expression SHR . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 225
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 173

  204 ArrayType: LEFTSQUARE Expression RIGHTSQUARE . Type

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 226
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 174

  187 Arguments: LEFTPARAN . RIGHTPARAN
  188          | LEFTPARAN . ExpressionList RIGHTPARAN
  189          | LEFTPARAN . ExpressionList ELIPSIS RIGHTPARAN

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    RIGHTPARAN          shift, and go to state 227
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 119
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 228
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 175

  175 Index: LEFTSQUARE . Expression RIGHTSQUARE
  176 Slice: LEFTSQUARE . COLON Expression RIGHTSQUARE
  177      | LEFTSQUARE . COLON RIGHTSQUARE
  178      | LEFTSQUARE . Expression COLON RIGHTSQUARE
  179      | LEFTSQUARE . Expression COLON Expression RIGHTSQUARE
  180      | LEFTSQUARE . COLON Expression COLON Expression RIGHTSQUARE
  181      | LEFTSQUARE . Expression COLON Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    COLON               shift, and go to state 229
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 230
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 176

  174 Selector: DOT . IDENTIFIER
  186 TypeAssertion: DOT . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN   shift, and go to state 231
    IDENTIFIER  shift, and go to state 232


State 177

  165 PrimaryExpr: PrimaryExpr Selector .

    $default  reduce using rule 165 (PrimaryExpr)


State 178

  166 PrimaryExpr: PrimaryExpr Index .

    $default  reduce using rule 166 (PrimaryExpr)


State 179

  167 PrimaryExpr: PrimaryExpr Slice .

    $default  reduce using rule 167 (PrimaryExpr)


State 180

  170 PrimaryExpr: PrimaryExpr TypeAssertion .

    $default  reduce using rule 170 (PrimaryExpr)


State 181

  168 PrimaryExpr: PrimaryExpr Arguments .

    $default  reduce using rule 168 (PrimaryExpr)


State 182

  191 ExpressionList: ExpressionList COMMA . Expression

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 233
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 183

   62 VarSpec: IdentifierList Type ASSGN_OP ExpressionList .
  191 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 182

    $default  reduce using rule 62 (VarSpec)


State 184

   22 Block: LEFTBRACE OpenBlock . StatementList CloseBlock RIGHTBRACE

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    BREAK               shift, and go to state 234
    CONTINUE            shift, and go to state 235
    RETURN              shift, and go to state 236
    STRUCT              shift, and go to state 61
    IF                  shift, and go to state 237
    FOR                 shift, and go to state 238
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 239
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    GOTO                shift, and go to state 240
    FALLTHROUGH         shift, and go to state 241
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTBRACE           shift, and go to state 124
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 242

    $default  reduce using rule 50 (EmptyStmt)

    Block            go to state 243
    StatementList    go to state 244
    Statement        go to state 245
    Declaration      go to state 246
    LabeledStmt      go to state 247
    SimpleStmt       go to state 248
    EmptyStmt        go to state 249
    ExpressionStmt   go to state 250
    IncDecStmt       go to state 251
    Assignment       go to state 252
    ShortVarDecl     go to state 253
    VarDecl          go to state 28
    IdentifierList   go to state 254
    CompositeLit     go to state 107
    LiteralType      go to state 108
    Operand          go to state 109
    OperandName      go to state 110
    SliceType        go to state 71
    ReturnStmt       go to state 255
    BreakStmt        go to state 256
    ContinueStmt     go to state 257
    GotoStmt         go to state 258
    SwitchStmt       go to state 259
    ExprSwitchStmt   go to state 260
    FallthroughStmt  go to state 261
    IfStmt           go to state 262
    ForStmt          go to state 263
    Expression       go to state 264
    UnaryExpr        go to state 112
    PrimaryExpr      go to state 113
    MakeExpr         go to state 114
    ExpressionList   go to state 265
    TypeDecl         go to state 29
    MapType          go to state 72
    StructType       go to state 73
    PointerType      go to state 74
    ArrayType        go to state 75
    Literal          go to state 115
    BasicLit         go to state 116
    String           go to state 117


State 185

   40 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature FunctionBody CloseBlock .

    $default  reduce using rule 40 (FunctionDecl)


State 186

   67 Result: LEFTPARAN TypeList . RIGHTPARAN
   69 TypeList: TypeList . COMMA Type

    RIGHTPARAN  shift, and go to state 266
    COMMA       shift, and go to state 267


State 187

   70 TypeList: Type .

    $default  reduce using rule 70 (TypeList)


State 188

  200 FieldDecl: IdentifierList Type . String
  201          | IdentifierList Type .

    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14

    $default  reduce using rule 201 (FieldDecl)

    String  go to state 268


State 189

  196 StructType: STRUCT LEFTBRACE FieldDeclList RIGHTBRACE .

    $default  reduce using rule 196 (StructType)


State 190

  199 FieldDeclList: FieldDeclList FieldDecl . SCOLON

    SCOLON  shift, and go to state 269


State 191

  198 FieldDeclList: FieldDecl SCOLON .

    $default  reduce using rule 198 (FieldDeclList)


State 192

  195 MapType: MAP LEFTSQUARE Type RIGHTSQUARE . Type

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 270
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 193

  185 MakeExpr: NEW LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 271


State 194

  182 MakeExpr: MAKE LEFTPARAN Type . COMMA Expression COMMA Expression RIGHTPARAN
  183         | MAKE LEFTPARAN Type . COMMA Expression RIGHTPARAN
  184         | MAKE LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 272
    COMMA       shift, and go to state 273


State 195

   85 LiteralType: LEFTSQUARE ELIPSIS RIGHTSQUARE Operand .

    $default  reduce using rule 85 (LiteralType)


State 196

   90 Operand: OperandName .

    $default  reduce using rule 90 (Operand)


State 197

   91 Operand: LEFTPARAN Expression RIGHTPARAN .

    $default  reduce using rule 91 (Operand)


State 198

   93 LiteralValue: LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 93 (LiteralValue)


State 199

  102 Key: LiteralValue .
  104 Element: LiteralValue .

    COLON     reduce using rule 102 (Key)
    $default  reduce using rule 104 (Element)


State 200

   94 LiteralValue: LEFTBRACE ElementList . RIGHTBRACE
   95             | LEFTBRACE ElementList . COMMA RIGHTBRACE
   98 ElementList: ElementList . COMMA KeyedElement

    RIGHTBRACE  shift, and go to state 274
    COMMA       shift, and go to state 275


State 201

   97 ElementList: KeyedElement .

    $default  reduce using rule 97 (ElementList)


State 202

  100 KeyedElement: Key . COLON Element

    COLON  shift, and go to state 276


State 203

   99 KeyedElement: Element .

    $default  reduce using rule 99 (KeyedElement)


State 204

  101 Key: Expression .
  103 Element: Expression .
  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    LOGOR   shift, and go to state 161
    LOGAND  shift, and go to state 162
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    COLON     reduce using rule 101 (Key)
    $default  reduce using rule 103 (Element)


State 205

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression
  172 KeyValueList: Expression . COLON Expression
  173             | Expression . COLON Expression COMMA KeyValueList

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    LOGOR   shift, and go to state 161
    LOGAND  shift, and go to state 162
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172
    COLON   shift, and go to state 277


State 206

  171 StructLiteral: LEFTBRACE KeyValueList . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 278


State 207

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  143           | Expression ANDNOT Expression .
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    $default  reduce using rule 143 (Expression)


State 208

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  144           | Expression ADD Expression .
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 144 (Expression)


State 209

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  145           | Expression SUB Expression .
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 145 (Expression)


State 210

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  147           | Expression XOR Expression .
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    $default  reduce using rule 147 (Expression)


State 211

  137 Expression: Expression . MUL Expression
  137           | Expression MUL Expression .
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    $default  reduce using rule 137 (Expression)


State 212

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  142           | Expression AND Expression .
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    $default  reduce using rule 142 (Expression)


State 213

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  146           | Expression OR Expression .
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 146 (Expression)


State 214

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  149           | Expression LOGOR Expression .
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    LOGAND  shift, and go to state 162
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 149 (Expression)


State 215

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  148           | Expression LOGAND Expression .
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 148 (Expression)


State 216

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  150           | Expression ISEQ Expression .
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 150 (Expression)


State 217

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  151           | Expression NEQ Expression .
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 151 (Expression)


State 218

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  154           | Expression LESSEQ Expression .
  155           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 154 (Expression)


State 219

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  152           | Expression GRTEQ Expression .
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 152 (Expression)


State 220

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  153           | Expression GRT Expression .
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 153 (Expression)


State 221

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression
  155           | Expression LESS Expression .

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 155 (Expression)


State 222

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  139           | Expression MOD Expression .
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    $default  reduce using rule 139 (Expression)


State 223

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  138           | Expression QUOT Expression .
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    $default  reduce using rule 138 (Expression)


State 224

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  140           | Expression SHL Expression .
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    $default  reduce using rule 140 (Expression)


State 225

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  141           | Expression SHR Expression .
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    $default  reduce using rule 141 (Expression)


State 226

  204 ArrayType: LEFTSQUARE Expression RIGHTSQUARE Type .

    $default  reduce using rule 204 (ArrayType)


State 227

  187 Arguments: LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 187 (Arguments)


State 228

  188 Arguments: LEFTPARAN ExpressionList . RIGHTPARAN
  189          | LEFTPARAN ExpressionList . ELIPSIS RIGHTPARAN
  191 ExpressionList: ExpressionList . COMMA Expression

    ELIPSIS     shift, and go to state 279
    RIGHTPARAN  shift, and go to state 280
    COMMA       shift, and go to state 182


State 229

  176 Slice: LEFTSQUARE COLON . Expression RIGHTSQUARE
  177      | LEFTSQUARE COLON . RIGHTSQUARE
  180      | LEFTSQUARE COLON . Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    RIGHTSQUARE         shift, and go to state 281
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 282
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 230

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression
  175 Index: LEFTSQUARE Expression . RIGHTSQUARE
  178 Slice: LEFTSQUARE Expression . COLON RIGHTSQUARE
  179      | LEFTSQUARE Expression . COLON Expression RIGHTSQUARE
  181      | LEFTSQUARE Expression . COLON Expression COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 154
    ADD          shift, and go to state 155
    SUB          shift, and go to state 156
    XOR          shift, and go to state 157
    MUL          shift, and go to state 158
    AND          shift, and go to state 159
    OR           shift, and go to state 160
    LOGOR        shift, and go to state 161
    LOGAND       shift, and go to state 162
    ISEQ         shift, and go to state 163
    NEQ          shift, and go to state 164
    LESSEQ       shift, and go to state 165
    GRTEQ        shift, and go to state 166
    GRT          shift, and go to state 167
    LESS         shift, and go to state 168
    MOD          shift, and go to state 169
    QUOT         shift, and go to state 170
    SHL          shift, and go to state 171
    SHR          shift, and go to state 172
    RIGHTSQUARE  shift, and go to state 283
    COLON        shift, and go to state 284


State 231

  186 TypeAssertion: DOT LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 285
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 232

  174 Selector: DOT IDENTIFIER .

    $default  reduce using rule 174 (Selector)


State 233

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression
  191 ExpressionList: ExpressionList COMMA Expression .

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    LOGOR   shift, and go to state 161
    LOGAND  shift, and go to state 162
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 191 (ExpressionList)


State 234

  107 BreakStmt: BREAK .
  108          | BREAK . IDENTIFIER

    IDENTIFIER  shift, and go to state 286

    $default  reduce using rule 107 (BreakStmt)


State 235

  109 ContinueStmt: CONTINUE .

    $default  reduce using rule 109 (ContinueStmt)


State 236

  105 ReturnStmt: RETURN .
  106           | RETURN . ExpressionList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    $default  reduce using rule 105 (ReturnStmt)

    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 119
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 287
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 237

  125 IfStmt: IF . OpenBlock Expression Block CloseBlock
  126       | IF . OpenBlock SimpleStmt SCOLON Expression Block CloseBlock
  127       | IF . OpenBlock Expression Block ELSE IfStmt CloseBlock
  128       | IF . OpenBlock Expression Block ELSE Block CloseBlock
  129       | IF . OpenBlock SimpleStmt SCOLON Expression Block ELSE IfStmt CloseBlock
  130       | IF . OpenBlock SimpleStmt SCOLON Expression Block ELSE Block CloseBlock

    $default  reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 288


State 238

  131 ForStmt: FOR . forMarker Block forMarkerEnd
  132        | FOR . OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  133        | FOR . OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  134        | FOR . OpenBlock Condition forMarker Block forMarkerEnd CloseBlock

    LEFTBRACE  reduce using rule 135 (forMarker)
    $default   reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 289
    forMarker  go to state 290


State 239

  113 ExprSwitchStmt: SWITCH . OpenBlock FakeTrue LEFTBRACE $@1 ExprCaseClauseList RIGHTBRACE CloseBlock
  115               | SWITCH . OpenBlock SimpleStmt SCOLON LEFTBRACE $@2 ExprCaseClauseList RIGHTBRACE CloseBlock
  117               | SWITCH . OpenBlock Expression LEFTBRACE $@3 ExprCaseClauseList RIGHTBRACE CloseBlock

    $default  reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 291


State 240

  110 GotoStmt: GOTO . IDENTIFIER

    IDENTIFIER  shift, and go to state 292


State 241

  124 FallthroughStmt: FALLTHROUGH .

    $default  reduce using rule 124 (FallthroughStmt)


State 242

   44 LabeledStmt: IDENTIFIER . COLON Statement
   78 IdentifierList: IDENTIFIER .
   92 OperandName: IDENTIFIER .

    COLON  shift, and go to state 293

    INFER_EQ  reduce using rule 78 (IdentifierList)
    COMMA     reduce using rule 78 (IdentifierList)
    COMMA     [reduce using rule 92 (OperandName)]
    $default  reduce using rule 92 (OperandName)


State 243

   35 Statement: Block .

    $default  reduce using rule 35 (Statement)


State 244

   22 Block: LEFTBRACE OpenBlock StatementList . CloseBlock RIGHTBRACE
   24 StatementList: StatementList . Statement SCOLON

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    BREAK               shift, and go to state 234
    CONTINUE            shift, and go to state 235
    RETURN              shift, and go to state 236
    STRUCT              shift, and go to state 61
    IF                  shift, and go to state 237
    FOR                 shift, and go to state 238
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 239
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    GOTO                shift, and go to state 240
    FALLTHROUGH         shift, and go to state 241
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTBRACE           shift, and go to state 124
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 242

    SCOLON    reduce using rule 50 (EmptyStmt)
    $default  reduce using rule 3 (CloseBlock)

    CloseBlock       go to state 294
    Block            go to state 243
    Statement        go to state 295
    Declaration      go to state 246
    LabeledStmt      go to state 247
    SimpleStmt       go to state 248
    EmptyStmt        go to state 249
    ExpressionStmt   go to state 250
    IncDecStmt       go to state 251
    Assignment       go to state 252
    ShortVarDecl     go to state 253
    VarDecl          go to state 28
    IdentifierList   go to state 254
    CompositeLit     go to state 107
    LiteralType      go to state 108
    Operand          go to state 109
    OperandName      go to state 110
    SliceType        go to state 71
    ReturnStmt       go to state 255
    BreakStmt        go to state 256
    ContinueStmt     go to state 257
    GotoStmt         go to state 258
    SwitchStmt       go to state 259
    ExprSwitchStmt   go to state 260
    FallthroughStmt  go to state 261
    IfStmt           go to state 262
    ForStmt          go to state 263
    Expression       go to state 264
    UnaryExpr        go to state 112
    PrimaryExpr      go to state 113
    MakeExpr         go to state 114
    ExpressionList   go to state 265
    TypeDecl         go to state 29
    MapType          go to state 72
    StructType       go to state 73
    PointerType      go to state 74
    ArrayType        go to state 75
    Literal          go to state 115
    BasicLit         go to state 116
    String           go to state 117


State 245

   25 StatementList: Statement . SCOLON

    SCOLON  shift, and go to state 296


State 246

   26 Statement: Declaration .

    $default  reduce using rule 26 (Statement)


State 247

   27 Statement: LabeledStmt .

    $default  reduce using rule 27 (Statement)


State 248

   28 Statement: SimpleStmt .

    $default  reduce using rule 28 (Statement)


State 249

   45 SimpleStmt: EmptyStmt .

    $default  reduce using rule 45 (SimpleStmt)


State 250

   46 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 46 (SimpleStmt)


State 251

   47 SimpleStmt: IncDecStmt .

    $default  reduce using rule 47 (SimpleStmt)


State 252

   48 SimpleStmt: Assignment .

    $default  reduce using rule 48 (SimpleStmt)


State 253

   49 SimpleStmt: ShortVarDecl .

    $default  reduce using rule 49 (SimpleStmt)


State 254

   56 ShortVarDecl: IdentifierList . INFER_EQ ExpressionList
   77 IdentifierList: IdentifierList . COMMA IDENTIFIER

    INFER_EQ  shift, and go to state 297
    COMMA     shift, and go to state 65


State 255

   29 Statement: ReturnStmt .

    $default  reduce using rule 29 (Statement)


State 256

   30 Statement: BreakStmt .

    $default  reduce using rule 30 (Statement)


State 257

   31 Statement: ContinueStmt .

    $default  reduce using rule 31 (Statement)


State 258

   32 Statement: GotoStmt .

    $default  reduce using rule 32 (Statement)


State 259

   33 Statement: SwitchStmt .

    $default  reduce using rule 33 (Statement)


State 260

  111 SwitchStmt: ExprSwitchStmt .

    $default  reduce using rule 111 (SwitchStmt)


State 261

   34 Statement: FallthroughStmt .

    $default  reduce using rule 34 (Statement)


State 262

   36 Statement: IfStmt .

    $default  reduce using rule 36 (Statement)


State 263

   37 Statement: ForStmt .

    $default  reduce using rule 37 (Statement)


State 264

   52 ExpressionStmt: Expression .
   53 IncDecStmt: Expression . PLUSPLUS
   54           | Expression . MINUSMINUS
  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression
  190 ExpressionList: Expression .

    PLUSPLUS    shift, and go to state 298
    MINUSMINUS  shift, and go to state 299
    ANDNOT      shift, and go to state 154
    ADD         shift, and go to state 155
    SUB         shift, and go to state 156
    XOR         shift, and go to state 157
    MUL         shift, and go to state 158
    AND         shift, and go to state 159
    OR          shift, and go to state 160
    LOGOR       shift, and go to state 161
    LOGAND      shift, and go to state 162
    ISEQ        shift, and go to state 163
    NEQ         shift, and go to state 164
    LESSEQ      shift, and go to state 165
    GRTEQ       shift, and go to state 166
    GRT         shift, and go to state 167
    LESS        shift, and go to state 168
    MOD         shift, and go to state 169
    QUOT        shift, and go to state 170
    SHL         shift, and go to state 171
    SHR         shift, and go to state 172

    COMMA     reduce using rule 190 (ExpressionList)
    ASSGN_OP  reduce using rule 190 (ExpressionList)
    $default  reduce using rule 52 (ExpressionStmt)


State 265

   55 Assignment: ExpressionList . ASSGN_OP ExpressionList
  191 ExpressionList: ExpressionList . COMMA Expression

    COMMA     shift, and go to state 182
    ASSGN_OP  shift, and go to state 300


State 266

   67 Result: LEFTPARAN TypeList RIGHTPARAN .

    $default  reduce using rule 67 (Result)


State 267

   69 TypeList: TypeList COMMA . Type

    STRUCT      shift, and go to state 61
    MAP         shift, and go to state 62
    MUL         shift, and go to state 63
    LEFTSQUARE  shift, and go to state 64
    IDENTIFIER  shift, and go to state 66

    LiteralType  go to state 68
    Type         go to state 301
    OperandName  go to state 70
    SliceType    go to state 71
    MapType      go to state 72
    StructType   go to state 73
    PointerType  go to state 74
    ArrayType    go to state 75


State 268

  200 FieldDecl: IdentifierList Type String .

    $default  reduce using rule 200 (FieldDecl)


State 269

  199 FieldDeclList: FieldDeclList FieldDecl SCOLON .

    $default  reduce using rule 199 (FieldDeclList)


State 270

  195 MapType: MAP LEFTSQUARE Type RIGHTSQUARE Type .

    $default  reduce using rule 195 (MapType)


State 271

  185 MakeExpr: NEW LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 185 (MakeExpr)


State 272

  184 MakeExpr: MAKE LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 184 (MakeExpr)


State 273

  182 MakeExpr: MAKE LEFTPARAN Type COMMA . Expression COMMA Expression RIGHTPARAN
  183         | MAKE LEFTPARAN Type COMMA . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 302
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 274

   94 LiteralValue: LEFTBRACE ElementList RIGHTBRACE .

    $default  reduce using rule 94 (LiteralValue)


State 275

   95 LiteralValue: LEFTBRACE ElementList COMMA . RIGHTBRACE
   98 ElementList: ElementList COMMA . KeyedElement

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    RIGHTBRACE          shift, and go to state 303
    LEFTPARAN           shift, and go to state 105
    LEFTBRACE           shift, and go to state 150
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    LiteralValue  go to state 199
    SliceType     go to state 71
    KeyedElement  go to state 304
    Key           go to state 202
    Element       go to state 203
    Expression    go to state 204
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 276

  100 KeyedElement: Key COLON . Element

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTBRACE           shift, and go to state 150
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    LiteralValue  go to state 305
    SliceType     go to state 71
    Element       go to state 306
    Expression    go to state 307
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 277

  172 KeyValueList: Expression COLON . Expression
  173             | Expression COLON . Expression COMMA KeyValueList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 308
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 278

  171 StructLiteral: LEFTBRACE KeyValueList RIGHTBRACE .

    $default  reduce using rule 171 (StructLiteral)


State 279

  189 Arguments: LEFTPARAN ExpressionList ELIPSIS . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 309


State 280

  188 Arguments: LEFTPARAN ExpressionList RIGHTPARAN .

    $default  reduce using rule 188 (Arguments)


State 281

  177 Slice: LEFTSQUARE COLON RIGHTSQUARE .

    $default  reduce using rule 177 (Slice)


State 282

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression
  176 Slice: LEFTSQUARE COLON Expression . RIGHTSQUARE
  180      | LEFTSQUARE COLON Expression . COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 154
    ADD          shift, and go to state 155
    SUB          shift, and go to state 156
    XOR          shift, and go to state 157
    MUL          shift, and go to state 158
    AND          shift, and go to state 159
    OR           shift, and go to state 160
    LOGOR        shift, and go to state 161
    LOGAND       shift, and go to state 162
    ISEQ         shift, and go to state 163
    NEQ          shift, and go to state 164
    LESSEQ       shift, and go to state 165
    GRTEQ        shift, and go to state 166
    GRT          shift, and go to state 167
    LESS         shift, and go to state 168
    MOD          shift, and go to state 169
    QUOT         shift, and go to state 170
    SHL          shift, and go to state 171
    SHR          shift, and go to state 172
    RIGHTSQUARE  shift, and go to state 310
    COLON        shift, and go to state 311


State 283

  175 Index: LEFTSQUARE Expression RIGHTSQUARE .

    $default  reduce using rule 175 (Index)


State 284

  178 Slice: LEFTSQUARE Expression COLON . RIGHTSQUARE
  179      | LEFTSQUARE Expression COLON . Expression RIGHTSQUARE
  181      | LEFTSQUARE Expression COLON . Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    RIGHTSQUARE         shift, and go to state 312
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 313
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 285

  186 TypeAssertion: DOT LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 314


State 286

  108 BreakStmt: BREAK IDENTIFIER .

    $default  reduce using rule 108 (BreakStmt)


State 287

  106 ReturnStmt: RETURN ExpressionList .
  191 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 182

    $default  reduce using rule 106 (ReturnStmt)


State 288

  125 IfStmt: IF OpenBlock . Expression Block CloseBlock
  126       | IF OpenBlock . SimpleStmt SCOLON Expression Block CloseBlock
  127       | IF OpenBlock . Expression Block ELSE IfStmt CloseBlock
  128       | IF OpenBlock . Expression Block ELSE Block CloseBlock
  129       | IF OpenBlock . SimpleStmt SCOLON Expression Block ELSE IfStmt CloseBlock
  130       | IF OpenBlock . SimpleStmt SCOLON Expression Block ELSE Block CloseBlock

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 315

    $default  reduce using rule 50 (EmptyStmt)

    SimpleStmt      go to state 316
    EmptyStmt       go to state 249
    ExpressionStmt  go to state 250
    IncDecStmt      go to state 251
    Assignment      go to state 252
    ShortVarDecl    go to state 253
    IdentifierList  go to state 254
    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 317
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 265
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 289

  132 ForStmt: FOR OpenBlock . SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  133        | FOR OpenBlock . SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  134        | FOR OpenBlock . Condition forMarker Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 315

    $default  reduce using rule 50 (EmptyStmt)

    Condition       go to state 318
    SimpleStmt      go to state 319
    EmptyStmt       go to state 249
    ExpressionStmt  go to state 250
    IncDecStmt      go to state 251
    Assignment      go to state 252
    ShortVarDecl    go to state 253
    IdentifierList  go to state 254
    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 320
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 265
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 290

  131 ForStmt: FOR forMarker . Block forMarkerEnd

    LEFTBRACE  shift, and go to state 124

    Block  go to state 321


State 291

  113 ExprSwitchStmt: SWITCH OpenBlock . FakeTrue LEFTBRACE $@1 ExprCaseClauseList RIGHTBRACE CloseBlock
  115               | SWITCH OpenBlock . SimpleStmt SCOLON LEFTBRACE $@2 ExprCaseClauseList RIGHTBRACE CloseBlock
  117               | SWITCH OpenBlock . Expression LEFTBRACE $@3 ExprCaseClauseList RIGHTBRACE CloseBlock

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 315

    LEFTBRACE  reduce using rule 121 (FakeTrue)
    $default   reduce using rule 50 (EmptyStmt)

    SimpleStmt      go to state 322
    EmptyStmt       go to state 249
    ExpressionStmt  go to state 250
    IncDecStmt      go to state 251
    Assignment      go to state 252
    ShortVarDecl    go to state 253
    IdentifierList  go to state 254
    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    FakeTrue        go to state 323
    Expression      go to state 324
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 265
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 292

  110 GotoStmt: GOTO IDENTIFIER .

    $default  reduce using rule 110 (GotoStmt)


State 293

   44 LabeledStmt: IDENTIFIER COLON . Statement

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    BREAK               shift, and go to state 234
    CONTINUE            shift, and go to state 235
    RETURN              shift, and go to state 236
    STRUCT              shift, and go to state 61
    IF                  shift, and go to state 237
    FOR                 shift, and go to state 238
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 239
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    GOTO                shift, and go to state 240
    FALLTHROUGH         shift, and go to state 241
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTBRACE           shift, and go to state 124
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 242

    $default  reduce using rule 50 (EmptyStmt)

    Block            go to state 243
    Statement        go to state 325
    Declaration      go to state 246
    LabeledStmt      go to state 247
    SimpleStmt       go to state 248
    EmptyStmt        go to state 249
    ExpressionStmt   go to state 250
    IncDecStmt       go to state 251
    Assignment       go to state 252
    ShortVarDecl     go to state 253
    VarDecl          go to state 28
    IdentifierList   go to state 254
    CompositeLit     go to state 107
    LiteralType      go to state 108
    Operand          go to state 109
    OperandName      go to state 110
    SliceType        go to state 71
    ReturnStmt       go to state 255
    BreakStmt        go to state 256
    ContinueStmt     go to state 257
    GotoStmt         go to state 258
    SwitchStmt       go to state 259
    ExprSwitchStmt   go to state 260
    FallthroughStmt  go to state 261
    IfStmt           go to state 262
    ForStmt          go to state 263
    Expression       go to state 264
    UnaryExpr        go to state 112
    PrimaryExpr      go to state 113
    MakeExpr         go to state 114
    ExpressionList   go to state 265
    TypeDecl         go to state 29
    MapType          go to state 72
    StructType       go to state 73
    PointerType      go to state 74
    ArrayType        go to state 75
    Literal          go to state 115
    BasicLit         go to state 116
    String           go to state 117


State 294

   22 Block: LEFTBRACE OpenBlock StatementList CloseBlock . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 326


State 295

   24 StatementList: StatementList Statement . SCOLON

    SCOLON  shift, and go to state 327


State 296

   25 StatementList: Statement SCOLON .

    $default  reduce using rule 25 (StatementList)


State 297

   56 ShortVarDecl: IdentifierList INFER_EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 119
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 328
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 298

   53 IncDecStmt: Expression PLUSPLUS .

    $default  reduce using rule 53 (IncDecStmt)


State 299

   54 IncDecStmt: Expression MINUSMINUS .

    $default  reduce using rule 54 (IncDecStmt)


State 300

   55 Assignment: ExpressionList ASSGN_OP . ExpressionList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 119
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 329
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 301

   69 TypeList: TypeList COMMA Type .

    $default  reduce using rule 69 (TypeList)


State 302

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression
  182 MakeExpr: MAKE LEFTPARAN Type COMMA Expression . COMMA Expression RIGHTPARAN
  183         | MAKE LEFTPARAN Type COMMA Expression . RIGHTPARAN

    ANDNOT      shift, and go to state 154
    ADD         shift, and go to state 155
    SUB         shift, and go to state 156
    XOR         shift, and go to state 157
    MUL         shift, and go to state 158
    AND         shift, and go to state 159
    OR          shift, and go to state 160
    LOGOR       shift, and go to state 161
    LOGAND      shift, and go to state 162
    ISEQ        shift, and go to state 163
    NEQ         shift, and go to state 164
    LESSEQ      shift, and go to state 165
    GRTEQ       shift, and go to state 166
    GRT         shift, and go to state 167
    LESS        shift, and go to state 168
    MOD         shift, and go to state 169
    QUOT        shift, and go to state 170
    SHL         shift, and go to state 171
    SHR         shift, and go to state 172
    RIGHTPARAN  shift, and go to state 330
    COMMA       shift, and go to state 331


State 303

   95 LiteralValue: LEFTBRACE ElementList COMMA RIGHTBRACE .

    $default  reduce using rule 95 (LiteralValue)


State 304

   98 ElementList: ElementList COMMA KeyedElement .

    $default  reduce using rule 98 (ElementList)


State 305

  104 Element: LiteralValue .

    $default  reduce using rule 104 (Element)


State 306

  100 KeyedElement: Key COLON Element .

    $default  reduce using rule 100 (KeyedElement)


State 307

  103 Element: Expression .
  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    LOGOR   shift, and go to state 161
    LOGAND  shift, and go to state 162
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 103 (Element)


State 308

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression
  172 KeyValueList: Expression COLON Expression .
  173             | Expression COLON Expression . COMMA KeyValueList

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    LOGOR   shift, and go to state 161
    LOGAND  shift, and go to state 162
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172
    COMMA   shift, and go to state 332

    $default  reduce using rule 172 (KeyValueList)


State 309

  189 Arguments: LEFTPARAN ExpressionList ELIPSIS RIGHTPARAN .

    $default  reduce using rule 189 (Arguments)


State 310

  176 Slice: LEFTSQUARE COLON Expression RIGHTSQUARE .

    $default  reduce using rule 176 (Slice)


State 311

  180 Slice: LEFTSQUARE COLON Expression COLON . Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 333
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 312

  178 Slice: LEFTSQUARE Expression COLON RIGHTSQUARE .

    $default  reduce using rule 178 (Slice)


State 313

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression
  179 Slice: LEFTSQUARE Expression COLON Expression . RIGHTSQUARE
  181      | LEFTSQUARE Expression COLON Expression . COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 154
    ADD          shift, and go to state 155
    SUB          shift, and go to state 156
    XOR          shift, and go to state 157
    MUL          shift, and go to state 158
    AND          shift, and go to state 159
    OR           shift, and go to state 160
    LOGOR        shift, and go to state 161
    LOGAND       shift, and go to state 162
    ISEQ         shift, and go to state 163
    NEQ          shift, and go to state 164
    LESSEQ       shift, and go to state 165
    GRTEQ        shift, and go to state 166
    GRT          shift, and go to state 167
    LESS         shift, and go to state 168
    MOD          shift, and go to state 169
    QUOT         shift, and go to state 170
    SHL          shift, and go to state 171
    SHR          shift, and go to state 172
    RIGHTSQUARE  shift, and go to state 334
    COLON        shift, and go to state 335


State 314

  186 TypeAssertion: DOT LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 186 (TypeAssertion)


State 315

   78 IdentifierList: IDENTIFIER .
   92 OperandName: IDENTIFIER .

    INFER_EQ  reduce using rule 78 (IdentifierList)
    COMMA     reduce using rule 78 (IdentifierList)
    COMMA     [reduce using rule 92 (OperandName)]
    $default  reduce using rule 92 (OperandName)


State 316

  126 IfStmt: IF OpenBlock SimpleStmt . SCOLON Expression Block CloseBlock
  129       | IF OpenBlock SimpleStmt . SCOLON Expression Block ELSE IfStmt CloseBlock
  130       | IF OpenBlock SimpleStmt . SCOLON Expression Block ELSE Block CloseBlock

    SCOLON  shift, and go to state 336


State 317

   52 ExpressionStmt: Expression .
   53 IncDecStmt: Expression . PLUSPLUS
   54           | Expression . MINUSMINUS
  125 IfStmt: IF OpenBlock Expression . Block CloseBlock
  127       | IF OpenBlock Expression . Block ELSE IfStmt CloseBlock
  128       | IF OpenBlock Expression . Block ELSE Block CloseBlock
  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression
  190 ExpressionList: Expression .

    PLUSPLUS    shift, and go to state 298
    MINUSMINUS  shift, and go to state 299
    ANDNOT      shift, and go to state 154
    ADD         shift, and go to state 155
    SUB         shift, and go to state 156
    XOR         shift, and go to state 157
    MUL         shift, and go to state 158
    AND         shift, and go to state 159
    OR          shift, and go to state 160
    LOGOR       shift, and go to state 161
    LOGAND      shift, and go to state 162
    ISEQ        shift, and go to state 163
    NEQ         shift, and go to state 164
    LESSEQ      shift, and go to state 165
    GRTEQ       shift, and go to state 166
    GRT         shift, and go to state 167
    LESS        shift, and go to state 168
    MOD         shift, and go to state 169
    QUOT        shift, and go to state 170
    SHL         shift, and go to state 171
    SHR         shift, and go to state 172
    LEFTBRACE   shift, and go to state 124

    SCOLON    reduce using rule 52 (ExpressionStmt)
    $default  reduce using rule 190 (ExpressionList)

    Block  go to state 337


State 318

  134 ForStmt: FOR OpenBlock Condition . forMarker Block forMarkerEnd CloseBlock

    $default  reduce using rule 135 (forMarker)

    forMarker  go to state 338


State 319

  132 ForStmt: FOR OpenBlock SimpleStmt . SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  133        | FOR OpenBlock SimpleStmt . SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    SCOLON  shift, and go to state 339


State 320

   23 Condition: Expression .
   52 ExpressionStmt: Expression .
   53 IncDecStmt: Expression . PLUSPLUS
   54           | Expression . MINUSMINUS
  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression
  190 ExpressionList: Expression .

    PLUSPLUS    shift, and go to state 298
    MINUSMINUS  shift, and go to state 299
    ANDNOT      shift, and go to state 154
    ADD         shift, and go to state 155
    SUB         shift, and go to state 156
    XOR         shift, and go to state 157
    MUL         shift, and go to state 158
    AND         shift, and go to state 159
    OR          shift, and go to state 160
    LOGOR       shift, and go to state 161
    LOGAND      shift, and go to state 162
    ISEQ        shift, and go to state 163
    NEQ         shift, and go to state 164
    LESSEQ      shift, and go to state 165
    GRTEQ       shift, and go to state 166
    GRT         shift, and go to state 167
    LESS        shift, and go to state 168
    MOD         shift, and go to state 169
    QUOT        shift, and go to state 170
    SHL         shift, and go to state 171
    SHR         shift, and go to state 172

    SCOLON     reduce using rule 52 (ExpressionStmt)
    LEFTBRACE  reduce using rule 23 (Condition)
    $default   reduce using rule 190 (ExpressionList)


State 321

  131 ForStmt: FOR forMarker Block . forMarkerEnd

    $default  reduce using rule 136 (forMarkerEnd)

    forMarkerEnd  go to state 340


State 322

  115 ExprSwitchStmt: SWITCH OpenBlock SimpleStmt . SCOLON LEFTBRACE $@2 ExprCaseClauseList RIGHTBRACE CloseBlock

    SCOLON  shift, and go to state 341


State 323

  113 ExprSwitchStmt: SWITCH OpenBlock FakeTrue . LEFTBRACE $@1 ExprCaseClauseList RIGHTBRACE CloseBlock

    LEFTBRACE  shift, and go to state 342


State 324

   52 ExpressionStmt: Expression .
   53 IncDecStmt: Expression . PLUSPLUS
   54           | Expression . MINUSMINUS
  117 ExprSwitchStmt: SWITCH OpenBlock Expression . LEFTBRACE $@3 ExprCaseClauseList RIGHTBRACE CloseBlock
  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression
  190 ExpressionList: Expression .

    PLUSPLUS    shift, and go to state 298
    MINUSMINUS  shift, and go to state 299
    ANDNOT      shift, and go to state 154
    ADD         shift, and go to state 155
    SUB         shift, and go to state 156
    XOR         shift, and go to state 157
    MUL         shift, and go to state 158
    AND         shift, and go to state 159
    OR          shift, and go to state 160
    LOGOR       shift, and go to state 161
    LOGAND      shift, and go to state 162
    ISEQ        shift, and go to state 163
    NEQ         shift, and go to state 164
    LESSEQ      shift, and go to state 165
    GRTEQ       shift, and go to state 166
    GRT         shift, and go to state 167
    LESS        shift, and go to state 168
    MOD         shift, and go to state 169
    QUOT        shift, and go to state 170
    SHL         shift, and go to state 171
    SHR         shift, and go to state 172
    LEFTBRACE   shift, and go to state 343

    SCOLON    reduce using rule 52 (ExpressionStmt)
    $default  reduce using rule 190 (ExpressionList)


State 325

   44 LabeledStmt: IDENTIFIER COLON Statement .

    $default  reduce using rule 44 (LabeledStmt)


State 326

   22 Block: LEFTBRACE OpenBlock StatementList CloseBlock RIGHTBRACE .

    $default  reduce using rule 22 (Block)


State 327

   24 StatementList: StatementList Statement SCOLON .

    $default  reduce using rule 24 (StatementList)


State 328

   56 ShortVarDecl: IdentifierList INFER_EQ ExpressionList .
  191 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 182

    $default  reduce using rule 56 (ShortVarDecl)


State 329

   55 Assignment: ExpressionList ASSGN_OP ExpressionList .
  191 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 182

    $default  reduce using rule 55 (Assignment)


State 330

  183 MakeExpr: MAKE LEFTPARAN Type COMMA Expression RIGHTPARAN .

    $default  reduce using rule 183 (MakeExpr)


State 331

  182 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 344
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 332

  173 KeyValueList: Expression COLON Expression COMMA . KeyValueList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 205
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    KeyValueList  go to state 345
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 333

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression
  180 Slice: LEFTSQUARE COLON Expression COLON Expression . RIGHTSQUARE

    ANDNOT       shift, and go to state 154
    ADD          shift, and go to state 155
    SUB          shift, and go to state 156
    XOR          shift, and go to state 157
    MUL          shift, and go to state 158
    AND          shift, and go to state 159
    OR           shift, and go to state 160
    LOGOR        shift, and go to state 161
    LOGAND       shift, and go to state 162
    ISEQ         shift, and go to state 163
    NEQ          shift, and go to state 164
    LESSEQ       shift, and go to state 165
    GRTEQ        shift, and go to state 166
    GRT          shift, and go to state 167
    LESS         shift, and go to state 168
    MOD          shift, and go to state 169
    QUOT         shift, and go to state 170
    SHL          shift, and go to state 171
    SHR          shift, and go to state 172
    RIGHTSQUARE  shift, and go to state 346


State 334

  179 Slice: LEFTSQUARE Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 179 (Slice)


State 335

  181 Slice: LEFTSQUARE Expression COLON Expression COLON . Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 347
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 336

  126 IfStmt: IF OpenBlock SimpleStmt SCOLON . Expression Block CloseBlock
  129       | IF OpenBlock SimpleStmt SCOLON . Expression Block ELSE IfStmt CloseBlock
  130       | IF OpenBlock SimpleStmt SCOLON . Expression Block ELSE Block CloseBlock

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit  go to state 107
    LiteralType   go to state 108
    Operand       go to state 109
    OperandName   go to state 110
    SliceType     go to state 71
    Expression    go to state 348
    UnaryExpr     go to state 112
    PrimaryExpr   go to state 113
    MakeExpr      go to state 114
    MapType       go to state 72
    StructType    go to state 73
    PointerType   go to state 74
    ArrayType     go to state 75
    Literal       go to state 115
    BasicLit      go to state 116
    String        go to state 117


State 337

  125 IfStmt: IF OpenBlock Expression Block . CloseBlock
  127       | IF OpenBlock Expression Block . ELSE IfStmt CloseBlock
  128       | IF OpenBlock Expression Block . ELSE Block CloseBlock

    ELSE  shift, and go to state 349

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 350


State 338

  134 ForStmt: FOR OpenBlock Condition forMarker . Block forMarkerEnd CloseBlock

    LEFTBRACE  shift, and go to state 124

    Block  go to state 351


State 339

  132 ForStmt: FOR OpenBlock SimpleStmt SCOLON . forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  133        | FOR OpenBlock SimpleStmt SCOLON . forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    $default  reduce using rule 135 (forMarker)

    forMarker  go to state 352


State 340

  131 ForStmt: FOR forMarker Block forMarkerEnd .

    $default  reduce using rule 131 (ForStmt)


State 341

  115 ExprSwitchStmt: SWITCH OpenBlock SimpleStmt SCOLON . LEFTBRACE $@2 ExprCaseClauseList RIGHTBRACE CloseBlock

    LEFTBRACE  shift, and go to state 353


State 342

  113 ExprSwitchStmt: SWITCH OpenBlock FakeTrue LEFTBRACE . $@1 ExprCaseClauseList RIGHTBRACE CloseBlock

    $default  reduce using rule 112 ($@1)

    $@1  go to state 354


State 343

  117 ExprSwitchStmt: SWITCH OpenBlock Expression LEFTBRACE . $@3 ExprCaseClauseList RIGHTBRACE CloseBlock

    $default  reduce using rule 116 ($@3)

    $@3  go to state 355


State 344

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression
  182 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression . RIGHTPARAN

    ANDNOT      shift, and go to state 154
    ADD         shift, and go to state 155
    SUB         shift, and go to state 156
    XOR         shift, and go to state 157
    MUL         shift, and go to state 158
    AND         shift, and go to state 159
    OR          shift, and go to state 160
    LOGOR       shift, and go to state 161
    LOGAND      shift, and go to state 162
    ISEQ        shift, and go to state 163
    NEQ         shift, and go to state 164
    LESSEQ      shift, and go to state 165
    GRTEQ       shift, and go to state 166
    GRT         shift, and go to state 167
    LESS        shift, and go to state 168
    MOD         shift, and go to state 169
    QUOT        shift, and go to state 170
    SHL         shift, and go to state 171
    SHR         shift, and go to state 172
    RIGHTPARAN  shift, and go to state 356


State 345

  173 KeyValueList: Expression COLON Expression COMMA KeyValueList .

    $default  reduce using rule 173 (KeyValueList)


State 346

  180 Slice: LEFTSQUARE COLON Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 180 (Slice)


State 347

  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression
  181 Slice: LEFTSQUARE Expression COLON Expression COLON Expression . RIGHTSQUARE

    ANDNOT       shift, and go to state 154
    ADD          shift, and go to state 155
    SUB          shift, and go to state 156
    XOR          shift, and go to state 157
    MUL          shift, and go to state 158
    AND          shift, and go to state 159
    OR           shift, and go to state 160
    LOGOR        shift, and go to state 161
    LOGAND       shift, and go to state 162
    ISEQ         shift, and go to state 163
    NEQ          shift, and go to state 164
    LESSEQ       shift, and go to state 165
    GRTEQ        shift, and go to state 166
    GRT          shift, and go to state 167
    LESS         shift, and go to state 168
    MOD          shift, and go to state 169
    QUOT         shift, and go to state 170
    SHL          shift, and go to state 171
    SHR          shift, and go to state 172
    RIGHTSQUARE  shift, and go to state 357


State 348

  126 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression . Block CloseBlock
  129       | IF OpenBlock SimpleStmt SCOLON Expression . Block ELSE IfStmt CloseBlock
  130       | IF OpenBlock SimpleStmt SCOLON Expression . Block ELSE Block CloseBlock
  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    ANDNOT     shift, and go to state 154
    ADD        shift, and go to state 155
    SUB        shift, and go to state 156
    XOR        shift, and go to state 157
    MUL        shift, and go to state 158
    AND        shift, and go to state 159
    OR         shift, and go to state 160
    LOGOR      shift, and go to state 161
    LOGAND     shift, and go to state 162
    ISEQ       shift, and go to state 163
    NEQ        shift, and go to state 164
    LESSEQ     shift, and go to state 165
    GRTEQ      shift, and go to state 166
    GRT        shift, and go to state 167
    LESS       shift, and go to state 168
    MOD        shift, and go to state 169
    QUOT       shift, and go to state 170
    SHL        shift, and go to state 171
    SHR        shift, and go to state 172
    LEFTBRACE  shift, and go to state 124

    Block  go to state 358


State 349

  127 IfStmt: IF OpenBlock Expression Block ELSE . IfStmt CloseBlock
  128       | IF OpenBlock Expression Block ELSE . Block CloseBlock

    IF         shift, and go to state 237
    LEFTBRACE  shift, and go to state 124

    Block   go to state 359
    IfStmt  go to state 360


State 350

  125 IfStmt: IF OpenBlock Expression Block CloseBlock .

    $default  reduce using rule 125 (IfStmt)


State 351

  134 ForStmt: FOR OpenBlock Condition forMarker Block . forMarkerEnd CloseBlock

    $default  reduce using rule 136 (forMarkerEnd)

    forMarkerEnd  go to state 361


State 352

  132 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker . EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  133        | FOR OpenBlock SimpleStmt SCOLON forMarker . ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    $default  reduce using rule 51 (EmptyExpr)

    EmptyExpr       go to state 362
    ExpressionStmt  go to state 363
    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 364
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 353

  115 ExprSwitchStmt: SWITCH OpenBlock SimpleStmt SCOLON LEFTBRACE . $@2 ExprCaseClauseList RIGHTBRACE CloseBlock

    $default  reduce using rule 114 ($@2)

    $@2  go to state 365


State 354

  113 ExprSwitchStmt: SWITCH OpenBlock FakeTrue LEFTBRACE $@1 . ExprCaseClauseList RIGHTBRACE CloseBlock

    CASE     shift, and go to state 366
    DEFAULT  shift, and go to state 367

    ExprCaseClauseList  go to state 368
    ExprCaseClause      go to state 369
    ExprSwitchCase      go to state 370


State 355

  117 ExprSwitchStmt: SWITCH OpenBlock Expression LEFTBRACE $@3 . ExprCaseClauseList RIGHTBRACE CloseBlock

    CASE     shift, and go to state 366
    DEFAULT  shift, and go to state 367

    ExprCaseClauseList  go to state 371
    ExprCaseClause      go to state 369
    ExprSwitchCase      go to state 370


State 356

  182 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN .

    $default  reduce using rule 182 (MakeExpr)


State 357

  181 Slice: LEFTSQUARE Expression COLON Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 181 (Slice)


State 358

  126 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block . CloseBlock
  129       | IF OpenBlock SimpleStmt SCOLON Expression Block . ELSE IfStmt CloseBlock
  130       | IF OpenBlock SimpleStmt SCOLON Expression Block . ELSE Block CloseBlock

    ELSE  shift, and go to state 372

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 373


State 359

  128 IfStmt: IF OpenBlock Expression Block ELSE Block . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 374


State 360

  127 IfStmt: IF OpenBlock Expression Block ELSE IfStmt . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 375


State 361

  134 ForStmt: FOR OpenBlock Condition forMarker Block forMarkerEnd . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 376


State 362

  132 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr . SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    SCOLON  shift, and go to state 377


State 363

  133 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt . SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    SCOLON  shift, and go to state 378


State 364

   52 ExpressionStmt: Expression .
  137 Expression: Expression . MUL Expression
  138           | Expression . QUOT Expression
  139           | Expression . MOD Expression
  140           | Expression . SHL Expression
  141           | Expression . SHR Expression
  142           | Expression . AND Expression
  143           | Expression . ANDNOT Expression
  144           | Expression . ADD Expression
  145           | Expression . SUB Expression
  146           | Expression . OR Expression
  147           | Expression . XOR Expression
  148           | Expression . LOGAND Expression
  149           | Expression . LOGOR Expression
  150           | Expression . ISEQ Expression
  151           | Expression . NEQ Expression
  152           | Expression . GRTEQ Expression
  153           | Expression . GRT Expression
  154           | Expression . LESSEQ Expression
  155           | Expression . LESS Expression

    ANDNOT  shift, and go to state 154
    ADD     shift, and go to state 155
    SUB     shift, and go to state 156
    XOR     shift, and go to state 157
    MUL     shift, and go to state 158
    AND     shift, and go to state 159
    OR      shift, and go to state 160
    LOGOR   shift, and go to state 161
    LOGAND  shift, and go to state 162
    ISEQ    shift, and go to state 163
    NEQ     shift, and go to state 164
    LESSEQ  shift, and go to state 165
    GRTEQ   shift, and go to state 166
    GRT     shift, and go to state 167
    LESS    shift, and go to state 168
    MOD     shift, and go to state 169
    QUOT    shift, and go to state 170
    SHL     shift, and go to state 171
    SHR     shift, and go to state 172

    $default  reduce using rule 52 (ExpressionStmt)


State 365

  115 ExprSwitchStmt: SWITCH OpenBlock SimpleStmt SCOLON LEFTBRACE $@2 . ExprCaseClauseList RIGHTBRACE CloseBlock

    CASE     shift, and go to state 366
    DEFAULT  shift, and go to state 367

    ExprCaseClauseList  go to state 379
    ExprCaseClause      go to state 369
    ExprSwitchCase      go to state 370


State 366

  122 ExprSwitchCase: CASE . ExpressionList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 66

    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 119
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 380
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 367

  123 ExprSwitchCase: DEFAULT . FakeTrue

    $default  reduce using rule 121 (FakeTrue)

    FakeTrue  go to state 381


State 368

  113 ExprSwitchStmt: SWITCH OpenBlock FakeTrue LEFTBRACE $@1 ExprCaseClauseList . RIGHTBRACE CloseBlock
  118 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 366
    DEFAULT     shift, and go to state 367
    RIGHTBRACE  shift, and go to state 382

    ExprCaseClause  go to state 383
    ExprSwitchCase  go to state 370


State 369

  119 ExprCaseClauseList: ExprCaseClause .

    $default  reduce using rule 119 (ExprCaseClauseList)


State 370

  120 ExprCaseClause: ExprSwitchCase . COLON StatementList

    COLON  shift, and go to state 384


State 371

  117 ExprSwitchStmt: SWITCH OpenBlock Expression LEFTBRACE $@3 ExprCaseClauseList . RIGHTBRACE CloseBlock
  118 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 366
    DEFAULT     shift, and go to state 367
    RIGHTBRACE  shift, and go to state 385

    ExprCaseClause  go to state 383
    ExprSwitchCase  go to state 370


State 372

  129 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE . IfStmt CloseBlock
  130       | IF OpenBlock SimpleStmt SCOLON Expression Block ELSE . Block CloseBlock

    IF         shift, and go to state 237
    LEFTBRACE  shift, and go to state 124

    Block   go to state 386
    IfStmt  go to state 387


State 373

  126 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block CloseBlock .

    $default  reduce using rule 126 (IfStmt)


State 374

  128 IfStmt: IF OpenBlock Expression Block ELSE Block CloseBlock .

    $default  reduce using rule 128 (IfStmt)


State 375

  127 IfStmt: IF OpenBlock Expression Block ELSE IfStmt CloseBlock .

    $default  reduce using rule 127 (IfStmt)


State 376

  134 ForStmt: FOR OpenBlock Condition forMarker Block forMarkerEnd CloseBlock .

    $default  reduce using rule 134 (ForStmt)


State 377

  132 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON . SimpleStmt Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 315

    $default  reduce using rule 50 (EmptyStmt)

    SimpleStmt      go to state 388
    EmptyStmt       go to state 249
    ExpressionStmt  go to state 250
    IncDecStmt      go to state 251
    Assignment      go to state 252
    ShortVarDecl    go to state 253
    IdentifierList  go to state 254
    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 264
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 265
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 378

  133 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON . SimpleStmt Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    STRUCT              shift, and go to state 61
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 315

    $default  reduce using rule 50 (EmptyStmt)

    SimpleStmt      go to state 389
    EmptyStmt       go to state 249
    ExpressionStmt  go to state 250
    IncDecStmt      go to state 251
    Assignment      go to state 252
    ShortVarDecl    go to state 253
    IdentifierList  go to state 254
    CompositeLit    go to state 107
    LiteralType     go to state 108
    Operand         go to state 109
    OperandName     go to state 110
    SliceType       go to state 71
    Expression      go to state 264
    UnaryExpr       go to state 112
    PrimaryExpr     go to state 113
    MakeExpr        go to state 114
    ExpressionList  go to state 265
    MapType         go to state 72
    StructType      go to state 73
    PointerType     go to state 74
    ArrayType       go to state 75
    Literal         go to state 115
    BasicLit        go to state 116
    String          go to state 117


State 379

  115 ExprSwitchStmt: SWITCH OpenBlock SimpleStmt SCOLON LEFTBRACE $@2 ExprCaseClauseList . RIGHTBRACE CloseBlock
  118 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 366
    DEFAULT     shift, and go to state 367
    RIGHTBRACE  shift, and go to state 390

    ExprCaseClause  go to state 383
    ExprSwitchCase  go to state 370


State 380

  122 ExprSwitchCase: CASE ExpressionList .
  191 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 182

    $default  reduce using rule 122 (ExprSwitchCase)


State 381

  123 ExprSwitchCase: DEFAULT FakeTrue .

    $default  reduce using rule 123 (ExprSwitchCase)


State 382

  113 ExprSwitchStmt: SWITCH OpenBlock FakeTrue LEFTBRACE $@1 ExprCaseClauseList RIGHTBRACE . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 391


State 383

  118 ExprCaseClauseList: ExprCaseClauseList ExprCaseClause .

    $default  reduce using rule 118 (ExprCaseClauseList)


State 384

  120 ExprCaseClause: ExprSwitchCase COLON . StatementList

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    BREAK               shift, and go to state 234
    CONTINUE            shift, and go to state 235
    RETURN              shift, and go to state 236
    STRUCT              shift, and go to state 61
    IF                  shift, and go to state 237
    FOR                 shift, and go to state 238
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 239
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    GOTO                shift, and go to state 240
    FALLTHROUGH         shift, and go to state 241
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTBRACE           shift, and go to state 124
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 242

    $default  reduce using rule 50 (EmptyStmt)

    Block            go to state 243
    StatementList    go to state 392
    Statement        go to state 245
    Declaration      go to state 246
    LabeledStmt      go to state 247
    SimpleStmt       go to state 248
    EmptyStmt        go to state 249
    ExpressionStmt   go to state 250
    IncDecStmt       go to state 251
    Assignment       go to state 252
    ShortVarDecl     go to state 253
    VarDecl          go to state 28
    IdentifierList   go to state 254
    CompositeLit     go to state 107
    LiteralType      go to state 108
    Operand          go to state 109
    OperandName      go to state 110
    SliceType        go to state 71
    ReturnStmt       go to state 255
    BreakStmt        go to state 256
    ContinueStmt     go to state 257
    GotoStmt         go to state 258
    SwitchStmt       go to state 259
    ExprSwitchStmt   go to state 260
    FallthroughStmt  go to state 261
    IfStmt           go to state 262
    ForStmt          go to state 263
    Expression       go to state 264
    UnaryExpr        go to state 112
    PrimaryExpr      go to state 113
    MakeExpr         go to state 114
    ExpressionList   go to state 265
    TypeDecl         go to state 29
    MapType          go to state 72
    StructType       go to state 73
    PointerType      go to state 74
    ArrayType        go to state 75
    Literal          go to state 115
    BasicLit         go to state 116
    String           go to state 117


State 385

  117 ExprSwitchStmt: SWITCH OpenBlock Expression LEFTBRACE $@3 ExprCaseClauseList RIGHTBRACE . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 393


State 386

  130 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE Block . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 394


State 387

  129 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE IfStmt . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 395


State 388

  132 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt . Block forMarkerEnd CloseBlock

    LEFTBRACE  shift, and go to state 124

    Block  go to state 396


State 389

  133 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt . Block forMarkerEnd CloseBlock

    LEFTBRACE  shift, and go to state 124

    Block  go to state 397


State 390

  115 ExprSwitchStmt: SWITCH OpenBlock SimpleStmt SCOLON LEFTBRACE $@2 ExprCaseClauseList RIGHTBRACE . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 398


State 391

  113 ExprSwitchStmt: SWITCH OpenBlock FakeTrue LEFTBRACE $@1 ExprCaseClauseList RIGHTBRACE CloseBlock .

    $default  reduce using rule 113 (ExprSwitchStmt)


State 392

   24 StatementList: StatementList . Statement SCOLON
  120 ExprCaseClause: ExprSwitchCase COLON StatementList .

    INTEGER_VAL         shift, and go to state 92
    FLOAT_VAL           shift, and go to state 93
    TRUE                shift, and go to state 94
    FALSE               shift, and go to state 95
    BREAK               shift, and go to state 234
    CONTINUE            shift, and go to state 235
    RETURN              shift, and go to state 236
    STRUCT              shift, and go to state 61
    IF                  shift, and go to state 237
    FOR                 shift, and go to state 238
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 239
    NEW                 shift, and go to state 96
    MAP                 shift, and go to state 62
    MAKE                shift, and go to state 97
    GOTO                shift, and go to state 240
    FALLTHROUGH         shift, and go to state 241
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 99
    SUB                 shift, and go to state 100
    NOT                 shift, and go to state 101
    MUL                 shift, and go to state 102
    AND                 shift, and go to state 103
    LEFTPARAN           shift, and go to state 105
    LEFTBRACE           shift, and go to state 124
    LEFTSQUARE          shift, and go to state 64
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 106
    IDENTIFIER          shift, and go to state 242

    SCOLON    reduce using rule 50 (EmptyStmt)
    $default  reduce using rule 120 (ExprCaseClause)

    Block            go to state 243
    Statement        go to state 295
    Declaration      go to state 246
    LabeledStmt      go to state 247
    SimpleStmt       go to state 248
    EmptyStmt        go to state 249
    ExpressionStmt   go to state 250
    IncDecStmt       go to state 251
    Assignment       go to state 252
    ShortVarDecl     go to state 253
    VarDecl          go to state 28
    IdentifierList   go to state 254
    CompositeLit     go to state 107
    LiteralType      go to state 108
    Operand          go to state 109
    OperandName      go to state 110
    SliceType        go to state 71
    ReturnStmt       go to state 255
    BreakStmt        go to state 256
    ContinueStmt     go to state 257
    GotoStmt         go to state 258
    SwitchStmt       go to state 259
    ExprSwitchStmt   go to state 260
    FallthroughStmt  go to state 261
    IfStmt           go to state 262
    ForStmt          go to state 263
    Expression       go to state 264
    UnaryExpr        go to state 112
    PrimaryExpr      go to state 113
    MakeExpr         go to state 114
    ExpressionList   go to state 265
    TypeDecl         go to state 29
    MapType          go to state 72
    StructType       go to state 73
    PointerType      go to state 74
    ArrayType        go to state 75
    Literal          go to state 115
    BasicLit         go to state 116
    String           go to state 117


State 393

  117 ExprSwitchStmt: SWITCH OpenBlock Expression LEFTBRACE $@3 ExprCaseClauseList RIGHTBRACE CloseBlock .

    $default  reduce using rule 117 (ExprSwitchStmt)


State 394

  130 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE Block CloseBlock .

    $default  reduce using rule 130 (IfStmt)


State 395

  129 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE IfStmt CloseBlock .

    $default  reduce using rule 129 (IfStmt)


State 396

  132 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block . forMarkerEnd CloseBlock

    $default  reduce using rule 136 (forMarkerEnd)

    forMarkerEnd  go to state 399


State 397

  133 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block . forMarkerEnd CloseBlock

    $default  reduce using rule 136 (forMarkerEnd)

    forMarkerEnd  go to state 400


State 398

  115 ExprSwitchStmt: SWITCH OpenBlock SimpleStmt SCOLON LEFTBRACE $@2 ExprCaseClauseList RIGHTBRACE CloseBlock .

    $default  reduce using rule 115 (ExprSwitchStmt)


State 399

  132 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 401


State 400

  133 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 402


State 401

  132 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock .

    $default  reduce using rule 132 (ForStmt)


State 402

  133 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock .

    $default  reduce using rule 133 (ForStmt)
