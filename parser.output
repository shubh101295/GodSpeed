Nonterminals useless in grammar

    RangeClause


Terminals unused in grammar

    NULLPOINTER
    RANGE
    CONST
    EQ


Rules useless in grammar

  220 RangeClause: RANGE Expression
  221            | IdentifierList INFER_EQ RANGE Expression
  222            | ExpressionList ASSGN_OP RANGE Expression


State 112 conflicts: 1 shift/reduce
State 147 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce, 1 reduce/reduce
State 246 conflicts: 1 reduce/reduce
State 294 conflicts: 19 shift/reduce
State 297 conflicts: 1 reduce/reduce


Grammar

    0 $accept: SourceFile $end

    1 SourceFile: PackageClause SCOLON ImportDeclList TopLevelDeclList

    2 OpenBlock: %empty

    3 CloseBlock: %empty

    4 PackageClause: PACKAGE PackageName

    5 PackageName: IDENTIFIER

    6 ImportDeclList: ImportDeclList ImportDecl SCOLON
    7               | ImportDecl SCOLON

    8 ImportDecl: IMPORT LEFTPARAN ImportSpecList RIGHTPARAN
    9           | IMPORT LEFTPARAN RIGHTPARAN
   10           | IMPORT ImportSpec

   11 ImportSpecList: ImportSpecList ImportSpec SCOLON
   12               | ImportSpec SCOLON

   13 ImportSpec: PackageName ImportPath
   14           | DOT ImportPath
   15           | ImportPath

   16 ImportPath: String

   17 TopLevelDeclList: TopLevelDeclList TopLevelDecl SCOLON
   18                 | TopLevelDecl SCOLON

   19 TopLevelDecl: Declaration
   20             | FunctionDecl
   21             | MethodDecl

   22 Block: LEFTBRACE OpenBlock StatementList CloseBlock RIGHTBRACE

   23 Condition: Expression

   24 StatementList: StatementList Statement SCOLON
   25              | Statement SCOLON

   26 Statement: Declaration
   27          | LabeledStmt
   28          | SimpleStmt
   29          | ReturnStmt
   30          | BreakStmt
   31          | ContinueStmt
   32          | GotoStmt
   33          | SwitchStmt
   34          | FallthroughStmt
   35          | Block
   36          | IfStmt
   37          | ForStmt

   38 Declaration: TypeDecl
   39            | VarDecl

   40 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature FunctionBody CloseBlock
   41             | FUNC IDENTIFIER OpenBlock Signature CloseBlock

   42 MethodDecl: FUNC Receiver IDENTIFIER Signature
   43           | FUNC Receiver IDENTIFIER Signature FunctionBody

   44 LabeledStmt: IDENTIFIER COLON Statement

   45 SimpleStmt: EmptyStmt
   46           | ExpressionStmt
   47           | IncDecStmt
   48           | Assignment
   49           | ShortVarDecl

   50 EmptyStmt: %empty

   51 EmptyExpr: %empty

   52 ExpressionStmt: Expression

   53 IncDecStmt: Expression PLUSPLUS
   54           | Expression MINUSMINUS

   55 Assignment: ExpressionList ASSGN_OP ExpressionList

   56 ShortVarDecl: IdentifierList INFER_EQ ExpressionList

   57 VarDecl: VAR VarSpec
   58        | VAR LEFTPARAN VarSpecList RIGHTPARAN

   59 VarSpecList: VarSpecList VarSpec SCOLON
   60            | VarSpec SCOLON

   61 VarSpec: IdentifierList Type
   62        | IdentifierList Type ASSGN_OP ExpressionList
   63        | IdentifierList ASSGN_OP ExpressionList

   64 FunctionBody: Block

   65 Signature: Parameters
   66          | Parameters Result

   67 Result: LEFTPARAN TypeList RIGHTPARAN
   68       | Type

   69 TypeList: TypeList COMMA Type
   70         | Type

   71 Parameters: LEFTPARAN RIGHTPARAN
   72           | LEFTPARAN ParameterList RIGHTPARAN
   73           | LEFTPARAN ParameterList COMMA RIGHTPARAN

   74 ParameterList: ParameterDecl
   75              | ParameterList COMMA ParameterDecl

   76 ParameterDecl: IdentifierList Type

   77 IdentifierList: IdentifierList COMMA IDENTIFIER
   78               | IDENTIFIER

   79 Receiver: Parameters

   80 CompositeLit: LiteralType LiteralValue

   81 LiteralType: StructType
   82            | ArrayType
   83            | PointerType
   84            | SliceType
   85            | LEFTSQUARE ELIPSIS RIGHTSQUARE Operand
   86            | MapType

   87 Type: LiteralType
   88     | OperandName

   89 Operand: Literal
   90        | OperandName
   91        | LEFTPARAN Expression RIGHTPARAN

   92 OperandName: IDENTIFIER

   93 LiteralValue: LEFTBRACE RIGHTBRACE
   94             | LEFTBRACE ElementList RIGHTBRACE
   95             | LEFTBRACE ElementList COMMA RIGHTBRACE

   96 SliceType: LEFTSQUARE RIGHTSQUARE Type

   97 ElementList: KeyedElement
   98            | ElementList COMMA KeyedElement

   99 KeyedElement: Element
  100             | Key COLON Element

  101 Key: Expression
  102    | LiteralValue

  103 Element: Expression
  104        | LiteralValue

  105 ReturnStmt: RETURN
  106           | RETURN ExpressionList

  107 BreakStmt: BREAK
  108          | BREAK IDENTIFIER

  109 ContinueStmt: CONTINUE
  110             | CONTINUE IDENTIFIER

  111 GotoStmt: GOTO IDENTIFIER

  112 SwitchStmt: ExprSwitchStmt

  113 ExprSwitchStmt: SWITCH LEFTBRACE RIGHTBRACE
  114               | SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE
  115               | SWITCH Expression LEFTBRACE RIGHTBRACE
  116               | SWITCH SimpleStmt SCOLON Expression LEFTBRACE RIGHTBRACE
  117               | SWITCH LEFTBRACE ExprCaseClauseList RIGHTBRACE
  118               | SWITCH SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE
  119               | SWITCH Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE
  120               | SWITCH SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

  121 ExprCaseClauseList: ExprCaseClauseList ExprCaseClause
  122                   | ExprCaseClause

  123 ExprCaseClause: ExprSwitchCase COLON StatementList

  124 ExprSwitchCase: CASE ExpressionList
  125               | DEFAULT

  126 FallthroughStmt: FALLTHROUGH

  127 IfStmt: IF OpenBlock Expression Block CloseBlock
  128       | IF OpenBlock SimpleStmt SCOLON Expression Block CloseBlock
  129       | IF OpenBlock Expression Block ELSE IfStmt CloseBlock
  130       | IF OpenBlock Expression Block ELSE Block CloseBlock
  131       | IF OpenBlock SimpleStmt SCOLON Expression Block ELSE IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt SCOLON Expression Block ELSE Block CloseBlock

  133 ForStmt: FOR forMarker Block forMarkerEnd
  134        | FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  136        | FOR OpenBlock Condition forMarker Block forMarkerEnd CloseBlock
  137        | FOR OpenBlock EmptyStmt Empty forMarker Expression Empty EmptyStmt Block forMarkerEnd CloseBlock

  138 forMarker: %empty

  139 forMarkerEnd: %empty

  140 Empty: %empty

  141 Expression: Expression MUL Expression
  142           | Expression QUOT Expression
  143           | Expression MOD Expression
  144           | Expression SHL Expression
  145           | Expression SHR Expression
  146           | Expression AND Expression
  147           | Expression ANDNOT Expression
  148           | Expression ADD Expression
  149           | Expression SUB Expression
  150           | Expression OR Expression
  151           | Expression XOR Expression
  152           | Expression LOGAND Expression
  153           | Expression LOGOR Expression
  154           | Expression ISEQ Expression
  155           | Expression NEQ Expression
  156           | Expression GRTEQ Expression
  157           | Expression GRT Expression
  158           | Expression LESSEQ Expression
  159           | Expression LESS Expression
  160           | UnaryExpr

  161 UnaryExpr: MUL PrimaryExpr
  162          | AND PrimaryExpr
  163          | ADD PrimaryExpr
  164          | SUB PrimaryExpr
  165          | NOT PrimaryExpr
  166          | PrimaryExpr

  167 PrimaryExpr: Operand
  168            | MakeExpr
  169            | PrimaryExpr Selector
  170            | PrimaryExpr Index
  171            | PrimaryExpr Slice
  172            | PrimaryExpr Arguments
  173            | OperandName StructLiteral
  174            | PrimaryExpr TypeAssertion

  175 StructLiteral: LEFTBRACE KeyValueList RIGHTBRACE

  176 KeyValueList: Expression COLON Expression
  177             | Expression COLON Expression COMMA KeyValueList

  178 Selector: DOT IDENTIFIER

  179 Index: LEFTSQUARE Expression RIGHTSQUARE

  180 Slice: LEFTSQUARE COLON Expression RIGHTSQUARE
  181      | LEFTSQUARE COLON RIGHTSQUARE
  182      | LEFTSQUARE Expression COLON RIGHTSQUARE
  183      | LEFTSQUARE Expression COLON Expression RIGHTSQUARE
  184      | LEFTSQUARE COLON Expression COLON Expression RIGHTSQUARE
  185      | LEFTSQUARE Expression COLON Expression COLON Expression RIGHTSQUARE

  186 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN
  187         | MAKE LEFTPARAN Type COMMA Expression RIGHTPARAN
  188         | MAKE LEFTPARAN Type RIGHTPARAN
  189         | NEW LEFTPARAN Type RIGHTPARAN

  190 TypeAssertion: DOT LEFTPARAN Type RIGHTPARAN

  191 Arguments: LEFTPARAN RIGHTPARAN
  192          | LEFTPARAN ExpressionList RIGHTPARAN
  193          | LEFTPARAN ExpressionList ELIPSIS RIGHTPARAN

  194 ExpressionList: Expression
  195               | ExpressionList COMMA Expression

  196 TypeDecl: TYPE LEFTPARAN TypeSpec SCOLON RIGHTPARAN
  197         | TYPE TypeSpec

  198 TypeSpec: TypeDef

  199 TypeDef: IDENTIFIER Type

  200 MapType: MAP LEFTSQUARE Type RIGHTSQUARE Type

  201 StructType: STRUCT LEFTBRACE FieldDeclList RIGHTBRACE
  202           | STRUCT LEFTBRACE RIGHTBRACE

  203 FieldDeclList: FieldDecl SCOLON
  204              | FieldDeclList FieldDecl SCOLON

  205 FieldDecl: IdentifierList Type String
  206          | IdentifierList Type

  207 PointerType: MUL BaseType

  208 BaseType: Type

  209 ArrayType: LEFTSQUARE Expression RIGHTSQUARE Type

  210 Literal: BasicLit
  211        | CompositeLit

  212 BasicLit: INTEGER_VAL
  213         | FLOAT_VAL
  214         | BYTE_VAL
  215         | String
  216         | TRUE
  217         | FALSE

  218 String: RAW_STRING
  219       | INTERPRETED_STRING


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER_VAL <sval> (258) 212
    FLOAT_VAL <sval> (259) 213
    TRUE <sval> (260) 216
    FALSE <sval> (261) 217
    NULLPOINTER <sval> (262)
    BREAK <sval> (263) 107 108
    CONTINUE <sval> (264) 109 110
    RETURN <sval> (265) 105 106
    SCOLON <sval> (266) 1 6 7 11 12 17 18 24 25 59 60 114 116 118 120 128 131 132 134 135 196 203 204
    FUNC <sval> (267) 40 41 42 43
    STRUCT <sval> (268) 201 202
    ELSE <sval> (269) 129 130 131 132
    PACKAGE <sval> (270) 4
    IF <sval> (271) 127 128 129 130 131 132
    FOR <sval> (272) 133 134 135 136 137
    RANGE <sval> (273)
    IMPORT <sval> (274) 8 9 10
    VAR <sval> (275) 57 58
    SWITCH <sval> (276) 113 114 115 116 117 118 119 120
    CASE <sval> (277) 124
    NEW <sval> (278) 189
    CONST <sval> (279)
    MAP <sval> (280) 200
    DEFAULT <sval> (281) 125
    MAKE <sval> (282) 186 187 188
    GOTO <sval> (283) 111
    FALLTHROUGH <sval> (284) 126
    TYPE <sval> (285) 196 197
    PLUSPLUS <sval> (286) 53
    MINUSMINUS <sval> (287) 54
    ANDNOT <sval> (288) 147
    ELIPSIS <sval> (289) 85 193
    ADD <sval> (290) 148 163
    SUB <sval> (291) 149 164
    NOT <sval> (292) 165
    XOR <sval> (293) 151
    MUL <sval> (294) 141 161 207
    AND <sval> (295) 146 162
    OR <sval> (296) 150
    LOGOR <sval> (297) 153
    LOGAND <sval> (298) 152
    ISEQ <sval> (299) 154
    NEQ <sval> (300) 155
    LESSEQ <sval> (301) 158
    GRTEQ <sval> (302) 156
    GRT <sval> (303) 157
    LESS <sval> (304) 159
    MOD <sval> (305) 143
    QUOT <sval> (306) 142
    SHL <sval> (307) 144
    SHR <sval> (308) 145
    EQ <sval> (309)
    INFER_EQ <sval> (310) 56
    RIGHTPARAN <sval> (311) 8 9 58 67 71 72 73 91 186 187 188 189 190 191 192 193 196
    RIGHTBRACE <sval> (312) 22 93 94 95 113 114 115 116 117 118 119 120 175 201 202
    RIGHTSQUARE <sval> (313) 85 96 179 180 181 182 183 184 185 200 209
    LEFTPARAN <sval> (314) 8 9 58 67 71 72 73 91 186 187 188 189 190 191 192 193 196
    LEFTBRACE <sval> (315) 22 93 94 95 113 114 115 116 117 118 119 120 175 201 202
    LEFTSQUARE <sval> (316) 85 96 179 180 181 182 183 184 185 200 209
    COLON <sval> (317) 44 100 123 176 177 180 181 182 183 184 185
    DOT <sval> (318) 14 178 190
    COMMA <sval> (319) 69 73 75 77 95 98 177 186 187 195
    RAW_STRING <sval> (320) 218
    INTERPRETED_STRING <sval> (321) 219
    BYTE_VAL <sval> (322) 214
    IDENTIFIER <sval> (323) 5 40 41 42 43 44 77 78 92 108 110 111 178 199
    ASSGN_OP <sval> (324) 55 62 63


Nonterminals, with rules where they appear

    $accept (70)
        on left: 0
    SourceFile <nt> (71)
        on left: 1
        on right: 0
    OpenBlock (72)
        on left: 2
        on right: 22 40 41 127 128 129 130 131 132 134 135 136 137
    CloseBlock (73)
        on left: 3
        on right: 22 40 41 127 128 129 130 131 132 134 135 136 137
    PackageClause <nt> (74)
        on left: 4
        on right: 1
    PackageName <nt> (75)
        on left: 5
        on right: 4 13
    ImportDeclList <nt> (76)
        on left: 6 7
        on right: 1 6
    ImportDecl <nt> (77)
        on left: 8 9 10
        on right: 6 7
    ImportSpecList <nt> (78)
        on left: 11 12
        on right: 8 11
    ImportSpec <nt> (79)
        on left: 13 14 15
        on right: 10 11 12
    ImportPath <nt> (80)
        on left: 16
        on right: 13 14 15
    TopLevelDeclList <nt> (81)
        on left: 17 18
        on right: 1 17
    TopLevelDecl <nt> (82)
        on left: 19 20 21
        on right: 17 18
    Block <nt> (83)
        on left: 22
        on right: 35 64 127 128 129 130 131 132 133 134 135 136 137
    Condition <nt> (84)
        on left: 23
        on right: 136
    StatementList <nt> (85)
        on left: 24 25
        on right: 22 24 123
    Statement <nt> (86)
        on left: 26 27 28 29 30 31 32 33 34 35 36 37
        on right: 24 25 44
    Declaration <nt> (87)
        on left: 38 39
        on right: 19 26
    FunctionDecl <nt> (88)
        on left: 40 41
        on right: 20
    MethodDecl <nt> (89)
        on left: 42 43
        on right: 21
    LabeledStmt <nt> (90)
        on left: 44
        on right: 27
    SimpleStmt <nt> (91)
        on left: 45 46 47 48 49
        on right: 28 114 116 118 120 128 131 132 134 135
    EmptyStmt <nt> (92)
        on left: 50
        on right: 45 137
    EmptyExpr <nt> (93)
        on left: 51
        on right: 134
    ExpressionStmt <nt> (94)
        on left: 52
        on right: 46 135
    IncDecStmt <nt> (95)
        on left: 53 54
        on right: 47
    Assignment <nt> (96)
        on left: 55
        on right: 48
    ShortVarDecl <nt> (97)
        on left: 56
        on right: 49
    VarDecl <nt> (98)
        on left: 57 58
        on right: 39
    VarSpecList <nt> (99)
        on left: 59 60
        on right: 58 59
    VarSpec <nt> (100)
        on left: 61 62 63
        on right: 57 59 60
    FunctionBody <nt> (101)
        on left: 64
        on right: 40 43
    Signature <nt> (102)
        on left: 65 66
        on right: 40 41 42 43
    Result <nt> (103)
        on left: 67 68
        on right: 66
    TypeList <nt> (104)
        on left: 69 70
        on right: 67 69
    Parameters <nt> (105)
        on left: 71 72 73
        on right: 65 66 79
    ParameterList <nt> (106)
        on left: 74 75
        on right: 72 73 75
    ParameterDecl <nt> (107)
        on left: 76
        on right: 74 75
    IdentifierList <nt> (108)
        on left: 77 78
        on right: 56 61 62 63 76 77 205 206
    Receiver <nt> (109)
        on left: 79
        on right: 42 43
    CompositeLit <nt> (110)
        on left: 80
        on right: 211
    LiteralType <nt> (111)
        on left: 81 82 83 84 85 86
        on right: 80 87
    Type <nt> (112)
        on left: 87 88
        on right: 61 62 68 69 70 76 96 186 187 188 189 190 199 200 205 206 208 209
    Operand <nt> (113)
        on left: 89 90 91
        on right: 85 167
    OperandName <nt> (114)
        on left: 92
        on right: 88 90 173
    LiteralValue <nt> (115)
        on left: 93 94 95
        on right: 80 102 104
    SliceType <nt> (116)
        on left: 96
        on right: 84
    ElementList <nt> (117)
        on left: 97 98
        on right: 94 95 98
    KeyedElement <nt> (118)
        on left: 99 100
        on right: 97 98
    Key <nt> (119)
        on left: 101 102
        on right: 100
    Element <nt> (120)
        on left: 103 104
        on right: 99 100
    ReturnStmt <nt> (121)
        on left: 105 106
        on right: 29
    BreakStmt <nt> (122)
        on left: 107 108
        on right: 30
    ContinueStmt <nt> (123)
        on left: 109 110
        on right: 31
    GotoStmt <nt> (124)
        on left: 111
        on right: 32
    SwitchStmt <nt> (125)
        on left: 112
        on right: 33
    ExprSwitchStmt <nt> (126)
        on left: 113 114 115 116 117 118 119 120
        on right: 112
    ExprCaseClauseList <nt> (127)
        on left: 121 122
        on right: 117 118 119 120 121
    ExprCaseClause <nt> (128)
        on left: 123
        on right: 121 122
    ExprSwitchCase <nt> (129)
        on left: 124 125
        on right: 123
    FallthroughStmt <nt> (130)
        on left: 126
        on right: 34
    IfStmt <nt> (131)
        on left: 127 128 129 130 131 132
        on right: 36 129 131
    ForStmt <nt> (132)
        on left: 133 134 135 136 137
        on right: 37
    forMarker <nt> (133)
        on left: 138
        on right: 133 134 135 136 137
    forMarkerEnd <nt> (134)
        on left: 139
        on right: 133 134 135 136 137
    Empty <nt> (135)
        on left: 140
        on right: 137
    Expression <nt> (136)
        on left: 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160
        on right: 23 52 53 54 91 101 103 115 116 119 120 127 128 129 130 131 132 137 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 176 177 179 180 182 183 184 185 186 187 194 195 209
    UnaryExpr <nt> (137)
        on left: 161 162 163 164 165 166
        on right: 160
    PrimaryExpr <nt> (138)
        on left: 167 168 169 170 171 172 173 174
        on right: 161 162 163 164 165 166 169 170 171 172 174
    StructLiteral <nt> (139)
        on left: 175
        on right: 173
    KeyValueList <nt> (140)
        on left: 176 177
        on right: 175 177
    Selector <nt> (141)
        on left: 178
        on right: 169
    Index <nt> (142)
        on left: 179
        on right: 170
    Slice <nt> (143)
        on left: 180 181 182 183 184 185
        on right: 171
    MakeExpr <nt> (144)
        on left: 186 187 188 189
        on right: 168
    TypeAssertion <nt> (145)
        on left: 190
        on right: 174
    Arguments <nt> (146)
        on left: 191 192 193
        on right: 172
    ExpressionList <nt> (147)
        on left: 194 195
        on right: 55 56 62 63 106 124 192 193 195
    TypeDecl <nt> (148)
        on left: 196 197
        on right: 38
    TypeSpec <nt> (149)
        on left: 198
        on right: 196 197
    TypeDef <nt> (150)
        on left: 199
        on right: 198
    MapType <nt> (151)
        on left: 200
        on right: 86
    StructType <nt> (152)
        on left: 201 202
        on right: 81
    FieldDeclList <nt> (153)
        on left: 203 204
        on right: 201 204
    FieldDecl <nt> (154)
        on left: 205 206
        on right: 203 204
    PointerType <nt> (155)
        on left: 207
        on right: 83
    BaseType <nt> (156)
        on left: 208
        on right: 207
    ArrayType <nt> (157)
        on left: 209
        on right: 82
    Literal <nt> (158)
        on left: 210 211
        on right: 89
    BasicLit <nt> (159)
        on left: 212 213 214 215 216 217
        on right: 210
    String <nt> (160)
        on left: 218 219
        on right: 16 205 215


State 0

    0 $accept: • SourceFile $end

    PACKAGE  shift, and go to state 1

    SourceFile     go to state 2
    PackageClause  go to state 3


State 1

    4 PackageClause: PACKAGE • PackageName

    IDENTIFIER  shift, and go to state 4

    PackageName  go to state 5


State 2

    0 $accept: SourceFile • $end

    $end  shift, and go to state 6


State 3

    1 SourceFile: PackageClause • SCOLON ImportDeclList TopLevelDeclList

    SCOLON  shift, and go to state 7


State 4

    5 PackageName: IDENTIFIER •

    $default  reduce using rule 5 (PackageName)


State 5

    4 PackageClause: PACKAGE PackageName •

    $default  reduce using rule 4 (PackageClause)


State 6

    0 $accept: SourceFile $end •

    $default  accept


State 7

    1 SourceFile: PackageClause SCOLON • ImportDeclList TopLevelDeclList

    IMPORT  shift, and go to state 8

    ImportDeclList  go to state 9
    ImportDecl      go to state 10


State 8

    8 ImportDecl: IMPORT • LEFTPARAN ImportSpecList RIGHTPARAN
    9           | IMPORT • LEFTPARAN RIGHTPARAN
   10           | IMPORT • ImportSpec

    LEFTPARAN           shift, and go to state 11
    DOT                 shift, and go to state 12
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    IDENTIFIER          shift, and go to state 4

    PackageName  go to state 15
    ImportSpec   go to state 16
    ImportPath   go to state 17
    String       go to state 18


State 9

    1 SourceFile: PackageClause SCOLON ImportDeclList • TopLevelDeclList
    6 ImportDeclList: ImportDeclList • ImportDecl SCOLON

    FUNC    shift, and go to state 19
    IMPORT  shift, and go to state 8
    VAR     shift, and go to state 20
    TYPE    shift, and go to state 21

    ImportDecl        go to state 22
    TopLevelDeclList  go to state 23
    TopLevelDecl      go to state 24
    Declaration       go to state 25
    FunctionDecl      go to state 26
    MethodDecl        go to state 27
    VarDecl           go to state 28
    TypeDecl          go to state 29


State 10

    7 ImportDeclList: ImportDecl • SCOLON

    SCOLON  shift, and go to state 30


State 11

    8 ImportDecl: IMPORT LEFTPARAN • ImportSpecList RIGHTPARAN
    9           | IMPORT LEFTPARAN • RIGHTPARAN

    RIGHTPARAN          shift, and go to state 31
    DOT                 shift, and go to state 12
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 15
    ImportSpecList  go to state 32
    ImportSpec      go to state 33
    ImportPath      go to state 17
    String          go to state 18


State 12

   14 ImportSpec: DOT • ImportPath

    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14

    ImportPath  go to state 34
    String      go to state 18


State 13

  218 String: RAW_STRING •

    $default  reduce using rule 218 (String)


State 14

  219 String: INTERPRETED_STRING •

    $default  reduce using rule 219 (String)


State 15

   13 ImportSpec: PackageName • ImportPath

    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14

    ImportPath  go to state 35
    String      go to state 18


State 16

   10 ImportDecl: IMPORT ImportSpec •

    $default  reduce using rule 10 (ImportDecl)


State 17

   15 ImportSpec: ImportPath •

    $default  reduce using rule 15 (ImportSpec)


State 18

   16 ImportPath: String •

    $default  reduce using rule 16 (ImportPath)


State 19

   40 FunctionDecl: FUNC • IDENTIFIER OpenBlock Signature FunctionBody CloseBlock
   41             | FUNC • IDENTIFIER OpenBlock Signature CloseBlock
   42 MethodDecl: FUNC • Receiver IDENTIFIER Signature
   43           | FUNC • Receiver IDENTIFIER Signature FunctionBody

    LEFTPARAN   shift, and go to state 36
    IDENTIFIER  shift, and go to state 37

    Parameters  go to state 38
    Receiver    go to state 39


State 20

   57 VarDecl: VAR • VarSpec
   58        | VAR • LEFTPARAN VarSpecList RIGHTPARAN

    LEFTPARAN   shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    VarSpec         go to state 42
    IdentifierList  go to state 43


State 21

  196 TypeDecl: TYPE • LEFTPARAN TypeSpec SCOLON RIGHTPARAN
  197         | TYPE • TypeSpec

    LEFTPARAN   shift, and go to state 44
    IDENTIFIER  shift, and go to state 45

    TypeSpec  go to state 46
    TypeDef   go to state 47


State 22

    6 ImportDeclList: ImportDeclList ImportDecl • SCOLON

    SCOLON  shift, and go to state 48


State 23

    1 SourceFile: PackageClause SCOLON ImportDeclList TopLevelDeclList •
   17 TopLevelDeclList: TopLevelDeclList • TopLevelDecl SCOLON

    FUNC  shift, and go to state 19
    VAR   shift, and go to state 20
    TYPE  shift, and go to state 21

    $default  reduce using rule 1 (SourceFile)

    TopLevelDecl  go to state 49
    Declaration   go to state 25
    FunctionDecl  go to state 26
    MethodDecl    go to state 27
    VarDecl       go to state 28
    TypeDecl      go to state 29


State 24

   18 TopLevelDeclList: TopLevelDecl • SCOLON

    SCOLON  shift, and go to state 50


State 25

   19 TopLevelDecl: Declaration •

    $default  reduce using rule 19 (TopLevelDecl)


State 26

   20 TopLevelDecl: FunctionDecl •

    $default  reduce using rule 20 (TopLevelDecl)


State 27

   21 TopLevelDecl: MethodDecl •

    $default  reduce using rule 21 (TopLevelDecl)


State 28

   39 Declaration: VarDecl •

    $default  reduce using rule 39 (Declaration)


State 29

   38 Declaration: TypeDecl •

    $default  reduce using rule 38 (Declaration)


State 30

    7 ImportDeclList: ImportDecl SCOLON •

    $default  reduce using rule 7 (ImportDeclList)


State 31

    9 ImportDecl: IMPORT LEFTPARAN RIGHTPARAN •

    $default  reduce using rule 9 (ImportDecl)


State 32

    8 ImportDecl: IMPORT LEFTPARAN ImportSpecList • RIGHTPARAN
   11 ImportSpecList: ImportSpecList • ImportSpec SCOLON

    RIGHTPARAN          shift, and go to state 51
    DOT                 shift, and go to state 12
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    IDENTIFIER          shift, and go to state 4

    PackageName  go to state 15
    ImportSpec   go to state 52
    ImportPath   go to state 17
    String       go to state 18


State 33

   12 ImportSpecList: ImportSpec • SCOLON

    SCOLON  shift, and go to state 53


State 34

   14 ImportSpec: DOT ImportPath •

    $default  reduce using rule 14 (ImportSpec)


State 35

   13 ImportSpec: PackageName ImportPath •

    $default  reduce using rule 13 (ImportSpec)


State 36

   71 Parameters: LEFTPARAN • RIGHTPARAN
   72           | LEFTPARAN • ParameterList RIGHTPARAN
   73           | LEFTPARAN • ParameterList COMMA RIGHTPARAN

    RIGHTPARAN  shift, and go to state 54
    IDENTIFIER  shift, and go to state 41

    ParameterList   go to state 55
    ParameterDecl   go to state 56
    IdentifierList  go to state 57


State 37

   40 FunctionDecl: FUNC IDENTIFIER • OpenBlock Signature FunctionBody CloseBlock
   41             | FUNC IDENTIFIER • OpenBlock Signature CloseBlock

    $default  reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 58


State 38

   79 Receiver: Parameters •

    $default  reduce using rule 79 (Receiver)


State 39

   42 MethodDecl: FUNC Receiver • IDENTIFIER Signature
   43           | FUNC Receiver • IDENTIFIER Signature FunctionBody

    IDENTIFIER  shift, and go to state 59


State 40

   58 VarDecl: VAR LEFTPARAN • VarSpecList RIGHTPARAN

    IDENTIFIER  shift, and go to state 41

    VarSpecList     go to state 60
    VarSpec         go to state 61
    IdentifierList  go to state 43


State 41

   78 IdentifierList: IDENTIFIER •

    $default  reduce using rule 78 (IdentifierList)


State 42

   57 VarDecl: VAR VarSpec •

    $default  reduce using rule 57 (VarDecl)


State 43

   61 VarSpec: IdentifierList • Type
   62        | IdentifierList • Type ASSGN_OP ExpressionList
   63        | IdentifierList • ASSGN_OP ExpressionList
   77 IdentifierList: IdentifierList • COMMA IDENTIFIER

    STRUCT      shift, and go to state 62
    MAP         shift, and go to state 63
    MUL         shift, and go to state 64
    LEFTSQUARE  shift, and go to state 65
    COMMA       shift, and go to state 66
    IDENTIFIER  shift, and go to state 67
    ASSGN_OP    shift, and go to state 68

    LiteralType  go to state 69
    Type         go to state 70
    OperandName  go to state 71
    SliceType    go to state 72
    MapType      go to state 73
    StructType   go to state 74
    PointerType  go to state 75
    ArrayType    go to state 76


State 44

  196 TypeDecl: TYPE LEFTPARAN • TypeSpec SCOLON RIGHTPARAN

    IDENTIFIER  shift, and go to state 45

    TypeSpec  go to state 77
    TypeDef   go to state 47


State 45

  199 TypeDef: IDENTIFIER • Type

    STRUCT      shift, and go to state 62
    MAP         shift, and go to state 63
    MUL         shift, and go to state 64
    LEFTSQUARE  shift, and go to state 65
    IDENTIFIER  shift, and go to state 67

    LiteralType  go to state 69
    Type         go to state 78
    OperandName  go to state 71
    SliceType    go to state 72
    MapType      go to state 73
    StructType   go to state 74
    PointerType  go to state 75
    ArrayType    go to state 76


State 46

  197 TypeDecl: TYPE TypeSpec •

    $default  reduce using rule 197 (TypeDecl)


State 47

  198 TypeSpec: TypeDef •

    $default  reduce using rule 198 (TypeSpec)


State 48

    6 ImportDeclList: ImportDeclList ImportDecl SCOLON •

    $default  reduce using rule 6 (ImportDeclList)


State 49

   17 TopLevelDeclList: TopLevelDeclList TopLevelDecl • SCOLON

    SCOLON  shift, and go to state 79


State 50

   18 TopLevelDeclList: TopLevelDecl SCOLON •

    $default  reduce using rule 18 (TopLevelDeclList)


State 51

    8 ImportDecl: IMPORT LEFTPARAN ImportSpecList RIGHTPARAN •

    $default  reduce using rule 8 (ImportDecl)


State 52

   11 ImportSpecList: ImportSpecList ImportSpec • SCOLON

    SCOLON  shift, and go to state 80


State 53

   12 ImportSpecList: ImportSpec SCOLON •

    $default  reduce using rule 12 (ImportSpecList)


State 54

   71 Parameters: LEFTPARAN RIGHTPARAN •

    $default  reduce using rule 71 (Parameters)


State 55

   72 Parameters: LEFTPARAN ParameterList • RIGHTPARAN
   73           | LEFTPARAN ParameterList • COMMA RIGHTPARAN
   75 ParameterList: ParameterList • COMMA ParameterDecl

    RIGHTPARAN  shift, and go to state 81
    COMMA       shift, and go to state 82


State 56

   74 ParameterList: ParameterDecl •

    $default  reduce using rule 74 (ParameterList)


State 57

   76 ParameterDecl: IdentifierList • Type
   77 IdentifierList: IdentifierList • COMMA IDENTIFIER

    STRUCT      shift, and go to state 62
    MAP         shift, and go to state 63
    MUL         shift, and go to state 64
    LEFTSQUARE  shift, and go to state 65
    COMMA       shift, and go to state 66
    IDENTIFIER  shift, and go to state 67

    LiteralType  go to state 69
    Type         go to state 83
    OperandName  go to state 71
    SliceType    go to state 72
    MapType      go to state 73
    StructType   go to state 74
    PointerType  go to state 75
    ArrayType    go to state 76


State 58

   40 FunctionDecl: FUNC IDENTIFIER OpenBlock • Signature FunctionBody CloseBlock
   41             | FUNC IDENTIFIER OpenBlock • Signature CloseBlock

    LEFTPARAN  shift, and go to state 36

    Signature   go to state 84
    Parameters  go to state 85


State 59

   42 MethodDecl: FUNC Receiver IDENTIFIER • Signature
   43           | FUNC Receiver IDENTIFIER • Signature FunctionBody

    LEFTPARAN  shift, and go to state 36

    Signature   go to state 86
    Parameters  go to state 85


State 60

   58 VarDecl: VAR LEFTPARAN VarSpecList • RIGHTPARAN
   59 VarSpecList: VarSpecList • VarSpec SCOLON

    RIGHTPARAN  shift, and go to state 87
    IDENTIFIER  shift, and go to state 41

    VarSpec         go to state 88
    IdentifierList  go to state 43


State 61

   60 VarSpecList: VarSpec • SCOLON

    SCOLON  shift, and go to state 89


State 62

  201 StructType: STRUCT • LEFTBRACE FieldDeclList RIGHTBRACE
  202           | STRUCT • LEFTBRACE RIGHTBRACE

    LEFTBRACE  shift, and go to state 90


State 63

  200 MapType: MAP • LEFTSQUARE Type RIGHTSQUARE Type

    LEFTSQUARE  shift, and go to state 91


State 64

  207 PointerType: MUL • BaseType

    STRUCT      shift, and go to state 62
    MAP         shift, and go to state 63
    MUL         shift, and go to state 64
    LEFTSQUARE  shift, and go to state 65
    IDENTIFIER  shift, and go to state 67

    LiteralType  go to state 69
    Type         go to state 92
    OperandName  go to state 71
    SliceType    go to state 72
    MapType      go to state 73
    StructType   go to state 74
    PointerType  go to state 75
    BaseType     go to state 93
    ArrayType    go to state 76


State 65

   85 LiteralType: LEFTSQUARE • ELIPSIS RIGHTSQUARE Operand
   96 SliceType: LEFTSQUARE • RIGHTSQUARE Type
  209 ArrayType: LEFTSQUARE • Expression RIGHTSQUARE Type

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ELIPSIS             shift, and go to state 100
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    RIGHTSQUARE         shift, and go to state 106
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 113
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 66

   77 IdentifierList: IdentifierList COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 120


State 67

   92 OperandName: IDENTIFIER •

    $default  reduce using rule 92 (OperandName)


State 68

   63 VarSpec: IdentifierList ASSGN_OP • ExpressionList

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit    go to state 109
    LiteralType     go to state 110
    Operand         go to state 111
    OperandName     go to state 112
    SliceType       go to state 72
    Expression      go to state 121
    UnaryExpr       go to state 114
    PrimaryExpr     go to state 115
    MakeExpr        go to state 116
    ExpressionList  go to state 122
    MapType         go to state 73
    StructType      go to state 74
    PointerType     go to state 75
    ArrayType       go to state 76
    Literal         go to state 117
    BasicLit        go to state 118
    String          go to state 119


State 69

   87 Type: LiteralType •

    $default  reduce using rule 87 (Type)


State 70

   61 VarSpec: IdentifierList Type •
   62        | IdentifierList Type • ASSGN_OP ExpressionList

    ASSGN_OP  shift, and go to state 123

    $default  reduce using rule 61 (VarSpec)


State 71

   88 Type: OperandName •

    $default  reduce using rule 88 (Type)


State 72

   84 LiteralType: SliceType •

    $default  reduce using rule 84 (LiteralType)


State 73

   86 LiteralType: MapType •

    $default  reduce using rule 86 (LiteralType)


State 74

   81 LiteralType: StructType •

    $default  reduce using rule 81 (LiteralType)


State 75

   83 LiteralType: PointerType •

    $default  reduce using rule 83 (LiteralType)


State 76

   82 LiteralType: ArrayType •

    $default  reduce using rule 82 (LiteralType)


State 77

  196 TypeDecl: TYPE LEFTPARAN TypeSpec • SCOLON RIGHTPARAN

    SCOLON  shift, and go to state 124


State 78

  199 TypeDef: IDENTIFIER Type •

    $default  reduce using rule 199 (TypeDef)


State 79

   17 TopLevelDeclList: TopLevelDeclList TopLevelDecl SCOLON •

    $default  reduce using rule 17 (TopLevelDeclList)


State 80

   11 ImportSpecList: ImportSpecList ImportSpec SCOLON •

    $default  reduce using rule 11 (ImportSpecList)


State 81

   72 Parameters: LEFTPARAN ParameterList RIGHTPARAN •

    $default  reduce using rule 72 (Parameters)


State 82

   73 Parameters: LEFTPARAN ParameterList COMMA • RIGHTPARAN
   75 ParameterList: ParameterList COMMA • ParameterDecl

    RIGHTPARAN  shift, and go to state 125
    IDENTIFIER  shift, and go to state 41

    ParameterDecl   go to state 126
    IdentifierList  go to state 57


State 83

   76 ParameterDecl: IdentifierList Type •

    $default  reduce using rule 76 (ParameterDecl)


State 84

   40 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature • FunctionBody CloseBlock
   41             | FUNC IDENTIFIER OpenBlock Signature • CloseBlock

    LEFTBRACE  shift, and go to state 127

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock    go to state 128
    Block         go to state 129
    FunctionBody  go to state 130


State 85

   65 Signature: Parameters •
   66          | Parameters • Result

    STRUCT      shift, and go to state 62
    MAP         shift, and go to state 63
    MUL         shift, and go to state 64
    LEFTPARAN   shift, and go to state 131
    LEFTSQUARE  shift, and go to state 65
    IDENTIFIER  shift, and go to state 67

    $default  reduce using rule 65 (Signature)

    Result       go to state 132
    LiteralType  go to state 69
    Type         go to state 133
    OperandName  go to state 71
    SliceType    go to state 72
    MapType      go to state 73
    StructType   go to state 74
    PointerType  go to state 75
    ArrayType    go to state 76


State 86

   42 MethodDecl: FUNC Receiver IDENTIFIER Signature •
   43           | FUNC Receiver IDENTIFIER Signature • FunctionBody

    LEFTBRACE  shift, and go to state 127

    $default  reduce using rule 42 (MethodDecl)

    Block         go to state 129
    FunctionBody  go to state 134


State 87

   58 VarDecl: VAR LEFTPARAN VarSpecList RIGHTPARAN •

    $default  reduce using rule 58 (VarDecl)


State 88

   59 VarSpecList: VarSpecList VarSpec • SCOLON

    SCOLON  shift, and go to state 135


State 89

   60 VarSpecList: VarSpec SCOLON •

    $default  reduce using rule 60 (VarSpecList)


State 90

  201 StructType: STRUCT LEFTBRACE • FieldDeclList RIGHTBRACE
  202           | STRUCT LEFTBRACE • RIGHTBRACE

    RIGHTBRACE  shift, and go to state 136
    IDENTIFIER  shift, and go to state 41

    IdentifierList  go to state 137
    FieldDeclList   go to state 138
    FieldDecl       go to state 139


State 91

  200 MapType: MAP LEFTSQUARE • Type RIGHTSQUARE Type

    STRUCT      shift, and go to state 62
    MAP         shift, and go to state 63
    MUL         shift, and go to state 64
    LEFTSQUARE  shift, and go to state 65
    IDENTIFIER  shift, and go to state 67

    LiteralType  go to state 69
    Type         go to state 140
    OperandName  go to state 71
    SliceType    go to state 72
    MapType      go to state 73
    StructType   go to state 74
    PointerType  go to state 75
    ArrayType    go to state 76


State 92

  208 BaseType: Type •

    $default  reduce using rule 208 (BaseType)


State 93

  207 PointerType: MUL BaseType •

    $default  reduce using rule 207 (PointerType)


State 94

  212 BasicLit: INTEGER_VAL •

    $default  reduce using rule 212 (BasicLit)


State 95

  213 BasicLit: FLOAT_VAL •

    $default  reduce using rule 213 (BasicLit)


State 96

  216 BasicLit: TRUE •

    $default  reduce using rule 216 (BasicLit)


State 97

  217 BasicLit: FALSE •

    $default  reduce using rule 217 (BasicLit)


State 98

  189 MakeExpr: NEW • LEFTPARAN Type RIGHTPARAN

    LEFTPARAN  shift, and go to state 141


State 99

  186 MakeExpr: MAKE • LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN
  187         | MAKE • LEFTPARAN Type COMMA Expression RIGHTPARAN
  188         | MAKE • LEFTPARAN Type RIGHTPARAN

    LEFTPARAN  shift, and go to state 142


State 100

   85 LiteralType: LEFTSQUARE ELIPSIS • RIGHTSQUARE Operand

    RIGHTSQUARE  shift, and go to state 143


State 101

  163 UnaryExpr: ADD • PrimaryExpr

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    MUL                 shift, and go to state 64
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    PrimaryExpr   go to state 144
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 102

  164 UnaryExpr: SUB • PrimaryExpr

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    MUL                 shift, and go to state 64
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    PrimaryExpr   go to state 145
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 103

  165 UnaryExpr: NOT • PrimaryExpr

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    MUL                 shift, and go to state 64
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    PrimaryExpr   go to state 146
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 104

  161 UnaryExpr: MUL • PrimaryExpr
  207 PointerType: MUL • BaseType

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    MUL                 shift, and go to state 64
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 147
    Type          go to state 92
    Operand       go to state 111
    OperandName   go to state 148
    SliceType     go to state 72
    PrimaryExpr   go to state 149
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    BaseType      go to state 93
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 105

  162 UnaryExpr: AND • PrimaryExpr

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    MUL                 shift, and go to state 64
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    PrimaryExpr   go to state 150
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 106

   96 SliceType: LEFTSQUARE RIGHTSQUARE • Type

    STRUCT      shift, and go to state 62
    MAP         shift, and go to state 63
    MUL         shift, and go to state 64
    LEFTSQUARE  shift, and go to state 65
    IDENTIFIER  shift, and go to state 67

    LiteralType  go to state 69
    Type         go to state 151
    OperandName  go to state 71
    SliceType    go to state 72
    MapType      go to state 73
    StructType   go to state 74
    PointerType  go to state 75
    ArrayType    go to state 76


State 107

   91 Operand: LEFTPARAN • Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 152
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 108

  214 BasicLit: BYTE_VAL •

    $default  reduce using rule 214 (BasicLit)


State 109

  211 Literal: CompositeLit •

    $default  reduce using rule 211 (Literal)


State 110

   80 CompositeLit: LiteralType • LiteralValue

    LEFTBRACE  shift, and go to state 153

    LiteralValue  go to state 154


State 111

  167 PrimaryExpr: Operand •

    $default  reduce using rule 167 (PrimaryExpr)


State 112

   90 Operand: OperandName •
  173 PrimaryExpr: OperandName • StructLiteral

    LEFTBRACE  shift, and go to state 155

    LEFTBRACE  [reduce using rule 90 (Operand)]
    $default   reduce using rule 90 (Operand)

    StructLiteral  go to state 156


State 113

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression
  209 ArrayType: LEFTSQUARE Expression • RIGHTSQUARE Type

    ANDNOT       shift, and go to state 157
    ADD          shift, and go to state 158
    SUB          shift, and go to state 159
    XOR          shift, and go to state 160
    MUL          shift, and go to state 161
    AND          shift, and go to state 162
    OR           shift, and go to state 163
    LOGOR        shift, and go to state 164
    LOGAND       shift, and go to state 165
    ISEQ         shift, and go to state 166
    NEQ          shift, and go to state 167
    LESSEQ       shift, and go to state 168
    GRTEQ        shift, and go to state 169
    GRT          shift, and go to state 170
    LESS         shift, and go to state 171
    MOD          shift, and go to state 172
    QUOT         shift, and go to state 173
    SHL          shift, and go to state 174
    SHR          shift, and go to state 175
    RIGHTSQUARE  shift, and go to state 176


State 114

  160 Expression: UnaryExpr •

    $default  reduce using rule 160 (Expression)


State 115

  166 UnaryExpr: PrimaryExpr •
  169 PrimaryExpr: PrimaryExpr • Selector
  170            | PrimaryExpr • Index
  171            | PrimaryExpr • Slice
  172            | PrimaryExpr • Arguments
  174            | PrimaryExpr • TypeAssertion

    LEFTPARAN   shift, and go to state 177
    LEFTSQUARE  shift, and go to state 178
    DOT         shift, and go to state 179

    $default  reduce using rule 166 (UnaryExpr)

    Selector       go to state 180
    Index          go to state 181
    Slice          go to state 182
    TypeAssertion  go to state 183
    Arguments      go to state 184


State 116

  168 PrimaryExpr: MakeExpr •

    $default  reduce using rule 168 (PrimaryExpr)


State 117

   89 Operand: Literal •

    $default  reduce using rule 89 (Operand)


State 118

  210 Literal: BasicLit •

    $default  reduce using rule 210 (Literal)


State 119

  215 BasicLit: String •

    $default  reduce using rule 215 (BasicLit)


State 120

   77 IdentifierList: IdentifierList COMMA IDENTIFIER •

    $default  reduce using rule 77 (IdentifierList)


State 121

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression
  194 ExpressionList: Expression •

    ANDNOT  shift, and go to state 157
    ADD     shift, and go to state 158
    SUB     shift, and go to state 159
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    OR      shift, and go to state 163
    LOGOR   shift, and go to state 164
    LOGAND  shift, and go to state 165
    ISEQ    shift, and go to state 166
    NEQ     shift, and go to state 167
    LESSEQ  shift, and go to state 168
    GRTEQ   shift, and go to state 169
    GRT     shift, and go to state 170
    LESS    shift, and go to state 171
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175

    $default  reduce using rule 194 (ExpressionList)


State 122

   63 VarSpec: IdentifierList ASSGN_OP ExpressionList •
  195 ExpressionList: ExpressionList • COMMA Expression

    COMMA  shift, and go to state 185

    $default  reduce using rule 63 (VarSpec)


State 123

   62 VarSpec: IdentifierList Type ASSGN_OP • ExpressionList

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit    go to state 109
    LiteralType     go to state 110
    Operand         go to state 111
    OperandName     go to state 112
    SliceType       go to state 72
    Expression      go to state 121
    UnaryExpr       go to state 114
    PrimaryExpr     go to state 115
    MakeExpr        go to state 116
    ExpressionList  go to state 186
    MapType         go to state 73
    StructType      go to state 74
    PointerType     go to state 75
    ArrayType       go to state 76
    Literal         go to state 117
    BasicLit        go to state 118
    String          go to state 119


State 124

  196 TypeDecl: TYPE LEFTPARAN TypeSpec SCOLON • RIGHTPARAN

    RIGHTPARAN  shift, and go to state 187


State 125

   73 Parameters: LEFTPARAN ParameterList COMMA RIGHTPARAN •

    $default  reduce using rule 73 (Parameters)


State 126

   75 ParameterList: ParameterList COMMA ParameterDecl •

    $default  reduce using rule 75 (ParameterList)


State 127

   22 Block: LEFTBRACE • OpenBlock StatementList CloseBlock RIGHTBRACE

    $default  reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 188


State 128

   41 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature CloseBlock •

    $default  reduce using rule 41 (FunctionDecl)


State 129

   64 FunctionBody: Block •

    $default  reduce using rule 64 (FunctionBody)


State 130

   40 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature FunctionBody • CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 189


State 131

   67 Result: LEFTPARAN • TypeList RIGHTPARAN

    STRUCT      shift, and go to state 62
    MAP         shift, and go to state 63
    MUL         shift, and go to state 64
    LEFTSQUARE  shift, and go to state 65
    IDENTIFIER  shift, and go to state 67

    TypeList     go to state 190
    LiteralType  go to state 69
    Type         go to state 191
    OperandName  go to state 71
    SliceType    go to state 72
    MapType      go to state 73
    StructType   go to state 74
    PointerType  go to state 75
    ArrayType    go to state 76


State 132

   66 Signature: Parameters Result •

    $default  reduce using rule 66 (Signature)


State 133

   68 Result: Type •

    $default  reduce using rule 68 (Result)


State 134

   43 MethodDecl: FUNC Receiver IDENTIFIER Signature FunctionBody •

    $default  reduce using rule 43 (MethodDecl)


State 135

   59 VarSpecList: VarSpecList VarSpec SCOLON •

    $default  reduce using rule 59 (VarSpecList)


State 136

  202 StructType: STRUCT LEFTBRACE RIGHTBRACE •

    $default  reduce using rule 202 (StructType)


State 137

   77 IdentifierList: IdentifierList • COMMA IDENTIFIER
  205 FieldDecl: IdentifierList • Type String
  206          | IdentifierList • Type

    STRUCT      shift, and go to state 62
    MAP         shift, and go to state 63
    MUL         shift, and go to state 64
    LEFTSQUARE  shift, and go to state 65
    COMMA       shift, and go to state 66
    IDENTIFIER  shift, and go to state 67

    LiteralType  go to state 69
    Type         go to state 192
    OperandName  go to state 71
    SliceType    go to state 72
    MapType      go to state 73
    StructType   go to state 74
    PointerType  go to state 75
    ArrayType    go to state 76


State 138

  201 StructType: STRUCT LEFTBRACE FieldDeclList • RIGHTBRACE
  204 FieldDeclList: FieldDeclList • FieldDecl SCOLON

    RIGHTBRACE  shift, and go to state 193
    IDENTIFIER  shift, and go to state 41

    IdentifierList  go to state 137
    FieldDecl       go to state 194


State 139

  203 FieldDeclList: FieldDecl • SCOLON

    SCOLON  shift, and go to state 195


State 140

  200 MapType: MAP LEFTSQUARE Type • RIGHTSQUARE Type

    RIGHTSQUARE  shift, and go to state 196


State 141

  189 MakeExpr: NEW LEFTPARAN • Type RIGHTPARAN

    STRUCT      shift, and go to state 62
    MAP         shift, and go to state 63
    MUL         shift, and go to state 64
    LEFTSQUARE  shift, and go to state 65
    IDENTIFIER  shift, and go to state 67

    LiteralType  go to state 69
    Type         go to state 197
    OperandName  go to state 71
    SliceType    go to state 72
    MapType      go to state 73
    StructType   go to state 74
    PointerType  go to state 75
    ArrayType    go to state 76


State 142

  186 MakeExpr: MAKE LEFTPARAN • Type COMMA Expression COMMA Expression RIGHTPARAN
  187         | MAKE LEFTPARAN • Type COMMA Expression RIGHTPARAN
  188         | MAKE LEFTPARAN • Type RIGHTPARAN

    STRUCT      shift, and go to state 62
    MAP         shift, and go to state 63
    MUL         shift, and go to state 64
    LEFTSQUARE  shift, and go to state 65
    IDENTIFIER  shift, and go to state 67

    LiteralType  go to state 69
    Type         go to state 198
    OperandName  go to state 71
    SliceType    go to state 72
    MapType      go to state 73
    StructType   go to state 74
    PointerType  go to state 75
    ArrayType    go to state 76


State 143

   85 LiteralType: LEFTSQUARE ELIPSIS RIGHTSQUARE • Operand

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    MAP                 shift, and go to state 63
    MUL                 shift, and go to state 64
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 199
    OperandName   go to state 200
    SliceType     go to state 72
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 144

  163 UnaryExpr: ADD PrimaryExpr •
  169 PrimaryExpr: PrimaryExpr • Selector
  170            | PrimaryExpr • Index
  171            | PrimaryExpr • Slice
  172            | PrimaryExpr • Arguments
  174            | PrimaryExpr • TypeAssertion

    LEFTPARAN   shift, and go to state 177
    LEFTSQUARE  shift, and go to state 178
    DOT         shift, and go to state 179

    $default  reduce using rule 163 (UnaryExpr)

    Selector       go to state 180
    Index          go to state 181
    Slice          go to state 182
    TypeAssertion  go to state 183
    Arguments      go to state 184


State 145

  164 UnaryExpr: SUB PrimaryExpr •
  169 PrimaryExpr: PrimaryExpr • Selector
  170            | PrimaryExpr • Index
  171            | PrimaryExpr • Slice
  172            | PrimaryExpr • Arguments
  174            | PrimaryExpr • TypeAssertion

    LEFTPARAN   shift, and go to state 177
    LEFTSQUARE  shift, and go to state 178
    DOT         shift, and go to state 179

    $default  reduce using rule 164 (UnaryExpr)

    Selector       go to state 180
    Index          go to state 181
    Slice          go to state 182
    TypeAssertion  go to state 183
    Arguments      go to state 184


State 146

  165 UnaryExpr: NOT PrimaryExpr •
  169 PrimaryExpr: PrimaryExpr • Selector
  170            | PrimaryExpr • Index
  171            | PrimaryExpr • Slice
  172            | PrimaryExpr • Arguments
  174            | PrimaryExpr • TypeAssertion

    LEFTPARAN   shift, and go to state 177
    LEFTSQUARE  shift, and go to state 178
    DOT         shift, and go to state 179

    $default  reduce using rule 165 (UnaryExpr)

    Selector       go to state 180
    Index          go to state 181
    Slice          go to state 182
    TypeAssertion  go to state 183
    Arguments      go to state 184


State 147

   80 CompositeLit: LiteralType • LiteralValue
   87 Type: LiteralType •

    LEFTBRACE  shift, and go to state 153

    LEFTBRACE  [reduce using rule 87 (Type)]

    LiteralValue  go to state 154


State 148

   88 Type: OperandName •
   90 Operand: OperandName •
  173 PrimaryExpr: OperandName • StructLiteral

    LEFTBRACE  shift, and go to state 155

    LEFTBRACE  [reduce using rule 88 (Type)]
    LEFTBRACE  [reduce using rule 90 (Operand)]
    $default   reduce using rule 90 (Operand)

    StructLiteral  go to state 156


State 149

  161 UnaryExpr: MUL PrimaryExpr •
  169 PrimaryExpr: PrimaryExpr • Selector
  170            | PrimaryExpr • Index
  171            | PrimaryExpr • Slice
  172            | PrimaryExpr • Arguments
  174            | PrimaryExpr • TypeAssertion

    LEFTPARAN   shift, and go to state 177
    LEFTSQUARE  shift, and go to state 178
    DOT         shift, and go to state 179

    $default  reduce using rule 161 (UnaryExpr)

    Selector       go to state 180
    Index          go to state 181
    Slice          go to state 182
    TypeAssertion  go to state 183
    Arguments      go to state 184


State 150

  162 UnaryExpr: AND PrimaryExpr •
  169 PrimaryExpr: PrimaryExpr • Selector
  170            | PrimaryExpr • Index
  171            | PrimaryExpr • Slice
  172            | PrimaryExpr • Arguments
  174            | PrimaryExpr • TypeAssertion

    LEFTPARAN   shift, and go to state 177
    LEFTSQUARE  shift, and go to state 178
    DOT         shift, and go to state 179

    $default  reduce using rule 162 (UnaryExpr)

    Selector       go to state 180
    Index          go to state 181
    Slice          go to state 182
    TypeAssertion  go to state 183
    Arguments      go to state 184


State 151

   96 SliceType: LEFTSQUARE RIGHTSQUARE Type •

    $default  reduce using rule 96 (SliceType)


State 152

   91 Operand: LEFTPARAN Expression • RIGHTPARAN
  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    ANDNOT      shift, and go to state 157
    ADD         shift, and go to state 158
    SUB         shift, and go to state 159
    XOR         shift, and go to state 160
    MUL         shift, and go to state 161
    AND         shift, and go to state 162
    OR          shift, and go to state 163
    LOGOR       shift, and go to state 164
    LOGAND      shift, and go to state 165
    ISEQ        shift, and go to state 166
    NEQ         shift, and go to state 167
    LESSEQ      shift, and go to state 168
    GRTEQ       shift, and go to state 169
    GRT         shift, and go to state 170
    LESS        shift, and go to state 171
    MOD         shift, and go to state 172
    QUOT        shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    RIGHTPARAN  shift, and go to state 201


State 153

   93 LiteralValue: LEFTBRACE • RIGHTBRACE
   94             | LEFTBRACE • ElementList RIGHTBRACE
   95             | LEFTBRACE • ElementList COMMA RIGHTBRACE

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    RIGHTBRACE          shift, and go to state 202
    LEFTPARAN           shift, and go to state 107
    LEFTBRACE           shift, and go to state 153
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    LiteralValue  go to state 203
    SliceType     go to state 72
    ElementList   go to state 204
    KeyedElement  go to state 205
    Key           go to state 206
    Element       go to state 207
    Expression    go to state 208
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 154

   80 CompositeLit: LiteralType LiteralValue •

    $default  reduce using rule 80 (CompositeLit)


State 155

  175 StructLiteral: LEFTBRACE • KeyValueList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 209
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    KeyValueList  go to state 210
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 156

  173 PrimaryExpr: OperandName StructLiteral •

    $default  reduce using rule 173 (PrimaryExpr)


State 157

  147 Expression: Expression ANDNOT • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 211
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 158

  148 Expression: Expression ADD • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 212
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 159

  149 Expression: Expression SUB • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 213
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 160

  151 Expression: Expression XOR • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 214
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 161

  141 Expression: Expression MUL • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 215
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 162

  146 Expression: Expression AND • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 216
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 163

  150 Expression: Expression OR • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 217
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 164

  153 Expression: Expression LOGOR • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 218
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 165

  152 Expression: Expression LOGAND • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 219
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 166

  154 Expression: Expression ISEQ • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 220
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 167

  155 Expression: Expression NEQ • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 221
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 168

  158 Expression: Expression LESSEQ • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 222
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 169

  156 Expression: Expression GRTEQ • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 223
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 170

  157 Expression: Expression GRT • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 224
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 171

  159 Expression: Expression LESS • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 225
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 172

  143 Expression: Expression MOD • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 226
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 173

  142 Expression: Expression QUOT • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 227
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 174

  144 Expression: Expression SHL • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 228
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 175

  145 Expression: Expression SHR • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 229
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 176

  209 ArrayType: LEFTSQUARE Expression RIGHTSQUARE • Type

    STRUCT      shift, and go to state 62
    MAP         shift, and go to state 63
    MUL         shift, and go to state 64
    LEFTSQUARE  shift, and go to state 65
    IDENTIFIER  shift, and go to state 67

    LiteralType  go to state 69
    Type         go to state 230
    OperandName  go to state 71
    SliceType    go to state 72
    MapType      go to state 73
    StructType   go to state 74
    PointerType  go to state 75
    ArrayType    go to state 76


State 177

  191 Arguments: LEFTPARAN • RIGHTPARAN
  192          | LEFTPARAN • ExpressionList RIGHTPARAN
  193          | LEFTPARAN • ExpressionList ELIPSIS RIGHTPARAN

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    RIGHTPARAN          shift, and go to state 231
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit    go to state 109
    LiteralType     go to state 110
    Operand         go to state 111
    OperandName     go to state 112
    SliceType       go to state 72
    Expression      go to state 121
    UnaryExpr       go to state 114
    PrimaryExpr     go to state 115
    MakeExpr        go to state 116
    ExpressionList  go to state 232
    MapType         go to state 73
    StructType      go to state 74
    PointerType     go to state 75
    ArrayType       go to state 76
    Literal         go to state 117
    BasicLit        go to state 118
    String          go to state 119


State 178

  179 Index: LEFTSQUARE • Expression RIGHTSQUARE
  180 Slice: LEFTSQUARE • COLON Expression RIGHTSQUARE
  181      | LEFTSQUARE • COLON RIGHTSQUARE
  182      | LEFTSQUARE • Expression COLON RIGHTSQUARE
  183      | LEFTSQUARE • Expression COLON Expression RIGHTSQUARE
  184      | LEFTSQUARE • COLON Expression COLON Expression RIGHTSQUARE
  185      | LEFTSQUARE • Expression COLON Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    COLON               shift, and go to state 233
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 234
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 179

  178 Selector: DOT • IDENTIFIER
  190 TypeAssertion: DOT • LEFTPARAN Type RIGHTPARAN

    LEFTPARAN   shift, and go to state 235
    IDENTIFIER  shift, and go to state 236


State 180

  169 PrimaryExpr: PrimaryExpr Selector •

    $default  reduce using rule 169 (PrimaryExpr)


State 181

  170 PrimaryExpr: PrimaryExpr Index •

    $default  reduce using rule 170 (PrimaryExpr)


State 182

  171 PrimaryExpr: PrimaryExpr Slice •

    $default  reduce using rule 171 (PrimaryExpr)


State 183

  174 PrimaryExpr: PrimaryExpr TypeAssertion •

    $default  reduce using rule 174 (PrimaryExpr)


State 184

  172 PrimaryExpr: PrimaryExpr Arguments •

    $default  reduce using rule 172 (PrimaryExpr)


State 185

  195 ExpressionList: ExpressionList COMMA • Expression

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 237
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 186

   62 VarSpec: IdentifierList Type ASSGN_OP ExpressionList •
  195 ExpressionList: ExpressionList • COMMA Expression

    COMMA  shift, and go to state 185

    $default  reduce using rule 62 (VarSpec)


State 187

  196 TypeDecl: TYPE LEFTPARAN TypeSpec SCOLON RIGHTPARAN •

    $default  reduce using rule 196 (TypeDecl)


State 188

   22 Block: LEFTBRACE OpenBlock • StatementList CloseBlock RIGHTBRACE

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    BREAK               shift, and go to state 238
    CONTINUE            shift, and go to state 239
    RETURN              shift, and go to state 240
    STRUCT              shift, and go to state 62
    IF                  shift, and go to state 241
    FOR                 shift, and go to state 242
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 243
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    GOTO                shift, and go to state 244
    FALLTHROUGH         shift, and go to state 245
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTBRACE           shift, and go to state 127
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 246

    $default  reduce using rule 50 (EmptyStmt)

    Block            go to state 247
    StatementList    go to state 248
    Statement        go to state 249
    Declaration      go to state 250
    LabeledStmt      go to state 251
    SimpleStmt       go to state 252
    EmptyStmt        go to state 253
    ExpressionStmt   go to state 254
    IncDecStmt       go to state 255
    Assignment       go to state 256
    ShortVarDecl     go to state 257
    VarDecl          go to state 28
    IdentifierList   go to state 258
    CompositeLit     go to state 109
    LiteralType      go to state 110
    Operand          go to state 111
    OperandName      go to state 112
    SliceType        go to state 72
    ReturnStmt       go to state 259
    BreakStmt        go to state 260
    ContinueStmt     go to state 261
    GotoStmt         go to state 262
    SwitchStmt       go to state 263
    ExprSwitchStmt   go to state 264
    FallthroughStmt  go to state 265
    IfStmt           go to state 266
    ForStmt          go to state 267
    Expression       go to state 268
    UnaryExpr        go to state 114
    PrimaryExpr      go to state 115
    MakeExpr         go to state 116
    ExpressionList   go to state 269
    TypeDecl         go to state 29
    MapType          go to state 73
    StructType       go to state 74
    PointerType      go to state 75
    ArrayType        go to state 76
    Literal          go to state 117
    BasicLit         go to state 118
    String           go to state 119


State 189

   40 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature FunctionBody CloseBlock •

    $default  reduce using rule 40 (FunctionDecl)


State 190

   67 Result: LEFTPARAN TypeList • RIGHTPARAN
   69 TypeList: TypeList • COMMA Type

    RIGHTPARAN  shift, and go to state 270
    COMMA       shift, and go to state 271


State 191

   70 TypeList: Type •

    $default  reduce using rule 70 (TypeList)


State 192

  205 FieldDecl: IdentifierList Type • String
  206          | IdentifierList Type •

    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14

    $default  reduce using rule 206 (FieldDecl)

    String  go to state 272


State 193

  201 StructType: STRUCT LEFTBRACE FieldDeclList RIGHTBRACE •

    $default  reduce using rule 201 (StructType)


State 194

  204 FieldDeclList: FieldDeclList FieldDecl • SCOLON

    SCOLON  shift, and go to state 273


State 195

  203 FieldDeclList: FieldDecl SCOLON •

    $default  reduce using rule 203 (FieldDeclList)


State 196

  200 MapType: MAP LEFTSQUARE Type RIGHTSQUARE • Type

    STRUCT      shift, and go to state 62
    MAP         shift, and go to state 63
    MUL         shift, and go to state 64
    LEFTSQUARE  shift, and go to state 65
    IDENTIFIER  shift, and go to state 67

    LiteralType  go to state 69
    Type         go to state 274
    OperandName  go to state 71
    SliceType    go to state 72
    MapType      go to state 73
    StructType   go to state 74
    PointerType  go to state 75
    ArrayType    go to state 76


State 197

  189 MakeExpr: NEW LEFTPARAN Type • RIGHTPARAN

    RIGHTPARAN  shift, and go to state 275


State 198

  186 MakeExpr: MAKE LEFTPARAN Type • COMMA Expression COMMA Expression RIGHTPARAN
  187         | MAKE LEFTPARAN Type • COMMA Expression RIGHTPARAN
  188         | MAKE LEFTPARAN Type • RIGHTPARAN

    RIGHTPARAN  shift, and go to state 276
    COMMA       shift, and go to state 277


State 199

   85 LiteralType: LEFTSQUARE ELIPSIS RIGHTSQUARE Operand •

    $default  reduce using rule 85 (LiteralType)


State 200

   90 Operand: OperandName •

    $default  reduce using rule 90 (Operand)


State 201

   91 Operand: LEFTPARAN Expression RIGHTPARAN •

    $default  reduce using rule 91 (Operand)


State 202

   93 LiteralValue: LEFTBRACE RIGHTBRACE •

    $default  reduce using rule 93 (LiteralValue)


State 203

  102 Key: LiteralValue •
  104 Element: LiteralValue •

    COLON     reduce using rule 102 (Key)
    $default  reduce using rule 104 (Element)


State 204

   94 LiteralValue: LEFTBRACE ElementList • RIGHTBRACE
   95             | LEFTBRACE ElementList • COMMA RIGHTBRACE
   98 ElementList: ElementList • COMMA KeyedElement

    RIGHTBRACE  shift, and go to state 278
    COMMA       shift, and go to state 279


State 205

   97 ElementList: KeyedElement •

    $default  reduce using rule 97 (ElementList)


State 206

  100 KeyedElement: Key • COLON Element

    COLON  shift, and go to state 280


State 207

   99 KeyedElement: Element •

    $default  reduce using rule 99 (KeyedElement)


State 208

  101 Key: Expression •
  103 Element: Expression •
  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    ANDNOT  shift, and go to state 157
    ADD     shift, and go to state 158
    SUB     shift, and go to state 159
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    OR      shift, and go to state 163
    LOGOR   shift, and go to state 164
    LOGAND  shift, and go to state 165
    ISEQ    shift, and go to state 166
    NEQ     shift, and go to state 167
    LESSEQ  shift, and go to state 168
    GRTEQ   shift, and go to state 169
    GRT     shift, and go to state 170
    LESS    shift, and go to state 171
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175

    COLON     reduce using rule 101 (Key)
    $default  reduce using rule 103 (Element)


State 209

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression
  176 KeyValueList: Expression • COLON Expression
  177             | Expression • COLON Expression COMMA KeyValueList

    ANDNOT  shift, and go to state 157
    ADD     shift, and go to state 158
    SUB     shift, and go to state 159
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    OR      shift, and go to state 163
    LOGOR   shift, and go to state 164
    LOGAND  shift, and go to state 165
    ISEQ    shift, and go to state 166
    NEQ     shift, and go to state 167
    LESSEQ  shift, and go to state 168
    GRTEQ   shift, and go to state 169
    GRT     shift, and go to state 170
    LESS    shift, and go to state 171
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175
    COLON   shift, and go to state 281


State 210

  175 StructLiteral: LEFTBRACE KeyValueList • RIGHTBRACE

    RIGHTBRACE  shift, and go to state 282


State 211

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  147           | Expression ANDNOT Expression •
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    $default  reduce using rule 147 (Expression)


State 212

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  148           | Expression ADD Expression •
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    ANDNOT  shift, and go to state 157
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175

    $default  reduce using rule 148 (Expression)


State 213

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  149           | Expression SUB Expression •
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    ANDNOT  shift, and go to state 157
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175

    $default  reduce using rule 149 (Expression)


State 214

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  151           | Expression XOR Expression •
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    $default  reduce using rule 151 (Expression)


State 215

  141 Expression: Expression • MUL Expression
  141           | Expression MUL Expression •
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    $default  reduce using rule 141 (Expression)


State 216

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  146           | Expression AND Expression •
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    $default  reduce using rule 146 (Expression)


State 217

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  150           | Expression OR Expression •
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    ANDNOT  shift, and go to state 157
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175

    $default  reduce using rule 150 (Expression)


State 218

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  153           | Expression LOGOR Expression •
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    ANDNOT  shift, and go to state 157
    ADD     shift, and go to state 158
    SUB     shift, and go to state 159
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    OR      shift, and go to state 163
    LOGAND  shift, and go to state 165
    ISEQ    shift, and go to state 166
    NEQ     shift, and go to state 167
    LESSEQ  shift, and go to state 168
    GRTEQ   shift, and go to state 169
    GRT     shift, and go to state 170
    LESS    shift, and go to state 171
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175

    $default  reduce using rule 153 (Expression)


State 219

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  152           | Expression LOGAND Expression •
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    ANDNOT  shift, and go to state 157
    ADD     shift, and go to state 158
    SUB     shift, and go to state 159
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    OR      shift, and go to state 163
    ISEQ    shift, and go to state 166
    NEQ     shift, and go to state 167
    LESSEQ  shift, and go to state 168
    GRTEQ   shift, and go to state 169
    GRT     shift, and go to state 170
    LESS    shift, and go to state 171
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175

    $default  reduce using rule 152 (Expression)


State 220

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  154           | Expression ISEQ Expression •
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    ANDNOT  shift, and go to state 157
    ADD     shift, and go to state 158
    SUB     shift, and go to state 159
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    OR      shift, and go to state 163
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175

    $default  reduce using rule 154 (Expression)


State 221

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  155           | Expression NEQ Expression •
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    ANDNOT  shift, and go to state 157
    ADD     shift, and go to state 158
    SUB     shift, and go to state 159
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    OR      shift, and go to state 163
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175

    $default  reduce using rule 155 (Expression)


State 222

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  158           | Expression LESSEQ Expression •
  159           | Expression • LESS Expression

    ANDNOT  shift, and go to state 157
    ADD     shift, and go to state 158
    SUB     shift, and go to state 159
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    OR      shift, and go to state 163
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175

    $default  reduce using rule 158 (Expression)


State 223

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  156           | Expression GRTEQ Expression •
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    ANDNOT  shift, and go to state 157
    ADD     shift, and go to state 158
    SUB     shift, and go to state 159
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    OR      shift, and go to state 163
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175

    $default  reduce using rule 156 (Expression)


State 224

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  157           | Expression GRT Expression •
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    ANDNOT  shift, and go to state 157
    ADD     shift, and go to state 158
    SUB     shift, and go to state 159
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    OR      shift, and go to state 163
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175

    $default  reduce using rule 157 (Expression)


State 225

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression
  159           | Expression LESS Expression •

    ANDNOT  shift, and go to state 157
    ADD     shift, and go to state 158
    SUB     shift, and go to state 159
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    OR      shift, and go to state 163
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175

    $default  reduce using rule 159 (Expression)


State 226

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  143           | Expression MOD Expression •
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    $default  reduce using rule 143 (Expression)


State 227

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  142           | Expression QUOT Expression •
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    $default  reduce using rule 142 (Expression)


State 228

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  144           | Expression SHL Expression •
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    $default  reduce using rule 144 (Expression)


State 229

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  145           | Expression SHR Expression •
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    $default  reduce using rule 145 (Expression)


State 230

  209 ArrayType: LEFTSQUARE Expression RIGHTSQUARE Type •

    $default  reduce using rule 209 (ArrayType)


State 231

  191 Arguments: LEFTPARAN RIGHTPARAN •

    $default  reduce using rule 191 (Arguments)


State 232

  192 Arguments: LEFTPARAN ExpressionList • RIGHTPARAN
  193          | LEFTPARAN ExpressionList • ELIPSIS RIGHTPARAN
  195 ExpressionList: ExpressionList • COMMA Expression

    ELIPSIS     shift, and go to state 283
    RIGHTPARAN  shift, and go to state 284
    COMMA       shift, and go to state 185


State 233

  180 Slice: LEFTSQUARE COLON • Expression RIGHTSQUARE
  181      | LEFTSQUARE COLON • RIGHTSQUARE
  184      | LEFTSQUARE COLON • Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    RIGHTSQUARE         shift, and go to state 285
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 286
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 234

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression
  179 Index: LEFTSQUARE Expression • RIGHTSQUARE
  182 Slice: LEFTSQUARE Expression • COLON RIGHTSQUARE
  183      | LEFTSQUARE Expression • COLON Expression RIGHTSQUARE
  185      | LEFTSQUARE Expression • COLON Expression COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 157
    ADD          shift, and go to state 158
    SUB          shift, and go to state 159
    XOR          shift, and go to state 160
    MUL          shift, and go to state 161
    AND          shift, and go to state 162
    OR           shift, and go to state 163
    LOGOR        shift, and go to state 164
    LOGAND       shift, and go to state 165
    ISEQ         shift, and go to state 166
    NEQ          shift, and go to state 167
    LESSEQ       shift, and go to state 168
    GRTEQ        shift, and go to state 169
    GRT          shift, and go to state 170
    LESS         shift, and go to state 171
    MOD          shift, and go to state 172
    QUOT         shift, and go to state 173
    SHL          shift, and go to state 174
    SHR          shift, and go to state 175
    RIGHTSQUARE  shift, and go to state 287
    COLON        shift, and go to state 288


State 235

  190 TypeAssertion: DOT LEFTPARAN • Type RIGHTPARAN

    STRUCT      shift, and go to state 62
    MAP         shift, and go to state 63
    MUL         shift, and go to state 64
    LEFTSQUARE  shift, and go to state 65
    IDENTIFIER  shift, and go to state 67

    LiteralType  go to state 69
    Type         go to state 289
    OperandName  go to state 71
    SliceType    go to state 72
    MapType      go to state 73
    StructType   go to state 74
    PointerType  go to state 75
    ArrayType    go to state 76


State 236

  178 Selector: DOT IDENTIFIER •

    $default  reduce using rule 178 (Selector)


State 237

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression
  195 ExpressionList: ExpressionList COMMA Expression •

    ANDNOT  shift, and go to state 157
    ADD     shift, and go to state 158
    SUB     shift, and go to state 159
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    OR      shift, and go to state 163
    LOGOR   shift, and go to state 164
    LOGAND  shift, and go to state 165
    ISEQ    shift, and go to state 166
    NEQ     shift, and go to state 167
    LESSEQ  shift, and go to state 168
    GRTEQ   shift, and go to state 169
    GRT     shift, and go to state 170
    LESS    shift, and go to state 171
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175

    $default  reduce using rule 195 (ExpressionList)


State 238

  107 BreakStmt: BREAK •
  108          | BREAK • IDENTIFIER

    IDENTIFIER  shift, and go to state 290

    $default  reduce using rule 107 (BreakStmt)


State 239

  109 ContinueStmt: CONTINUE •
  110             | CONTINUE • IDENTIFIER

    IDENTIFIER  shift, and go to state 291

    $default  reduce using rule 109 (ContinueStmt)


State 240

  105 ReturnStmt: RETURN •
  106           | RETURN • ExpressionList

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    $default  reduce using rule 105 (ReturnStmt)

    CompositeLit    go to state 109
    LiteralType     go to state 110
    Operand         go to state 111
    OperandName     go to state 112
    SliceType       go to state 72
    Expression      go to state 121
    UnaryExpr       go to state 114
    PrimaryExpr     go to state 115
    MakeExpr        go to state 116
    ExpressionList  go to state 292
    MapType         go to state 73
    StructType      go to state 74
    PointerType     go to state 75
    ArrayType       go to state 76
    Literal         go to state 117
    BasicLit        go to state 118
    String          go to state 119


State 241

  127 IfStmt: IF • OpenBlock Expression Block CloseBlock
  128       | IF • OpenBlock SimpleStmt SCOLON Expression Block CloseBlock
  129       | IF • OpenBlock Expression Block ELSE IfStmt CloseBlock
  130       | IF • OpenBlock Expression Block ELSE Block CloseBlock
  131       | IF • OpenBlock SimpleStmt SCOLON Expression Block ELSE IfStmt CloseBlock
  132       | IF • OpenBlock SimpleStmt SCOLON Expression Block ELSE Block CloseBlock

    $default  reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 293


State 242

  133 ForStmt: FOR • forMarker Block forMarkerEnd
  134        | FOR • OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR • OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  136        | FOR • OpenBlock Condition forMarker Block forMarkerEnd CloseBlock
  137        | FOR • OpenBlock EmptyStmt Empty forMarker Expression Empty EmptyStmt Block forMarkerEnd CloseBlock

    LEFTBRACE  reduce using rule 138 (forMarker)
    $default   reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 294
    forMarker  go to state 295


State 243

  113 ExprSwitchStmt: SWITCH • LEFTBRACE RIGHTBRACE
  114               | SWITCH • SimpleStmt SCOLON LEFTBRACE RIGHTBRACE
  115               | SWITCH • Expression LEFTBRACE RIGHTBRACE
  116               | SWITCH • SimpleStmt SCOLON Expression LEFTBRACE RIGHTBRACE
  117               | SWITCH • LEFTBRACE ExprCaseClauseList RIGHTBRACE
  118               | SWITCH • SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE
  119               | SWITCH • Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE
  120               | SWITCH • SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTBRACE           shift, and go to state 296
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 297

    $default  reduce using rule 50 (EmptyStmt)

    SimpleStmt      go to state 298
    EmptyStmt       go to state 253
    ExpressionStmt  go to state 254
    IncDecStmt      go to state 255
    Assignment      go to state 256
    ShortVarDecl    go to state 257
    IdentifierList  go to state 258
    CompositeLit    go to state 109
    LiteralType     go to state 110
    Operand         go to state 111
    OperandName     go to state 112
    SliceType       go to state 72
    Expression      go to state 299
    UnaryExpr       go to state 114
    PrimaryExpr     go to state 115
    MakeExpr        go to state 116
    ExpressionList  go to state 269
    MapType         go to state 73
    StructType      go to state 74
    PointerType     go to state 75
    ArrayType       go to state 76
    Literal         go to state 117
    BasicLit        go to state 118
    String          go to state 119


State 244

  111 GotoStmt: GOTO • IDENTIFIER

    IDENTIFIER  shift, and go to state 300


State 245

  126 FallthroughStmt: FALLTHROUGH •

    $default  reduce using rule 126 (FallthroughStmt)


State 246

   44 LabeledStmt: IDENTIFIER • COLON Statement
   78 IdentifierList: IDENTIFIER •
   92 OperandName: IDENTIFIER •

    COLON  shift, and go to state 301

    INFER_EQ  reduce using rule 78 (IdentifierList)
    COMMA     reduce using rule 78 (IdentifierList)
    COMMA     [reduce using rule 92 (OperandName)]
    $default  reduce using rule 92 (OperandName)


State 247

   35 Statement: Block •

    $default  reduce using rule 35 (Statement)


State 248

   22 Block: LEFTBRACE OpenBlock StatementList • CloseBlock RIGHTBRACE
   24 StatementList: StatementList • Statement SCOLON

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    BREAK               shift, and go to state 238
    CONTINUE            shift, and go to state 239
    RETURN              shift, and go to state 240
    STRUCT              shift, and go to state 62
    IF                  shift, and go to state 241
    FOR                 shift, and go to state 242
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 243
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    GOTO                shift, and go to state 244
    FALLTHROUGH         shift, and go to state 245
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTBRACE           shift, and go to state 127
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 246

    SCOLON    reduce using rule 50 (EmptyStmt)
    $default  reduce using rule 3 (CloseBlock)

    CloseBlock       go to state 302
    Block            go to state 247
    Statement        go to state 303
    Declaration      go to state 250
    LabeledStmt      go to state 251
    SimpleStmt       go to state 252
    EmptyStmt        go to state 253
    ExpressionStmt   go to state 254
    IncDecStmt       go to state 255
    Assignment       go to state 256
    ShortVarDecl     go to state 257
    VarDecl          go to state 28
    IdentifierList   go to state 258
    CompositeLit     go to state 109
    LiteralType      go to state 110
    Operand          go to state 111
    OperandName      go to state 112
    SliceType        go to state 72
    ReturnStmt       go to state 259
    BreakStmt        go to state 260
    ContinueStmt     go to state 261
    GotoStmt         go to state 262
    SwitchStmt       go to state 263
    ExprSwitchStmt   go to state 264
    FallthroughStmt  go to state 265
    IfStmt           go to state 266
    ForStmt          go to state 267
    Expression       go to state 268
    UnaryExpr        go to state 114
    PrimaryExpr      go to state 115
    MakeExpr         go to state 116
    ExpressionList   go to state 269
    TypeDecl         go to state 29
    MapType          go to state 73
    StructType       go to state 74
    PointerType      go to state 75
    ArrayType        go to state 76
    Literal          go to state 117
    BasicLit         go to state 118
    String           go to state 119


State 249

   25 StatementList: Statement • SCOLON

    SCOLON  shift, and go to state 304


State 250

   26 Statement: Declaration •

    $default  reduce using rule 26 (Statement)


State 251

   27 Statement: LabeledStmt •

    $default  reduce using rule 27 (Statement)


State 252

   28 Statement: SimpleStmt •

    $default  reduce using rule 28 (Statement)


State 253

   45 SimpleStmt: EmptyStmt •

    $default  reduce using rule 45 (SimpleStmt)


State 254

   46 SimpleStmt: ExpressionStmt •

    $default  reduce using rule 46 (SimpleStmt)


State 255

   47 SimpleStmt: IncDecStmt •

    $default  reduce using rule 47 (SimpleStmt)


State 256

   48 SimpleStmt: Assignment •

    $default  reduce using rule 48 (SimpleStmt)


State 257

   49 SimpleStmt: ShortVarDecl •

    $default  reduce using rule 49 (SimpleStmt)


State 258

   56 ShortVarDecl: IdentifierList • INFER_EQ ExpressionList
   77 IdentifierList: IdentifierList • COMMA IDENTIFIER

    INFER_EQ  shift, and go to state 305
    COMMA     shift, and go to state 66


State 259

   29 Statement: ReturnStmt •

    $default  reduce using rule 29 (Statement)


State 260

   30 Statement: BreakStmt •

    $default  reduce using rule 30 (Statement)


State 261

   31 Statement: ContinueStmt •

    $default  reduce using rule 31 (Statement)


State 262

   32 Statement: GotoStmt •

    $default  reduce using rule 32 (Statement)


State 263

   33 Statement: SwitchStmt •

    $default  reduce using rule 33 (Statement)


State 264

  112 SwitchStmt: ExprSwitchStmt •

    $default  reduce using rule 112 (SwitchStmt)


State 265

   34 Statement: FallthroughStmt •

    $default  reduce using rule 34 (Statement)


State 266

   36 Statement: IfStmt •

    $default  reduce using rule 36 (Statement)


State 267

   37 Statement: ForStmt •

    $default  reduce using rule 37 (Statement)


State 268

   52 ExpressionStmt: Expression •
   53 IncDecStmt: Expression • PLUSPLUS
   54           | Expression • MINUSMINUS
  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression
  194 ExpressionList: Expression •

    PLUSPLUS    shift, and go to state 306
    MINUSMINUS  shift, and go to state 307
    ANDNOT      shift, and go to state 157
    ADD         shift, and go to state 158
    SUB         shift, and go to state 159
    XOR         shift, and go to state 160
    MUL         shift, and go to state 161
    AND         shift, and go to state 162
    OR          shift, and go to state 163
    LOGOR       shift, and go to state 164
    LOGAND      shift, and go to state 165
    ISEQ        shift, and go to state 166
    NEQ         shift, and go to state 167
    LESSEQ      shift, and go to state 168
    GRTEQ       shift, and go to state 169
    GRT         shift, and go to state 170
    LESS        shift, and go to state 171
    MOD         shift, and go to state 172
    QUOT        shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175

    COMMA     reduce using rule 194 (ExpressionList)
    ASSGN_OP  reduce using rule 194 (ExpressionList)
    $default  reduce using rule 52 (ExpressionStmt)


State 269

   55 Assignment: ExpressionList • ASSGN_OP ExpressionList
  195 ExpressionList: ExpressionList • COMMA Expression

    COMMA     shift, and go to state 185
    ASSGN_OP  shift, and go to state 308


State 270

   67 Result: LEFTPARAN TypeList RIGHTPARAN •

    $default  reduce using rule 67 (Result)


State 271

   69 TypeList: TypeList COMMA • Type

    STRUCT      shift, and go to state 62
    MAP         shift, and go to state 63
    MUL         shift, and go to state 64
    LEFTSQUARE  shift, and go to state 65
    IDENTIFIER  shift, and go to state 67

    LiteralType  go to state 69
    Type         go to state 309
    OperandName  go to state 71
    SliceType    go to state 72
    MapType      go to state 73
    StructType   go to state 74
    PointerType  go to state 75
    ArrayType    go to state 76


State 272

  205 FieldDecl: IdentifierList Type String •

    $default  reduce using rule 205 (FieldDecl)


State 273

  204 FieldDeclList: FieldDeclList FieldDecl SCOLON •

    $default  reduce using rule 204 (FieldDeclList)


State 274

  200 MapType: MAP LEFTSQUARE Type RIGHTSQUARE Type •

    $default  reduce using rule 200 (MapType)


State 275

  189 MakeExpr: NEW LEFTPARAN Type RIGHTPARAN •

    $default  reduce using rule 189 (MakeExpr)


State 276

  188 MakeExpr: MAKE LEFTPARAN Type RIGHTPARAN •

    $default  reduce using rule 188 (MakeExpr)


State 277

  186 MakeExpr: MAKE LEFTPARAN Type COMMA • Expression COMMA Expression RIGHTPARAN
  187         | MAKE LEFTPARAN Type COMMA • Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 310
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 278

   94 LiteralValue: LEFTBRACE ElementList RIGHTBRACE •

    $default  reduce using rule 94 (LiteralValue)


State 279

   95 LiteralValue: LEFTBRACE ElementList COMMA • RIGHTBRACE
   98 ElementList: ElementList COMMA • KeyedElement

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    RIGHTBRACE          shift, and go to state 311
    LEFTPARAN           shift, and go to state 107
    LEFTBRACE           shift, and go to state 153
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    LiteralValue  go to state 203
    SliceType     go to state 72
    KeyedElement  go to state 312
    Key           go to state 206
    Element       go to state 207
    Expression    go to state 208
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 280

  100 KeyedElement: Key COLON • Element

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTBRACE           shift, and go to state 153
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    LiteralValue  go to state 313
    SliceType     go to state 72
    Element       go to state 314
    Expression    go to state 315
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 281

  176 KeyValueList: Expression COLON • Expression
  177             | Expression COLON • Expression COMMA KeyValueList

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 316
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 282

  175 StructLiteral: LEFTBRACE KeyValueList RIGHTBRACE •

    $default  reduce using rule 175 (StructLiteral)


State 283

  193 Arguments: LEFTPARAN ExpressionList ELIPSIS • RIGHTPARAN

    RIGHTPARAN  shift, and go to state 317


State 284

  192 Arguments: LEFTPARAN ExpressionList RIGHTPARAN •

    $default  reduce using rule 192 (Arguments)


State 285

  181 Slice: LEFTSQUARE COLON RIGHTSQUARE •

    $default  reduce using rule 181 (Slice)


State 286

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression
  180 Slice: LEFTSQUARE COLON Expression • RIGHTSQUARE
  184      | LEFTSQUARE COLON Expression • COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 157
    ADD          shift, and go to state 158
    SUB          shift, and go to state 159
    XOR          shift, and go to state 160
    MUL          shift, and go to state 161
    AND          shift, and go to state 162
    OR           shift, and go to state 163
    LOGOR        shift, and go to state 164
    LOGAND       shift, and go to state 165
    ISEQ         shift, and go to state 166
    NEQ          shift, and go to state 167
    LESSEQ       shift, and go to state 168
    GRTEQ        shift, and go to state 169
    GRT          shift, and go to state 170
    LESS         shift, and go to state 171
    MOD          shift, and go to state 172
    QUOT         shift, and go to state 173
    SHL          shift, and go to state 174
    SHR          shift, and go to state 175
    RIGHTSQUARE  shift, and go to state 318
    COLON        shift, and go to state 319


State 287

  179 Index: LEFTSQUARE Expression RIGHTSQUARE •

    $default  reduce using rule 179 (Index)


State 288

  182 Slice: LEFTSQUARE Expression COLON • RIGHTSQUARE
  183      | LEFTSQUARE Expression COLON • Expression RIGHTSQUARE
  185      | LEFTSQUARE Expression COLON • Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    RIGHTSQUARE         shift, and go to state 320
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 321
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 289

  190 TypeAssertion: DOT LEFTPARAN Type • RIGHTPARAN

    RIGHTPARAN  shift, and go to state 322


State 290

  108 BreakStmt: BREAK IDENTIFIER •

    $default  reduce using rule 108 (BreakStmt)


State 291

  110 ContinueStmt: CONTINUE IDENTIFIER •

    $default  reduce using rule 110 (ContinueStmt)


State 292

  106 ReturnStmt: RETURN ExpressionList •
  195 ExpressionList: ExpressionList • COMMA Expression

    COMMA  shift, and go to state 185

    $default  reduce using rule 106 (ReturnStmt)


State 293

  127 IfStmt: IF OpenBlock • Expression Block CloseBlock
  128       | IF OpenBlock • SimpleStmt SCOLON Expression Block CloseBlock
  129       | IF OpenBlock • Expression Block ELSE IfStmt CloseBlock
  130       | IF OpenBlock • Expression Block ELSE Block CloseBlock
  131       | IF OpenBlock • SimpleStmt SCOLON Expression Block ELSE IfStmt CloseBlock
  132       | IF OpenBlock • SimpleStmt SCOLON Expression Block ELSE Block CloseBlock

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 297

    $default  reduce using rule 50 (EmptyStmt)

    SimpleStmt      go to state 323
    EmptyStmt       go to state 253
    ExpressionStmt  go to state 254
    IncDecStmt      go to state 255
    Assignment      go to state 256
    ShortVarDecl    go to state 257
    IdentifierList  go to state 258
    CompositeLit    go to state 109
    LiteralType     go to state 110
    Operand         go to state 111
    OperandName     go to state 112
    SliceType       go to state 72
    Expression      go to state 324
    UnaryExpr       go to state 114
    PrimaryExpr     go to state 115
    MakeExpr        go to state 116
    ExpressionList  go to state 269
    MapType         go to state 73
    StructType      go to state 74
    PointerType     go to state 75
    ArrayType       go to state 76
    Literal         go to state 117
    BasicLit        go to state 118
    String          go to state 119


State 294

  134 ForStmt: FOR OpenBlock • SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR OpenBlock • SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  136        | FOR OpenBlock • Condition forMarker Block forMarkerEnd CloseBlock
  137        | FOR OpenBlock • EmptyStmt Empty forMarker Expression Empty EmptyStmt Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 297

    INTEGER_VAL         [reduce using rule 50 (EmptyStmt)]
    FLOAT_VAL           [reduce using rule 50 (EmptyStmt)]
    TRUE                [reduce using rule 50 (EmptyStmt)]
    FALSE               [reduce using rule 50 (EmptyStmt)]
    STRUCT              [reduce using rule 50 (EmptyStmt)]
    NEW                 [reduce using rule 50 (EmptyStmt)]
    MAP                 [reduce using rule 50 (EmptyStmt)]
    MAKE                [reduce using rule 50 (EmptyStmt)]
    ADD                 [reduce using rule 50 (EmptyStmt)]
    SUB                 [reduce using rule 50 (EmptyStmt)]
    NOT                 [reduce using rule 50 (EmptyStmt)]
    MUL                 [reduce using rule 50 (EmptyStmt)]
    AND                 [reduce using rule 50 (EmptyStmt)]
    LEFTPARAN           [reduce using rule 50 (EmptyStmt)]
    LEFTSQUARE          [reduce using rule 50 (EmptyStmt)]
    RAW_STRING          [reduce using rule 50 (EmptyStmt)]
    INTERPRETED_STRING  [reduce using rule 50 (EmptyStmt)]
    BYTE_VAL            [reduce using rule 50 (EmptyStmt)]
    IDENTIFIER          [reduce using rule 50 (EmptyStmt)]
    $default            reduce using rule 50 (EmptyStmt)

    Condition       go to state 325
    SimpleStmt      go to state 326
    EmptyStmt       go to state 327
    ExpressionStmt  go to state 254
    IncDecStmt      go to state 255
    Assignment      go to state 256
    ShortVarDecl    go to state 257
    IdentifierList  go to state 258
    CompositeLit    go to state 109
    LiteralType     go to state 110
    Operand         go to state 111
    OperandName     go to state 112
    SliceType       go to state 72
    Expression      go to state 328
    UnaryExpr       go to state 114
    PrimaryExpr     go to state 115
    MakeExpr        go to state 116
    ExpressionList  go to state 269
    MapType         go to state 73
    StructType      go to state 74
    PointerType     go to state 75
    ArrayType       go to state 76
    Literal         go to state 117
    BasicLit        go to state 118
    String          go to state 119


State 295

  133 ForStmt: FOR forMarker • Block forMarkerEnd

    LEFTBRACE  shift, and go to state 127

    Block  go to state 329


State 296

  113 ExprSwitchStmt: SWITCH LEFTBRACE • RIGHTBRACE
  117               | SWITCH LEFTBRACE • ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 332

    ExprCaseClauseList  go to state 333
    ExprCaseClause      go to state 334
    ExprSwitchCase      go to state 335


State 297

   78 IdentifierList: IDENTIFIER •
   92 OperandName: IDENTIFIER •

    INFER_EQ  reduce using rule 78 (IdentifierList)
    COMMA     reduce using rule 78 (IdentifierList)
    COMMA     [reduce using rule 92 (OperandName)]
    $default  reduce using rule 92 (OperandName)


State 298

  114 ExprSwitchStmt: SWITCH SimpleStmt • SCOLON LEFTBRACE RIGHTBRACE
  116               | SWITCH SimpleStmt • SCOLON Expression LEFTBRACE RIGHTBRACE
  118               | SWITCH SimpleStmt • SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE
  120               | SWITCH SimpleStmt • SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

    SCOLON  shift, and go to state 336


State 299

   52 ExpressionStmt: Expression •
   53 IncDecStmt: Expression • PLUSPLUS
   54           | Expression • MINUSMINUS
  115 ExprSwitchStmt: SWITCH Expression • LEFTBRACE RIGHTBRACE
  119               | SWITCH Expression • LEFTBRACE ExprCaseClauseList RIGHTBRACE
  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression
  194 ExpressionList: Expression •

    PLUSPLUS    shift, and go to state 306
    MINUSMINUS  shift, and go to state 307
    ANDNOT      shift, and go to state 157
    ADD         shift, and go to state 158
    SUB         shift, and go to state 159
    XOR         shift, and go to state 160
    MUL         shift, and go to state 161
    AND         shift, and go to state 162
    OR          shift, and go to state 163
    LOGOR       shift, and go to state 164
    LOGAND      shift, and go to state 165
    ISEQ        shift, and go to state 166
    NEQ         shift, and go to state 167
    LESSEQ      shift, and go to state 168
    GRTEQ       shift, and go to state 169
    GRT         shift, and go to state 170
    LESS        shift, and go to state 171
    MOD         shift, and go to state 172
    QUOT        shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    LEFTBRACE   shift, and go to state 337

    SCOLON    reduce using rule 52 (ExpressionStmt)
    $default  reduce using rule 194 (ExpressionList)


State 300

  111 GotoStmt: GOTO IDENTIFIER •

    $default  reduce using rule 111 (GotoStmt)


State 301

   44 LabeledStmt: IDENTIFIER COLON • Statement

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    BREAK               shift, and go to state 238
    CONTINUE            shift, and go to state 239
    RETURN              shift, and go to state 240
    STRUCT              shift, and go to state 62
    IF                  shift, and go to state 241
    FOR                 shift, and go to state 242
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 243
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    GOTO                shift, and go to state 244
    FALLTHROUGH         shift, and go to state 245
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTBRACE           shift, and go to state 127
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 246

    $default  reduce using rule 50 (EmptyStmt)

    Block            go to state 247
    Statement        go to state 338
    Declaration      go to state 250
    LabeledStmt      go to state 251
    SimpleStmt       go to state 252
    EmptyStmt        go to state 253
    ExpressionStmt   go to state 254
    IncDecStmt       go to state 255
    Assignment       go to state 256
    ShortVarDecl     go to state 257
    VarDecl          go to state 28
    IdentifierList   go to state 258
    CompositeLit     go to state 109
    LiteralType      go to state 110
    Operand          go to state 111
    OperandName      go to state 112
    SliceType        go to state 72
    ReturnStmt       go to state 259
    BreakStmt        go to state 260
    ContinueStmt     go to state 261
    GotoStmt         go to state 262
    SwitchStmt       go to state 263
    ExprSwitchStmt   go to state 264
    FallthroughStmt  go to state 265
    IfStmt           go to state 266
    ForStmt          go to state 267
    Expression       go to state 268
    UnaryExpr        go to state 114
    PrimaryExpr      go to state 115
    MakeExpr         go to state 116
    ExpressionList   go to state 269
    TypeDecl         go to state 29
    MapType          go to state 73
    StructType       go to state 74
    PointerType      go to state 75
    ArrayType        go to state 76
    Literal          go to state 117
    BasicLit         go to state 118
    String           go to state 119


State 302

   22 Block: LEFTBRACE OpenBlock StatementList CloseBlock • RIGHTBRACE

    RIGHTBRACE  shift, and go to state 339


State 303

   24 StatementList: StatementList Statement • SCOLON

    SCOLON  shift, and go to state 340


State 304

   25 StatementList: Statement SCOLON •

    $default  reduce using rule 25 (StatementList)


State 305

   56 ShortVarDecl: IdentifierList INFER_EQ • ExpressionList

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit    go to state 109
    LiteralType     go to state 110
    Operand         go to state 111
    OperandName     go to state 112
    SliceType       go to state 72
    Expression      go to state 121
    UnaryExpr       go to state 114
    PrimaryExpr     go to state 115
    MakeExpr        go to state 116
    ExpressionList  go to state 341
    MapType         go to state 73
    StructType      go to state 74
    PointerType     go to state 75
    ArrayType       go to state 76
    Literal         go to state 117
    BasicLit        go to state 118
    String          go to state 119


State 306

   53 IncDecStmt: Expression PLUSPLUS •

    $default  reduce using rule 53 (IncDecStmt)


State 307

   54 IncDecStmt: Expression MINUSMINUS •

    $default  reduce using rule 54 (IncDecStmt)


State 308

   55 Assignment: ExpressionList ASSGN_OP • ExpressionList

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit    go to state 109
    LiteralType     go to state 110
    Operand         go to state 111
    OperandName     go to state 112
    SliceType       go to state 72
    Expression      go to state 121
    UnaryExpr       go to state 114
    PrimaryExpr     go to state 115
    MakeExpr        go to state 116
    ExpressionList  go to state 342
    MapType         go to state 73
    StructType      go to state 74
    PointerType     go to state 75
    ArrayType       go to state 76
    Literal         go to state 117
    BasicLit        go to state 118
    String          go to state 119


State 309

   69 TypeList: TypeList COMMA Type •

    $default  reduce using rule 69 (TypeList)


State 310

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression
  186 MakeExpr: MAKE LEFTPARAN Type COMMA Expression • COMMA Expression RIGHTPARAN
  187         | MAKE LEFTPARAN Type COMMA Expression • RIGHTPARAN

    ANDNOT      shift, and go to state 157
    ADD         shift, and go to state 158
    SUB         shift, and go to state 159
    XOR         shift, and go to state 160
    MUL         shift, and go to state 161
    AND         shift, and go to state 162
    OR          shift, and go to state 163
    LOGOR       shift, and go to state 164
    LOGAND      shift, and go to state 165
    ISEQ        shift, and go to state 166
    NEQ         shift, and go to state 167
    LESSEQ      shift, and go to state 168
    GRTEQ       shift, and go to state 169
    GRT         shift, and go to state 170
    LESS        shift, and go to state 171
    MOD         shift, and go to state 172
    QUOT        shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    RIGHTPARAN  shift, and go to state 343
    COMMA       shift, and go to state 344


State 311

   95 LiteralValue: LEFTBRACE ElementList COMMA RIGHTBRACE •

    $default  reduce using rule 95 (LiteralValue)


State 312

   98 ElementList: ElementList COMMA KeyedElement •

    $default  reduce using rule 98 (ElementList)


State 313

  104 Element: LiteralValue •

    $default  reduce using rule 104 (Element)


State 314

  100 KeyedElement: Key COLON Element •

    $default  reduce using rule 100 (KeyedElement)


State 315

  103 Element: Expression •
  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    ANDNOT  shift, and go to state 157
    ADD     shift, and go to state 158
    SUB     shift, and go to state 159
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    OR      shift, and go to state 163
    LOGOR   shift, and go to state 164
    LOGAND  shift, and go to state 165
    ISEQ    shift, and go to state 166
    NEQ     shift, and go to state 167
    LESSEQ  shift, and go to state 168
    GRTEQ   shift, and go to state 169
    GRT     shift, and go to state 170
    LESS    shift, and go to state 171
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175

    $default  reduce using rule 103 (Element)


State 316

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression
  176 KeyValueList: Expression COLON Expression •
  177             | Expression COLON Expression • COMMA KeyValueList

    ANDNOT  shift, and go to state 157
    ADD     shift, and go to state 158
    SUB     shift, and go to state 159
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    OR      shift, and go to state 163
    LOGOR   shift, and go to state 164
    LOGAND  shift, and go to state 165
    ISEQ    shift, and go to state 166
    NEQ     shift, and go to state 167
    LESSEQ  shift, and go to state 168
    GRTEQ   shift, and go to state 169
    GRT     shift, and go to state 170
    LESS    shift, and go to state 171
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175
    COMMA   shift, and go to state 345

    $default  reduce using rule 176 (KeyValueList)


State 317

  193 Arguments: LEFTPARAN ExpressionList ELIPSIS RIGHTPARAN •

    $default  reduce using rule 193 (Arguments)


State 318

  180 Slice: LEFTSQUARE COLON Expression RIGHTSQUARE •

    $default  reduce using rule 180 (Slice)


State 319

  184 Slice: LEFTSQUARE COLON Expression COLON • Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 346
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 320

  182 Slice: LEFTSQUARE Expression COLON RIGHTSQUARE •

    $default  reduce using rule 182 (Slice)


State 321

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression
  183 Slice: LEFTSQUARE Expression COLON Expression • RIGHTSQUARE
  185      | LEFTSQUARE Expression COLON Expression • COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 157
    ADD          shift, and go to state 158
    SUB          shift, and go to state 159
    XOR          shift, and go to state 160
    MUL          shift, and go to state 161
    AND          shift, and go to state 162
    OR           shift, and go to state 163
    LOGOR        shift, and go to state 164
    LOGAND       shift, and go to state 165
    ISEQ         shift, and go to state 166
    NEQ          shift, and go to state 167
    LESSEQ       shift, and go to state 168
    GRTEQ        shift, and go to state 169
    GRT          shift, and go to state 170
    LESS         shift, and go to state 171
    MOD          shift, and go to state 172
    QUOT         shift, and go to state 173
    SHL          shift, and go to state 174
    SHR          shift, and go to state 175
    RIGHTSQUARE  shift, and go to state 347
    COLON        shift, and go to state 348


State 322

  190 TypeAssertion: DOT LEFTPARAN Type RIGHTPARAN •

    $default  reduce using rule 190 (TypeAssertion)


State 323

  128 IfStmt: IF OpenBlock SimpleStmt • SCOLON Expression Block CloseBlock
  131       | IF OpenBlock SimpleStmt • SCOLON Expression Block ELSE IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt • SCOLON Expression Block ELSE Block CloseBlock

    SCOLON  shift, and go to state 349


State 324

   52 ExpressionStmt: Expression •
   53 IncDecStmt: Expression • PLUSPLUS
   54           | Expression • MINUSMINUS
  127 IfStmt: IF OpenBlock Expression • Block CloseBlock
  129       | IF OpenBlock Expression • Block ELSE IfStmt CloseBlock
  130       | IF OpenBlock Expression • Block ELSE Block CloseBlock
  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression
  194 ExpressionList: Expression •

    PLUSPLUS    shift, and go to state 306
    MINUSMINUS  shift, and go to state 307
    ANDNOT      shift, and go to state 157
    ADD         shift, and go to state 158
    SUB         shift, and go to state 159
    XOR         shift, and go to state 160
    MUL         shift, and go to state 161
    AND         shift, and go to state 162
    OR          shift, and go to state 163
    LOGOR       shift, and go to state 164
    LOGAND      shift, and go to state 165
    ISEQ        shift, and go to state 166
    NEQ         shift, and go to state 167
    LESSEQ      shift, and go to state 168
    GRTEQ       shift, and go to state 169
    GRT         shift, and go to state 170
    LESS        shift, and go to state 171
    MOD         shift, and go to state 172
    QUOT        shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    LEFTBRACE   shift, and go to state 127

    SCOLON    reduce using rule 52 (ExpressionStmt)
    $default  reduce using rule 194 (ExpressionList)

    Block  go to state 350


State 325

  136 ForStmt: FOR OpenBlock Condition • forMarker Block forMarkerEnd CloseBlock

    $default  reduce using rule 138 (forMarker)

    forMarker  go to state 351


State 326

  134 ForStmt: FOR OpenBlock SimpleStmt • SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR OpenBlock SimpleStmt • SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    SCOLON  shift, and go to state 352


State 327

   45 SimpleStmt: EmptyStmt •
  137 ForStmt: FOR OpenBlock EmptyStmt • Empty forMarker Expression Empty EmptyStmt Block forMarkerEnd CloseBlock

    SCOLON    reduce using rule 45 (SimpleStmt)
    $default  reduce using rule 140 (Empty)

    Empty  go to state 353


State 328

   23 Condition: Expression •
   52 ExpressionStmt: Expression •
   53 IncDecStmt: Expression • PLUSPLUS
   54           | Expression • MINUSMINUS
  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression
  194 ExpressionList: Expression •

    PLUSPLUS    shift, and go to state 306
    MINUSMINUS  shift, and go to state 307
    ANDNOT      shift, and go to state 157
    ADD         shift, and go to state 158
    SUB         shift, and go to state 159
    XOR         shift, and go to state 160
    MUL         shift, and go to state 161
    AND         shift, and go to state 162
    OR          shift, and go to state 163
    LOGOR       shift, and go to state 164
    LOGAND      shift, and go to state 165
    ISEQ        shift, and go to state 166
    NEQ         shift, and go to state 167
    LESSEQ      shift, and go to state 168
    GRTEQ       shift, and go to state 169
    GRT         shift, and go to state 170
    LESS        shift, and go to state 171
    MOD         shift, and go to state 172
    QUOT        shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175

    SCOLON     reduce using rule 52 (ExpressionStmt)
    LEFTBRACE  reduce using rule 23 (Condition)
    $default   reduce using rule 194 (ExpressionList)


State 329

  133 ForStmt: FOR forMarker Block • forMarkerEnd

    $default  reduce using rule 139 (forMarkerEnd)

    forMarkerEnd  go to state 354


State 330

  124 ExprSwitchCase: CASE • ExpressionList

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit    go to state 109
    LiteralType     go to state 110
    Operand         go to state 111
    OperandName     go to state 112
    SliceType       go to state 72
    Expression      go to state 121
    UnaryExpr       go to state 114
    PrimaryExpr     go to state 115
    MakeExpr        go to state 116
    ExpressionList  go to state 355
    MapType         go to state 73
    StructType      go to state 74
    PointerType     go to state 75
    ArrayType       go to state 76
    Literal         go to state 117
    BasicLit        go to state 118
    String          go to state 119


State 331

  125 ExprSwitchCase: DEFAULT •

    $default  reduce using rule 125 (ExprSwitchCase)


State 332

  113 ExprSwitchStmt: SWITCH LEFTBRACE RIGHTBRACE •

    $default  reduce using rule 113 (ExprSwitchStmt)


State 333

  117 ExprSwitchStmt: SWITCH LEFTBRACE ExprCaseClauseList • RIGHTBRACE
  121 ExprCaseClauseList: ExprCaseClauseList • ExprCaseClause

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 356

    ExprCaseClause  go to state 357
    ExprSwitchCase  go to state 335


State 334

  122 ExprCaseClauseList: ExprCaseClause •

    $default  reduce using rule 122 (ExprCaseClauseList)


State 335

  123 ExprCaseClause: ExprSwitchCase • COLON StatementList

    COLON  shift, and go to state 358


State 336

  114 ExprSwitchStmt: SWITCH SimpleStmt SCOLON • LEFTBRACE RIGHTBRACE
  116               | SWITCH SimpleStmt SCOLON • Expression LEFTBRACE RIGHTBRACE
  118               | SWITCH SimpleStmt SCOLON • LEFTBRACE ExprCaseClauseList RIGHTBRACE
  120               | SWITCH SimpleStmt SCOLON • Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTBRACE           shift, and go to state 359
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 360
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 337

  115 ExprSwitchStmt: SWITCH Expression LEFTBRACE • RIGHTBRACE
  119               | SWITCH Expression LEFTBRACE • ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 361

    ExprCaseClauseList  go to state 362
    ExprCaseClause      go to state 334
    ExprSwitchCase      go to state 335


State 338

   44 LabeledStmt: IDENTIFIER COLON Statement •

    $default  reduce using rule 44 (LabeledStmt)


State 339

   22 Block: LEFTBRACE OpenBlock StatementList CloseBlock RIGHTBRACE •

    $default  reduce using rule 22 (Block)


State 340

   24 StatementList: StatementList Statement SCOLON •

    $default  reduce using rule 24 (StatementList)


State 341

   56 ShortVarDecl: IdentifierList INFER_EQ ExpressionList •
  195 ExpressionList: ExpressionList • COMMA Expression

    COMMA  shift, and go to state 185

    $default  reduce using rule 56 (ShortVarDecl)


State 342

   55 Assignment: ExpressionList ASSGN_OP ExpressionList •
  195 ExpressionList: ExpressionList • COMMA Expression

    COMMA  shift, and go to state 185

    $default  reduce using rule 55 (Assignment)


State 343

  187 MakeExpr: MAKE LEFTPARAN Type COMMA Expression RIGHTPARAN •

    $default  reduce using rule 187 (MakeExpr)


State 344

  186 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA • Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 363
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 345

  177 KeyValueList: Expression COLON Expression COMMA • KeyValueList

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 209
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    KeyValueList  go to state 364
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 346

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression
  184 Slice: LEFTSQUARE COLON Expression COLON Expression • RIGHTSQUARE

    ANDNOT       shift, and go to state 157
    ADD          shift, and go to state 158
    SUB          shift, and go to state 159
    XOR          shift, and go to state 160
    MUL          shift, and go to state 161
    AND          shift, and go to state 162
    OR           shift, and go to state 163
    LOGOR        shift, and go to state 164
    LOGAND       shift, and go to state 165
    ISEQ         shift, and go to state 166
    NEQ          shift, and go to state 167
    LESSEQ       shift, and go to state 168
    GRTEQ        shift, and go to state 169
    GRT          shift, and go to state 170
    LESS         shift, and go to state 171
    MOD          shift, and go to state 172
    QUOT         shift, and go to state 173
    SHL          shift, and go to state 174
    SHR          shift, and go to state 175
    RIGHTSQUARE  shift, and go to state 365


State 347

  183 Slice: LEFTSQUARE Expression COLON Expression RIGHTSQUARE •

    $default  reduce using rule 183 (Slice)


State 348

  185 Slice: LEFTSQUARE Expression COLON Expression COLON • Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 366
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 349

  128 IfStmt: IF OpenBlock SimpleStmt SCOLON • Expression Block CloseBlock
  131       | IF OpenBlock SimpleStmt SCOLON • Expression Block ELSE IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt SCOLON • Expression Block ELSE Block CloseBlock

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 367
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 350

  127 IfStmt: IF OpenBlock Expression Block • CloseBlock
  129       | IF OpenBlock Expression Block • ELSE IfStmt CloseBlock
  130       | IF OpenBlock Expression Block • ELSE Block CloseBlock

    ELSE  shift, and go to state 368

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 369


State 351

  136 ForStmt: FOR OpenBlock Condition forMarker • Block forMarkerEnd CloseBlock

    LEFTBRACE  shift, and go to state 127

    Block  go to state 370


State 352

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON • forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR OpenBlock SimpleStmt SCOLON • forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    $default  reduce using rule 138 (forMarker)

    forMarker  go to state 371


State 353

  137 ForStmt: FOR OpenBlock EmptyStmt Empty • forMarker Expression Empty EmptyStmt Block forMarkerEnd CloseBlock

    $default  reduce using rule 138 (forMarker)

    forMarker  go to state 372


State 354

  133 ForStmt: FOR forMarker Block forMarkerEnd •

    $default  reduce using rule 133 (ForStmt)


State 355

  124 ExprSwitchCase: CASE ExpressionList •
  195 ExpressionList: ExpressionList • COMMA Expression

    COMMA  shift, and go to state 185

    $default  reduce using rule 124 (ExprSwitchCase)


State 356

  117 ExprSwitchStmt: SWITCH LEFTBRACE ExprCaseClauseList RIGHTBRACE •

    $default  reduce using rule 117 (ExprSwitchStmt)


State 357

  121 ExprCaseClauseList: ExprCaseClauseList ExprCaseClause •

    $default  reduce using rule 121 (ExprCaseClauseList)


State 358

  123 ExprCaseClause: ExprSwitchCase COLON • StatementList

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    BREAK               shift, and go to state 238
    CONTINUE            shift, and go to state 239
    RETURN              shift, and go to state 240
    STRUCT              shift, and go to state 62
    IF                  shift, and go to state 241
    FOR                 shift, and go to state 242
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 243
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    GOTO                shift, and go to state 244
    FALLTHROUGH         shift, and go to state 245
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTBRACE           shift, and go to state 127
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 246

    $default  reduce using rule 50 (EmptyStmt)

    Block            go to state 247
    StatementList    go to state 373
    Statement        go to state 249
    Declaration      go to state 250
    LabeledStmt      go to state 251
    SimpleStmt       go to state 252
    EmptyStmt        go to state 253
    ExpressionStmt   go to state 254
    IncDecStmt       go to state 255
    Assignment       go to state 256
    ShortVarDecl     go to state 257
    VarDecl          go to state 28
    IdentifierList   go to state 258
    CompositeLit     go to state 109
    LiteralType      go to state 110
    Operand          go to state 111
    OperandName      go to state 112
    SliceType        go to state 72
    ReturnStmt       go to state 259
    BreakStmt        go to state 260
    ContinueStmt     go to state 261
    GotoStmt         go to state 262
    SwitchStmt       go to state 263
    ExprSwitchStmt   go to state 264
    FallthroughStmt  go to state 265
    IfStmt           go to state 266
    ForStmt          go to state 267
    Expression       go to state 268
    UnaryExpr        go to state 114
    PrimaryExpr      go to state 115
    MakeExpr         go to state 116
    ExpressionList   go to state 269
    TypeDecl         go to state 29
    MapType          go to state 73
    StructType       go to state 74
    PointerType      go to state 75
    ArrayType        go to state 76
    Literal          go to state 117
    BasicLit         go to state 118
    String           go to state 119


State 359

  114 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE • RIGHTBRACE
  118               | SWITCH SimpleStmt SCOLON LEFTBRACE • ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 374

    ExprCaseClauseList  go to state 375
    ExprCaseClause      go to state 334
    ExprSwitchCase      go to state 335


State 360

  116 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression • LEFTBRACE RIGHTBRACE
  120               | SWITCH SimpleStmt SCOLON Expression • LEFTBRACE ExprCaseClauseList RIGHTBRACE
  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    ANDNOT     shift, and go to state 157
    ADD        shift, and go to state 158
    SUB        shift, and go to state 159
    XOR        shift, and go to state 160
    MUL        shift, and go to state 161
    AND        shift, and go to state 162
    OR         shift, and go to state 163
    LOGOR      shift, and go to state 164
    LOGAND     shift, and go to state 165
    ISEQ       shift, and go to state 166
    NEQ        shift, and go to state 167
    LESSEQ     shift, and go to state 168
    GRTEQ      shift, and go to state 169
    GRT        shift, and go to state 170
    LESS       shift, and go to state 171
    MOD        shift, and go to state 172
    QUOT       shift, and go to state 173
    SHL        shift, and go to state 174
    SHR        shift, and go to state 175
    LEFTBRACE  shift, and go to state 376


State 361

  115 ExprSwitchStmt: SWITCH Expression LEFTBRACE RIGHTBRACE •

    $default  reduce using rule 115 (ExprSwitchStmt)


State 362

  119 ExprSwitchStmt: SWITCH Expression LEFTBRACE ExprCaseClauseList • RIGHTBRACE
  121 ExprCaseClauseList: ExprCaseClauseList • ExprCaseClause

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 377

    ExprCaseClause  go to state 357
    ExprSwitchCase  go to state 335


State 363

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression
  186 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression • RIGHTPARAN

    ANDNOT      shift, and go to state 157
    ADD         shift, and go to state 158
    SUB         shift, and go to state 159
    XOR         shift, and go to state 160
    MUL         shift, and go to state 161
    AND         shift, and go to state 162
    OR          shift, and go to state 163
    LOGOR       shift, and go to state 164
    LOGAND      shift, and go to state 165
    ISEQ        shift, and go to state 166
    NEQ         shift, and go to state 167
    LESSEQ      shift, and go to state 168
    GRTEQ       shift, and go to state 169
    GRT         shift, and go to state 170
    LESS        shift, and go to state 171
    MOD         shift, and go to state 172
    QUOT        shift, and go to state 173
    SHL         shift, and go to state 174
    SHR         shift, and go to state 175
    RIGHTPARAN  shift, and go to state 378


State 364

  177 KeyValueList: Expression COLON Expression COMMA KeyValueList •

    $default  reduce using rule 177 (KeyValueList)


State 365

  184 Slice: LEFTSQUARE COLON Expression COLON Expression RIGHTSQUARE •

    $default  reduce using rule 184 (Slice)


State 366

  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression
  185 Slice: LEFTSQUARE Expression COLON Expression COLON Expression • RIGHTSQUARE

    ANDNOT       shift, and go to state 157
    ADD          shift, and go to state 158
    SUB          shift, and go to state 159
    XOR          shift, and go to state 160
    MUL          shift, and go to state 161
    AND          shift, and go to state 162
    OR           shift, and go to state 163
    LOGOR        shift, and go to state 164
    LOGAND       shift, and go to state 165
    ISEQ         shift, and go to state 166
    NEQ          shift, and go to state 167
    LESSEQ       shift, and go to state 168
    GRTEQ        shift, and go to state 169
    GRT          shift, and go to state 170
    LESS         shift, and go to state 171
    MOD          shift, and go to state 172
    QUOT         shift, and go to state 173
    SHL          shift, and go to state 174
    SHR          shift, and go to state 175
    RIGHTSQUARE  shift, and go to state 379


State 367

  128 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression • Block CloseBlock
  131       | IF OpenBlock SimpleStmt SCOLON Expression • Block ELSE IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt SCOLON Expression • Block ELSE Block CloseBlock
  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    ANDNOT     shift, and go to state 157
    ADD        shift, and go to state 158
    SUB        shift, and go to state 159
    XOR        shift, and go to state 160
    MUL        shift, and go to state 161
    AND        shift, and go to state 162
    OR         shift, and go to state 163
    LOGOR      shift, and go to state 164
    LOGAND     shift, and go to state 165
    ISEQ       shift, and go to state 166
    NEQ        shift, and go to state 167
    LESSEQ     shift, and go to state 168
    GRTEQ      shift, and go to state 169
    GRT        shift, and go to state 170
    LESS       shift, and go to state 171
    MOD        shift, and go to state 172
    QUOT       shift, and go to state 173
    SHL        shift, and go to state 174
    SHR        shift, and go to state 175
    LEFTBRACE  shift, and go to state 127

    Block  go to state 380


State 368

  129 IfStmt: IF OpenBlock Expression Block ELSE • IfStmt CloseBlock
  130       | IF OpenBlock Expression Block ELSE • Block CloseBlock

    IF         shift, and go to state 241
    LEFTBRACE  shift, and go to state 127

    Block   go to state 381
    IfStmt  go to state 382


State 369

  127 IfStmt: IF OpenBlock Expression Block CloseBlock •

    $default  reduce using rule 127 (IfStmt)


State 370

  136 ForStmt: FOR OpenBlock Condition forMarker Block • forMarkerEnd CloseBlock

    $default  reduce using rule 139 (forMarkerEnd)

    forMarkerEnd  go to state 383


State 371

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker • EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR OpenBlock SimpleStmt SCOLON forMarker • ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    $default  reduce using rule 51 (EmptyExpr)

    EmptyExpr       go to state 384
    ExpressionStmt  go to state 385
    CompositeLit    go to state 109
    LiteralType     go to state 110
    Operand         go to state 111
    OperandName     go to state 112
    SliceType       go to state 72
    Expression      go to state 386
    UnaryExpr       go to state 114
    PrimaryExpr     go to state 115
    MakeExpr        go to state 116
    MapType         go to state 73
    StructType      go to state 74
    PointerType     go to state 75
    ArrayType       go to state 76
    Literal         go to state 117
    BasicLit        go to state 118
    String          go to state 119


State 372

  137 ForStmt: FOR OpenBlock EmptyStmt Empty forMarker • Expression Empty EmptyStmt Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 67

    CompositeLit  go to state 109
    LiteralType   go to state 110
    Operand       go to state 111
    OperandName   go to state 112
    SliceType     go to state 72
    Expression    go to state 387
    UnaryExpr     go to state 114
    PrimaryExpr   go to state 115
    MakeExpr      go to state 116
    MapType       go to state 73
    StructType    go to state 74
    PointerType   go to state 75
    ArrayType     go to state 76
    Literal       go to state 117
    BasicLit      go to state 118
    String        go to state 119


State 373

   24 StatementList: StatementList • Statement SCOLON
  123 ExprCaseClause: ExprSwitchCase COLON StatementList •

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    BREAK               shift, and go to state 238
    CONTINUE            shift, and go to state 239
    RETURN              shift, and go to state 240
    STRUCT              shift, and go to state 62
    IF                  shift, and go to state 241
    FOR                 shift, and go to state 242
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 243
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    GOTO                shift, and go to state 244
    FALLTHROUGH         shift, and go to state 245
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTBRACE           shift, and go to state 127
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 246

    SCOLON    reduce using rule 50 (EmptyStmt)
    $default  reduce using rule 123 (ExprCaseClause)

    Block            go to state 247
    Statement        go to state 303
    Declaration      go to state 250
    LabeledStmt      go to state 251
    SimpleStmt       go to state 252
    EmptyStmt        go to state 253
    ExpressionStmt   go to state 254
    IncDecStmt       go to state 255
    Assignment       go to state 256
    ShortVarDecl     go to state 257
    VarDecl          go to state 28
    IdentifierList   go to state 258
    CompositeLit     go to state 109
    LiteralType      go to state 110
    Operand          go to state 111
    OperandName      go to state 112
    SliceType        go to state 72
    ReturnStmt       go to state 259
    BreakStmt        go to state 260
    ContinueStmt     go to state 261
    GotoStmt         go to state 262
    SwitchStmt       go to state 263
    ExprSwitchStmt   go to state 264
    FallthroughStmt  go to state 265
    IfStmt           go to state 266
    ForStmt          go to state 267
    Expression       go to state 268
    UnaryExpr        go to state 114
    PrimaryExpr      go to state 115
    MakeExpr         go to state 116
    ExpressionList   go to state 269
    TypeDecl         go to state 29
    MapType          go to state 73
    StructType       go to state 74
    PointerType      go to state 75
    ArrayType        go to state 76
    Literal          go to state 117
    BasicLit         go to state 118
    String           go to state 119


State 374

  114 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE •

    $default  reduce using rule 114 (ExprSwitchStmt)


State 375

  118 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList • RIGHTBRACE
  121 ExprCaseClauseList: ExprCaseClauseList • ExprCaseClause

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 388

    ExprCaseClause  go to state 357
    ExprSwitchCase  go to state 335


State 376

  116 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE • RIGHTBRACE
  120               | SWITCH SimpleStmt SCOLON Expression LEFTBRACE • ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 389

    ExprCaseClauseList  go to state 390
    ExprCaseClause      go to state 334
    ExprSwitchCase      go to state 335


State 377

  119 ExprSwitchStmt: SWITCH Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE •

    $default  reduce using rule 119 (ExprSwitchStmt)


State 378

  186 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN •

    $default  reduce using rule 186 (MakeExpr)


State 379

  185 Slice: LEFTSQUARE Expression COLON Expression COLON Expression RIGHTSQUARE •

    $default  reduce using rule 185 (Slice)


State 380

  128 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block • CloseBlock
  131       | IF OpenBlock SimpleStmt SCOLON Expression Block • ELSE IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt SCOLON Expression Block • ELSE Block CloseBlock

    ELSE  shift, and go to state 391

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 392


State 381

  130 IfStmt: IF OpenBlock Expression Block ELSE Block • CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 393


State 382

  129 IfStmt: IF OpenBlock Expression Block ELSE IfStmt • CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 394


State 383

  136 ForStmt: FOR OpenBlock Condition forMarker Block forMarkerEnd • CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 395


State 384

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr • SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    SCOLON  shift, and go to state 396


State 385

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt • SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    SCOLON  shift, and go to state 397


State 386

   52 ExpressionStmt: Expression •
  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    ANDNOT  shift, and go to state 157
    ADD     shift, and go to state 158
    SUB     shift, and go to state 159
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    OR      shift, and go to state 163
    LOGOR   shift, and go to state 164
    LOGAND  shift, and go to state 165
    ISEQ    shift, and go to state 166
    NEQ     shift, and go to state 167
    LESSEQ  shift, and go to state 168
    GRTEQ   shift, and go to state 169
    GRT     shift, and go to state 170
    LESS    shift, and go to state 171
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175

    $default  reduce using rule 52 (ExpressionStmt)


State 387

  137 ForStmt: FOR OpenBlock EmptyStmt Empty forMarker Expression • Empty EmptyStmt Block forMarkerEnd CloseBlock
  141 Expression: Expression • MUL Expression
  142           | Expression • QUOT Expression
  143           | Expression • MOD Expression
  144           | Expression • SHL Expression
  145           | Expression • SHR Expression
  146           | Expression • AND Expression
  147           | Expression • ANDNOT Expression
  148           | Expression • ADD Expression
  149           | Expression • SUB Expression
  150           | Expression • OR Expression
  151           | Expression • XOR Expression
  152           | Expression • LOGAND Expression
  153           | Expression • LOGOR Expression
  154           | Expression • ISEQ Expression
  155           | Expression • NEQ Expression
  156           | Expression • GRTEQ Expression
  157           | Expression • GRT Expression
  158           | Expression • LESSEQ Expression
  159           | Expression • LESS Expression

    ANDNOT  shift, and go to state 157
    ADD     shift, and go to state 158
    SUB     shift, and go to state 159
    XOR     shift, and go to state 160
    MUL     shift, and go to state 161
    AND     shift, and go to state 162
    OR      shift, and go to state 163
    LOGOR   shift, and go to state 164
    LOGAND  shift, and go to state 165
    ISEQ    shift, and go to state 166
    NEQ     shift, and go to state 167
    LESSEQ  shift, and go to state 168
    GRTEQ   shift, and go to state 169
    GRT     shift, and go to state 170
    LESS    shift, and go to state 171
    MOD     shift, and go to state 172
    QUOT    shift, and go to state 173
    SHL     shift, and go to state 174
    SHR     shift, and go to state 175

    $default  reduce using rule 140 (Empty)

    Empty  go to state 398


State 388

  118 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE •

    $default  reduce using rule 118 (ExprSwitchStmt)


State 389

  116 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE RIGHTBRACE •

    $default  reduce using rule 116 (ExprSwitchStmt)


State 390

  120 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList • RIGHTBRACE
  121 ExprCaseClauseList: ExprCaseClauseList • ExprCaseClause

    CASE        shift, and go to state 330
    DEFAULT     shift, and go to state 331
    RIGHTBRACE  shift, and go to state 399

    ExprCaseClause  go to state 357
    ExprSwitchCase  go to state 335


State 391

  131 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE • IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt SCOLON Expression Block ELSE • Block CloseBlock

    IF         shift, and go to state 241
    LEFTBRACE  shift, and go to state 127

    Block   go to state 400
    IfStmt  go to state 401


State 392

  128 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block CloseBlock •

    $default  reduce using rule 128 (IfStmt)


State 393

  130 IfStmt: IF OpenBlock Expression Block ELSE Block CloseBlock •

    $default  reduce using rule 130 (IfStmt)


State 394

  129 IfStmt: IF OpenBlock Expression Block ELSE IfStmt CloseBlock •

    $default  reduce using rule 129 (IfStmt)


State 395

  136 ForStmt: FOR OpenBlock Condition forMarker Block forMarkerEnd CloseBlock •

    $default  reduce using rule 136 (ForStmt)


State 396

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON • SimpleStmt Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 297

    $default  reduce using rule 50 (EmptyStmt)

    SimpleStmt      go to state 402
    EmptyStmt       go to state 253
    ExpressionStmt  go to state 254
    IncDecStmt      go to state 255
    Assignment      go to state 256
    ShortVarDecl    go to state 257
    IdentifierList  go to state 258
    CompositeLit    go to state 109
    LiteralType     go to state 110
    Operand         go to state 111
    OperandName     go to state 112
    SliceType       go to state 72
    Expression      go to state 268
    UnaryExpr       go to state 114
    PrimaryExpr     go to state 115
    MakeExpr        go to state 116
    ExpressionList  go to state 269
    MapType         go to state 73
    StructType      go to state 74
    PointerType     go to state 75
    ArrayType       go to state 76
    Literal         go to state 117
    BasicLit        go to state 118
    String          go to state 119


State 397

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON • SimpleStmt Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 94
    FLOAT_VAL           shift, and go to state 95
    TRUE                shift, and go to state 96
    FALSE               shift, and go to state 97
    STRUCT              shift, and go to state 62
    NEW                 shift, and go to state 98
    MAP                 shift, and go to state 63
    MAKE                shift, and go to state 99
    ADD                 shift, and go to state 101
    SUB                 shift, and go to state 102
    NOT                 shift, and go to state 103
    MUL                 shift, and go to state 104
    AND                 shift, and go to state 105
    LEFTPARAN           shift, and go to state 107
    LEFTSQUARE          shift, and go to state 65
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 108
    IDENTIFIER          shift, and go to state 297

    $default  reduce using rule 50 (EmptyStmt)

    SimpleStmt      go to state 403
    EmptyStmt       go to state 253
    ExpressionStmt  go to state 254
    IncDecStmt      go to state 255
    Assignment      go to state 256
    ShortVarDecl    go to state 257
    IdentifierList  go to state 258
    CompositeLit    go to state 109
    LiteralType     go to state 110
    Operand         go to state 111
    OperandName     go to state 112
    SliceType       go to state 72
    Expression      go to state 268
    UnaryExpr       go to state 114
    PrimaryExpr     go to state 115
    MakeExpr        go to state 116
    ExpressionList  go to state 269
    MapType         go to state 73
    StructType      go to state 74
    PointerType     go to state 75
    ArrayType       go to state 76
    Literal         go to state 117
    BasicLit        go to state 118
    String          go to state 119


State 398

  137 ForStmt: FOR OpenBlock EmptyStmt Empty forMarker Expression Empty • EmptyStmt Block forMarkerEnd CloseBlock

    $default  reduce using rule 50 (EmptyStmt)

    EmptyStmt  go to state 404


State 399

  120 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE •

    $default  reduce using rule 120 (ExprSwitchStmt)


State 400

  132 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE Block • CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 405


State 401

  131 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE IfStmt • CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 406


State 402

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt • Block forMarkerEnd CloseBlock

    LEFTBRACE  shift, and go to state 127

    Block  go to state 407


State 403

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt • Block forMarkerEnd CloseBlock

    LEFTBRACE  shift, and go to state 127

    Block  go to state 408


State 404

  137 ForStmt: FOR OpenBlock EmptyStmt Empty forMarker Expression Empty EmptyStmt • Block forMarkerEnd CloseBlock

    LEFTBRACE  shift, and go to state 127

    Block  go to state 409


State 405

  132 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE Block CloseBlock •

    $default  reduce using rule 132 (IfStmt)


State 406

  131 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE IfStmt CloseBlock •

    $default  reduce using rule 131 (IfStmt)


State 407

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block • forMarkerEnd CloseBlock

    $default  reduce using rule 139 (forMarkerEnd)

    forMarkerEnd  go to state 410


State 408

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block • forMarkerEnd CloseBlock

    $default  reduce using rule 139 (forMarkerEnd)

    forMarkerEnd  go to state 411


State 409

  137 ForStmt: FOR OpenBlock EmptyStmt Empty forMarker Expression Empty EmptyStmt Block • forMarkerEnd CloseBlock

    $default  reduce using rule 139 (forMarkerEnd)

    forMarkerEnd  go to state 412


State 410

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd • CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 413


State 411

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd • CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 414


State 412

  137 ForStmt: FOR OpenBlock EmptyStmt Empty forMarker Expression Empty EmptyStmt Block forMarkerEnd • CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 415


State 413

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock •

    $default  reduce using rule 134 (ForStmt)


State 414

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock •

    $default  reduce using rule 135 (ForStmt)


State 415

  137 ForStmt: FOR OpenBlock EmptyStmt Empty forMarker Expression Empty EmptyStmt Block forMarkerEnd CloseBlock •

    $default  reduce using rule 137 (ForStmt)
