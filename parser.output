Nonterminals useless in grammar

    RangeClause


Terminals unused in grammar

    NULLPOINTER
    RANGE
    CONST
    EQ


Rules useless in grammar

  224 RangeClause: RANGE Expression
  225            | IdentifierList INFER_EQ RANGE Expression
  226            | ExpressionList ASSGN_OP RANGE Expression


State 115 conflicts: 1 shift/reduce
State 153 conflicts: 1 shift/reduce
State 154 conflicts: 1 shift/reduce, 1 reduce/reduce
State 252 conflicts: 1 reduce/reduce
State 300 conflicts: 19 shift/reduce
State 303 conflicts: 1 reduce/reduce


Grammar

    0 $accept: SourceFile $end

    1 SourceFile: PackageClause SCOLON ImportDeclList TopLevelDeclList

    2 OpenBlock: %empty

    3 CloseBlock: %empty

    4 PackageClause: PACKAGE PackageName

    5 PackageName: IDENTIFIER

    6 ImportDeclList: ImportDeclList ImportDecl SCOLON
    7               | ImportDecl SCOLON

    8 ImportDecl: IMPORT LEFTPARAN ImportSpecList RIGHTPARAN
    9           | IMPORT LEFTPARAN RIGHTPARAN
   10           | IMPORT ImportSpec

   11 ImportSpecList: ImportSpecList ImportSpec SCOLON
   12               | ImportSpec SCOLON

   13 ImportSpec: PackageName ImportPath
   14           | DOT ImportPath
   15           | ImportPath

   16 ImportPath: String

   17 TopLevelDeclList: TopLevelDeclList TopLevelDecl SCOLON
   18                 | TopLevelDecl SCOLON

   19 TopLevelDecl: Declaration
   20             | FunctionDecl
   21             | MethodDecl

   22 Block: LEFTBRACE OpenBlock StatementList CloseBlock RIGHTBRACE

   23 Condition: Expression

   24 StatementList: StatementList Statement SCOLON
   25              | Statement SCOLON

   26 Statement: Declaration
   27          | LabeledStmt
   28          | SimpleStmt
   29          | ReturnStmt
   30          | BreakStmt
   31          | ContinueStmt
   32          | GotoStmt
   33          | SwitchStmt
   34          | FallthroughStmt
   35          | Block
   36          | IfStmt
   37          | ForStmt

   38 Declaration: TypeDecl
   39            | VarDecl

   40 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature FunctionBody CloseBlock
   41             | FUNC IDENTIFIER OpenBlock Signature CloseBlock

   42 MethodDecl: FUNC Receiver IDENTIFIER Signature
   43           | FUNC Receiver IDENTIFIER Signature FunctionBody

   44 LabeledStmt: IDENTIFIER COLON Statement

   45 SimpleStmt: EmptyStmt
   46           | ExpressionStmt
   47           | IncDecStmt
   48           | Assignment
   49           | ShortVarDecl

   50 EmptyStmt: %empty

   51 EmptyExpr: %empty

   52 ExpressionStmt: Expression

   53 IncDecStmt: Expression PLUSPLUS
   54           | Expression MINUSMINUS

   55 Assignment: ExpressionList ASSGN_OP ExpressionList

   56 ShortVarDecl: IdentifierList INFER_EQ ExpressionList

   57 VarDecl: VAR VarSpec
   58        | VAR LEFTPARAN VarSpecList RIGHTPARAN

   59 VarSpecList: VarSpecList VarSpec SCOLON
   60            | VarSpec SCOLON

   61 VarSpec: IdentifierList Type
   62        | IdentifierList Type ASSGN_OP ExpressionList
   63        | IdentifierList ASSGN_OP ExpressionList

   64 FunctionBody: Block

   65 Signature: Parameters
   66          | Parameters Result

   67 Result: LEFTPARAN TypeList RIGHTPARAN
   68       | Type

   69 TypeList: TypeList COMMA Type
   70         | Type

   71 Parameters: LEFTPARAN RIGHTPARAN
   72           | LEFTPARAN ParameterList RIGHTPARAN
   73           | LEFTPARAN ParameterList COMMA RIGHTPARAN

   74 ParameterList: ParameterDecl
   75              | ParameterList COMMA ParameterDecl

   76 ParameterDecl: IdentifierList Type

   77 IdentifierList: IdentifierList COMMA IDENTIFIER
   78               | IDENTIFIER

   79 Receiver: Parameters

   80 CompositeLit: LiteralType LiteralValue

   81 LiteralType: StructType
   82            | ArrayType
   83            | PointerType
   84            | SliceType
   85            | LEFTSQUARE ELIPSIS RIGHTSQUARE Operand
   86            | MapType

   87 Type: LiteralType
   88     | OperandName

   89 Operand: Literal
   90        | OperandName
   91        | LEFTPARAN Expression RIGHTPARAN

   92 OperandName: IDENTIFIER

   93 LiteralValue: LEFTBRACE RIGHTBRACE
   94             | LEFTBRACE ElementList RIGHTBRACE
   95             | LEFTBRACE ElementList COMMA RIGHTBRACE

   96 SliceType: LEFTSQUARE RIGHTSQUARE Type

   97 ElementList: KeyedElement
   98            | ElementList COMMA KeyedElement

   99 KeyedElement: Element
  100             | Key COLON Element

  101 Key: Expression
  102    | LiteralValue

  103 Element: Expression
  104        | LiteralValue

  105 ReturnStmt: RETURN
  106           | RETURN ExpressionList

  107 BreakStmt: BREAK
  108          | BREAK IDENTIFIER

  109 ContinueStmt: CONTINUE
  110             | CONTINUE IDENTIFIER

  111 GotoStmt: GOTO IDENTIFIER

  112 SwitchStmt: ExprSwitchStmt

  113 ExprSwitchStmt: SWITCH LEFTBRACE RIGHTBRACE
  114               | SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE
  115               | SWITCH Expression LEFTBRACE RIGHTBRACE
  116               | SWITCH SimpleStmt SCOLON Expression LEFTBRACE RIGHTBRACE
  117               | SWITCH LEFTBRACE ExprCaseClauseList RIGHTBRACE
  118               | SWITCH SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE
  119               | SWITCH Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE
  120               | SWITCH SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

  121 ExprCaseClauseList: ExprCaseClauseList ExprCaseClause
  122                   | ExprCaseClause

  123 ExprCaseClause: ExprSwitchCase COLON StatementList

  124 ExprSwitchCase: CASE ExpressionList
  125               | DEFAULT

  126 FallthroughStmt: FALLTHROUGH

  127 IfStmt: IF OpenBlock Expression Block CloseBlock
  128       | IF OpenBlock SimpleStmt SCOLON Expression Block CloseBlock
  129       | IF OpenBlock Expression Block ELSE IfStmt CloseBlock
  130       | IF OpenBlock Expression Block ELSE Block CloseBlock
  131       | IF OpenBlock SimpleStmt SCOLON Expression Block ELSE IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt SCOLON Expression Block ELSE Block CloseBlock

  133 ForStmt: FOR forMarker Block forMarkerEnd
  134        | FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  136        | FOR OpenBlock Condition forMarker Block forMarkerEnd CloseBlock
  137        | FOR OpenBlock EmptyStmt Empty forMarker Expression Empty EmptyStmt Block forMarkerEnd CloseBlock

  138 forMarker: %empty

  139 forMarkerEnd: %empty

  140 Empty: %empty

  141 Expression: Expression MUL Expression
  142           | Expression QUOT Expression
  143           | Expression MOD Expression
  144           | Expression SHL Expression
  145           | Expression SHR Expression
  146           | Expression AND Expression
  147           | Expression ANDNOT Expression
  148           | Expression ADD Expression
  149           | Expression SUB Expression
  150           | Expression OR Expression
  151           | Expression XOR Expression
  152           | Expression LOGAND Expression
  153           | Expression LOGOR Expression
  154           | Expression ISEQ Expression
  155           | Expression NEQ Expression
  156           | Expression GRTEQ Expression
  157           | Expression GRT Expression
  158           | Expression LESSEQ Expression
  159           | Expression LESS Expression
  160           | UnaryExpr

  161 UnaryExpr: MUL PrimaryExpr
  162          | AND PrimaryExpr
  163          | ADD PrimaryExpr
  164          | SUB PrimaryExpr
  165          | NOT PrimaryExpr
  166          | PrimaryExpr

  167 PrimaryExpr: Operand
  168            | MakeExpr
  169            | PrimaryExpr Selector
  170            | PrimaryExpr Index
  171            | PrimaryExpr Slice
  172            | PrimaryExpr Arguments
  173            | OperandName StructLiteral
  174            | PrimaryExpr TypeAssertion

  175 StructLiteral: LEFTBRACE KeyValueList RIGHTBRACE

  176 KeyValueList: Expression COLON Expression
  177             | Expression COLON Expression COMMA KeyValueList

  178 Selector: DOT IDENTIFIER

  179 Index: LEFTSQUARE Expression RIGHTSQUARE

  180 Slice: LEFTSQUARE COLON Expression RIGHTSQUARE
  181      | LEFTSQUARE COLON RIGHTSQUARE
  182      | LEFTSQUARE Expression COLON RIGHTSQUARE
  183      | LEFTSQUARE Expression COLON Expression RIGHTSQUARE
  184      | LEFTSQUARE COLON Expression COLON Expression RIGHTSQUARE
  185      | LEFTSQUARE Expression COLON Expression COLON Expression RIGHTSQUARE

  186 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN
  187         | MAKE LEFTPARAN Type COMMA Expression RIGHTPARAN
  188         | MAKE LEFTPARAN Type RIGHTPARAN
  189         | NEW LEFTPARAN Type RIGHTPARAN

  190 TypeAssertion: DOT LEFTPARAN Type RIGHTPARAN

  191 Arguments: LEFTPARAN RIGHTPARAN
  192          | LEFTPARAN ExpressionList RIGHTPARAN
  193          | LEFTPARAN ExpressionList ELIPSIS RIGHTPARAN

  194 ExpressionList: Expression
  195               | ExpressionList COMMA Expression

  196 TypeDecl: TYPE LEFTPARAN TypeSpecList RIGHTPARAN
  197         | TYPE TypeSpec

  198 TypeSpecList: TypeSpecList TypeSpec SCOLON
  199             | TypeSpec SCOLON

  200 TypeSpec: AliasDecl
  201         | TypeDef

  202 AliasDecl: IDENTIFIER ASSGN_OP Type

  203 TypeDef: IDENTIFIER Type

  204 MapType: MAP LEFTSQUARE Type RIGHTSQUARE Type

  205 StructType: STRUCT LEFTBRACE FieldDeclList RIGHTBRACE
  206           | STRUCT LEFTBRACE RIGHTBRACE

  207 FieldDeclList: FieldDecl SCOLON
  208              | FieldDeclList FieldDecl SCOLON

  209 FieldDecl: IdentifierList Type String
  210          | IdentifierList Type

  211 PointerType: MUL BaseType

  212 BaseType: Type

  213 ArrayType: LEFTSQUARE Expression RIGHTSQUARE Type

  214 Literal: BasicLit
  215        | CompositeLit

  216 BasicLit: INTEGER_VAL
  217         | FLOAT_VAL
  218         | BYTE_VAL
  219         | String
  220         | TRUE
  221         | FALSE

  222 String: RAW_STRING
  223       | INTERPRETED_STRING


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER_VAL <sval> (258) 216
    FLOAT_VAL <sval> (259) 217
    TRUE <sval> (260) 220
    FALSE <sval> (261) 221
    NULLPOINTER <sval> (262)
    BREAK <sval> (263) 107 108
    CONTINUE <sval> (264) 109 110
    RETURN <sval> (265) 105 106
    SCOLON <sval> (266) 1 6 7 11 12 17 18 24 25 59 60 114 116 118 120 128 131 132 134 135 198 199 207 208
    FUNC <sval> (267) 40 41 42 43
    STRUCT <sval> (268) 205 206
    ELSE <sval> (269) 129 130 131 132
    PACKAGE <sval> (270) 4
    IF <sval> (271) 127 128 129 130 131 132
    FOR <sval> (272) 133 134 135 136 137
    RANGE <sval> (273)
    IMPORT <sval> (274) 8 9 10
    VAR <sval> (275) 57 58
    SWITCH <sval> (276) 113 114 115 116 117 118 119 120
    CASE <sval> (277) 124
    NEW <sval> (278) 189
    CONST <sval> (279)
    MAP <sval> (280) 204
    DEFAULT <sval> (281) 125
    MAKE <sval> (282) 186 187 188
    GOTO <sval> (283) 111
    FALLTHROUGH <sval> (284) 126
    TYPE <sval> (285) 196 197
    PLUSPLUS <sval> (286) 53
    MINUSMINUS <sval> (287) 54
    ANDNOT <sval> (288) 147
    ELIPSIS <sval> (289) 85 193
    ADD <sval> (290) 148 163
    SUB <sval> (291) 149 164
    NOT <sval> (292) 165
    XOR <sval> (293) 151
    MUL <sval> (294) 141 161 211
    AND <sval> (295) 146 162
    OR <sval> (296) 150
    LOGOR <sval> (297) 153
    LOGAND <sval> (298) 152
    ISEQ <sval> (299) 154
    NEQ <sval> (300) 155
    LESSEQ <sval> (301) 158
    GRTEQ <sval> (302) 156
    GRT <sval> (303) 157
    LESS <sval> (304) 159
    MOD <sval> (305) 143
    QUOT <sval> (306) 142
    SHL <sval> (307) 144
    SHR <sval> (308) 145
    EQ <sval> (309)
    INFER_EQ <sval> (310) 56
    RIGHTPARAN <sval> (311) 8 9 58 67 71 72 73 91 186 187 188 189 190 191 192 193 196
    RIGHTBRACE <sval> (312) 22 93 94 95 113 114 115 116 117 118 119 120 175 205 206
    RIGHTSQUARE <sval> (313) 85 96 179 180 181 182 183 184 185 204 213
    LEFTPARAN <sval> (314) 8 9 58 67 71 72 73 91 186 187 188 189 190 191 192 193 196
    LEFTBRACE <sval> (315) 22 93 94 95 113 114 115 116 117 118 119 120 175 205 206
    LEFTSQUARE <sval> (316) 85 96 179 180 181 182 183 184 185 204 213
    COLON <sval> (317) 44 100 123 176 177 180 181 182 183 184 185
    DOT <sval> (318) 14 178 190
    COMMA <sval> (319) 69 73 75 77 95 98 177 186 187 195
    RAW_STRING <sval> (320) 222
    INTERPRETED_STRING <sval> (321) 223
    BYTE_VAL <sval> (322) 218
    IDENTIFIER <sval> (323) 5 40 41 42 43 44 77 78 92 108 110 111 178 202 203
    ASSGN_OP <sval> (324) 55 62 63 202


Nonterminals, with rules where they appear

    $accept (70)
        on left: 0
    SourceFile <nt> (71)
        on left: 1
        on right: 0
    OpenBlock (72)
        on left: 2
        on right: 22 40 41 127 128 129 130 131 132 134 135 136 137
    CloseBlock (73)
        on left: 3
        on right: 22 40 41 127 128 129 130 131 132 134 135 136 137
    PackageClause <nt> (74)
        on left: 4
        on right: 1
    PackageName <nt> (75)
        on left: 5
        on right: 4 13
    ImportDeclList <nt> (76)
        on left: 6 7
        on right: 1 6
    ImportDecl <nt> (77)
        on left: 8 9 10
        on right: 6 7
    ImportSpecList <nt> (78)
        on left: 11 12
        on right: 8 11
    ImportSpec <nt> (79)
        on left: 13 14 15
        on right: 10 11 12
    ImportPath <nt> (80)
        on left: 16
        on right: 13 14 15
    TopLevelDeclList <nt> (81)
        on left: 17 18
        on right: 1 17
    TopLevelDecl <nt> (82)
        on left: 19 20 21
        on right: 17 18
    Block <nt> (83)
        on left: 22
        on right: 35 64 127 128 129 130 131 132 133 134 135 136 137
    Condition <nt> (84)
        on left: 23
        on right: 136
    StatementList <nt> (85)
        on left: 24 25
        on right: 22 24 123
    Statement <nt> (86)
        on left: 26 27 28 29 30 31 32 33 34 35 36 37
        on right: 24 25 44
    Declaration <nt> (87)
        on left: 38 39
        on right: 19 26
    FunctionDecl <nt> (88)
        on left: 40 41
        on right: 20
    MethodDecl <nt> (89)
        on left: 42 43
        on right: 21
    LabeledStmt <nt> (90)
        on left: 44
        on right: 27
    SimpleStmt <nt> (91)
        on left: 45 46 47 48 49
        on right: 28 114 116 118 120 128 131 132 134 135
    EmptyStmt <nt> (92)
        on left: 50
        on right: 45 137
    EmptyExpr <nt> (93)
        on left: 51
        on right: 134
    ExpressionStmt <nt> (94)
        on left: 52
        on right: 46 135
    IncDecStmt <nt> (95)
        on left: 53 54
        on right: 47
    Assignment <nt> (96)
        on left: 55
        on right: 48
    ShortVarDecl <nt> (97)
        on left: 56
        on right: 49
    VarDecl <nt> (98)
        on left: 57 58
        on right: 39
    VarSpecList <nt> (99)
        on left: 59 60
        on right: 58 59
    VarSpec <nt> (100)
        on left: 61 62 63
        on right: 57 59 60
    FunctionBody <nt> (101)
        on left: 64
        on right: 40 43
    Signature <nt> (102)
        on left: 65 66
        on right: 40 41 42 43
    Result <nt> (103)
        on left: 67 68
        on right: 66
    TypeList <nt> (104)
        on left: 69 70
        on right: 67 69
    Parameters <nt> (105)
        on left: 71 72 73
        on right: 65 66 79
    ParameterList <nt> (106)
        on left: 74 75
        on right: 72 73 75
    ParameterDecl <nt> (107)
        on left: 76
        on right: 74 75
    IdentifierList <nt> (108)
        on left: 77 78
        on right: 56 61 62 63 76 77 209 210
    Receiver <nt> (109)
        on left: 79
        on right: 42 43
    CompositeLit <nt> (110)
        on left: 80
        on right: 215
    LiteralType <nt> (111)
        on left: 81 82 83 84 85 86
        on right: 80 87
    Type <nt> (112)
        on left: 87 88
        on right: 61 62 68 69 70 76 96 186 187 188 189 190 202 203 204 209 210 212 213
    Operand <nt> (113)
        on left: 89 90 91
        on right: 85 167
    OperandName <nt> (114)
        on left: 92
        on right: 88 90 173
    LiteralValue <nt> (115)
        on left: 93 94 95
        on right: 80 102 104
    SliceType <nt> (116)
        on left: 96
        on right: 84
    ElementList <nt> (117)
        on left: 97 98
        on right: 94 95 98
    KeyedElement <nt> (118)
        on left: 99 100
        on right: 97 98
    Key <nt> (119)
        on left: 101 102
        on right: 100
    Element <nt> (120)
        on left: 103 104
        on right: 99 100
    ReturnStmt <nt> (121)
        on left: 105 106
        on right: 29
    BreakStmt <nt> (122)
        on left: 107 108
        on right: 30
    ContinueStmt <nt> (123)
        on left: 109 110
        on right: 31
    GotoStmt <nt> (124)
        on left: 111
        on right: 32
    SwitchStmt <nt> (125)
        on left: 112
        on right: 33
    ExprSwitchStmt <nt> (126)
        on left: 113 114 115 116 117 118 119 120
        on right: 112
    ExprCaseClauseList <nt> (127)
        on left: 121 122
        on right: 117 118 119 120 121
    ExprCaseClause <nt> (128)
        on left: 123
        on right: 121 122
    ExprSwitchCase <nt> (129)
        on left: 124 125
        on right: 123
    FallthroughStmt <nt> (130)
        on left: 126
        on right: 34
    IfStmt <nt> (131)
        on left: 127 128 129 130 131 132
        on right: 36 129 131
    ForStmt <nt> (132)
        on left: 133 134 135 136 137
        on right: 37
    forMarker <nt> (133)
        on left: 138
        on right: 133 134 135 136 137
    forMarkerEnd <nt> (134)
        on left: 139
        on right: 133 134 135 136 137
    Empty <nt> (135)
        on left: 140
        on right: 137
    Expression <nt> (136)
        on left: 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160
        on right: 23 52 53 54 91 101 103 115 116 119 120 127 128 129 130 131 132 137 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 176 177 179 180 182 183 184 185 186 187 194 195 213
    UnaryExpr <nt> (137)
        on left: 161 162 163 164 165 166
        on right: 160
    PrimaryExpr <nt> (138)
        on left: 167 168 169 170 171 172 173 174
        on right: 161 162 163 164 165 166 169 170 171 172 174
    StructLiteral <nt> (139)
        on left: 175
        on right: 173
    KeyValueList <nt> (140)
        on left: 176 177
        on right: 175 177
    Selector <nt> (141)
        on left: 178
        on right: 169
    Index <nt> (142)
        on left: 179
        on right: 170
    Slice <nt> (143)
        on left: 180 181 182 183 184 185
        on right: 171
    MakeExpr <nt> (144)
        on left: 186 187 188 189
        on right: 168
    TypeAssertion <nt> (145)
        on left: 190
        on right: 174
    Arguments <nt> (146)
        on left: 191 192 193
        on right: 172
    ExpressionList <nt> (147)
        on left: 194 195
        on right: 55 56 62 63 106 124 192 193 195
    TypeDecl <nt> (148)
        on left: 196 197
        on right: 38
    TypeSpecList <nt> (149)
        on left: 198 199
        on right: 196 198
    TypeSpec <nt> (150)
        on left: 200 201
        on right: 197 198 199
    AliasDecl <nt> (151)
        on left: 202
        on right: 200
    TypeDef <nt> (152)
        on left: 203
        on right: 201
    MapType <nt> (153)
        on left: 204
        on right: 86
    StructType <nt> (154)
        on left: 205 206
        on right: 81
    FieldDeclList <nt> (155)
        on left: 207 208
        on right: 205 208
    FieldDecl <nt> (156)
        on left: 209 210
        on right: 207 208
    PointerType <nt> (157)
        on left: 211
        on right: 83
    BaseType <nt> (158)
        on left: 212
        on right: 211
    ArrayType <nt> (159)
        on left: 213
        on right: 82
    Literal <nt> (160)
        on left: 214 215
        on right: 89
    BasicLit <nt> (161)
        on left: 216 217 218 219 220 221
        on right: 214
    String <nt> (162)
        on left: 222 223
        on right: 16 209 219


State 0

    0 $accept: . SourceFile $end

    PACKAGE  shift, and go to state 1

    SourceFile     go to state 2
    PackageClause  go to state 3


State 1

    4 PackageClause: PACKAGE . PackageName

    IDENTIFIER  shift, and go to state 4

    PackageName  go to state 5


State 2

    0 $accept: SourceFile . $end

    $end  shift, and go to state 6


State 3

    1 SourceFile: PackageClause . SCOLON ImportDeclList TopLevelDeclList

    SCOLON  shift, and go to state 7


State 4

    5 PackageName: IDENTIFIER .

    $default  reduce using rule 5 (PackageName)


State 5

    4 PackageClause: PACKAGE PackageName .

    $default  reduce using rule 4 (PackageClause)


State 6

    0 $accept: SourceFile $end .

    $default  accept


State 7

    1 SourceFile: PackageClause SCOLON . ImportDeclList TopLevelDeclList

    IMPORT  shift, and go to state 8

    ImportDeclList  go to state 9
    ImportDecl      go to state 10


State 8

    8 ImportDecl: IMPORT . LEFTPARAN ImportSpecList RIGHTPARAN
    9           | IMPORT . LEFTPARAN RIGHTPARAN
   10           | IMPORT . ImportSpec

    LEFTPARAN           shift, and go to state 11
    DOT                 shift, and go to state 12
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    IDENTIFIER          shift, and go to state 4

    PackageName  go to state 15
    ImportSpec   go to state 16
    ImportPath   go to state 17
    String       go to state 18


State 9

    1 SourceFile: PackageClause SCOLON ImportDeclList . TopLevelDeclList
    6 ImportDeclList: ImportDeclList . ImportDecl SCOLON

    FUNC    shift, and go to state 19
    IMPORT  shift, and go to state 8
    VAR     shift, and go to state 20
    TYPE    shift, and go to state 21

    ImportDecl        go to state 22
    TopLevelDeclList  go to state 23
    TopLevelDecl      go to state 24
    Declaration       go to state 25
    FunctionDecl      go to state 26
    MethodDecl        go to state 27
    VarDecl           go to state 28
    TypeDecl          go to state 29


State 10

    7 ImportDeclList: ImportDecl . SCOLON

    SCOLON  shift, and go to state 30


State 11

    8 ImportDecl: IMPORT LEFTPARAN . ImportSpecList RIGHTPARAN
    9           | IMPORT LEFTPARAN . RIGHTPARAN

    RIGHTPARAN          shift, and go to state 31
    DOT                 shift, and go to state 12
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    IDENTIFIER          shift, and go to state 4

    PackageName     go to state 15
    ImportSpecList  go to state 32
    ImportSpec      go to state 33
    ImportPath      go to state 17
    String          go to state 18


State 12

   14 ImportSpec: DOT . ImportPath

    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14

    ImportPath  go to state 34
    String      go to state 18


State 13

  222 String: RAW_STRING .

    $default  reduce using rule 222 (String)


State 14

  223 String: INTERPRETED_STRING .

    $default  reduce using rule 223 (String)


State 15

   13 ImportSpec: PackageName . ImportPath

    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14

    ImportPath  go to state 35
    String      go to state 18


State 16

   10 ImportDecl: IMPORT ImportSpec .

    $default  reduce using rule 10 (ImportDecl)


State 17

   15 ImportSpec: ImportPath .

    $default  reduce using rule 15 (ImportSpec)


State 18

   16 ImportPath: String .

    $default  reduce using rule 16 (ImportPath)


State 19

   40 FunctionDecl: FUNC . IDENTIFIER OpenBlock Signature FunctionBody CloseBlock
   41             | FUNC . IDENTIFIER OpenBlock Signature CloseBlock
   42 MethodDecl: FUNC . Receiver IDENTIFIER Signature
   43           | FUNC . Receiver IDENTIFIER Signature FunctionBody

    LEFTPARAN   shift, and go to state 36
    IDENTIFIER  shift, and go to state 37

    Parameters  go to state 38
    Receiver    go to state 39


State 20

   57 VarDecl: VAR . VarSpec
   58        | VAR . LEFTPARAN VarSpecList RIGHTPARAN

    LEFTPARAN   shift, and go to state 40
    IDENTIFIER  shift, and go to state 41

    VarSpec         go to state 42
    IdentifierList  go to state 43


State 21

  196 TypeDecl: TYPE . LEFTPARAN TypeSpecList RIGHTPARAN
  197         | TYPE . TypeSpec

    LEFTPARAN   shift, and go to state 44
    IDENTIFIER  shift, and go to state 45

    TypeSpec   go to state 46
    AliasDecl  go to state 47
    TypeDef    go to state 48


State 22

    6 ImportDeclList: ImportDeclList ImportDecl . SCOLON

    SCOLON  shift, and go to state 49


State 23

    1 SourceFile: PackageClause SCOLON ImportDeclList TopLevelDeclList .
   17 TopLevelDeclList: TopLevelDeclList . TopLevelDecl SCOLON

    FUNC  shift, and go to state 19
    VAR   shift, and go to state 20
    TYPE  shift, and go to state 21

    $default  reduce using rule 1 (SourceFile)

    TopLevelDecl  go to state 50
    Declaration   go to state 25
    FunctionDecl  go to state 26
    MethodDecl    go to state 27
    VarDecl       go to state 28
    TypeDecl      go to state 29


State 24

   18 TopLevelDeclList: TopLevelDecl . SCOLON

    SCOLON  shift, and go to state 51


State 25

   19 TopLevelDecl: Declaration .

    $default  reduce using rule 19 (TopLevelDecl)


State 26

   20 TopLevelDecl: FunctionDecl .

    $default  reduce using rule 20 (TopLevelDecl)


State 27

   21 TopLevelDecl: MethodDecl .

    $default  reduce using rule 21 (TopLevelDecl)


State 28

   39 Declaration: VarDecl .

    $default  reduce using rule 39 (Declaration)


State 29

   38 Declaration: TypeDecl .

    $default  reduce using rule 38 (Declaration)


State 30

    7 ImportDeclList: ImportDecl SCOLON .

    $default  reduce using rule 7 (ImportDeclList)


State 31

    9 ImportDecl: IMPORT LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 9 (ImportDecl)


State 32

    8 ImportDecl: IMPORT LEFTPARAN ImportSpecList . RIGHTPARAN
   11 ImportSpecList: ImportSpecList . ImportSpec SCOLON

    RIGHTPARAN          shift, and go to state 52
    DOT                 shift, and go to state 12
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    IDENTIFIER          shift, and go to state 4

    PackageName  go to state 15
    ImportSpec   go to state 53
    ImportPath   go to state 17
    String       go to state 18


State 33

   12 ImportSpecList: ImportSpec . SCOLON

    SCOLON  shift, and go to state 54


State 34

   14 ImportSpec: DOT ImportPath .

    $default  reduce using rule 14 (ImportSpec)


State 35

   13 ImportSpec: PackageName ImportPath .

    $default  reduce using rule 13 (ImportSpec)


State 36

   71 Parameters: LEFTPARAN . RIGHTPARAN
   72           | LEFTPARAN . ParameterList RIGHTPARAN
   73           | LEFTPARAN . ParameterList COMMA RIGHTPARAN

    RIGHTPARAN  shift, and go to state 55
    IDENTIFIER  shift, and go to state 41

    ParameterList   go to state 56
    ParameterDecl   go to state 57
    IdentifierList  go to state 58


State 37

   40 FunctionDecl: FUNC IDENTIFIER . OpenBlock Signature FunctionBody CloseBlock
   41             | FUNC IDENTIFIER . OpenBlock Signature CloseBlock

    $default  reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 59


State 38

   79 Receiver: Parameters .

    $default  reduce using rule 79 (Receiver)


State 39

   42 MethodDecl: FUNC Receiver . IDENTIFIER Signature
   43           | FUNC Receiver . IDENTIFIER Signature FunctionBody

    IDENTIFIER  shift, and go to state 60


State 40

   58 VarDecl: VAR LEFTPARAN . VarSpecList RIGHTPARAN

    IDENTIFIER  shift, and go to state 41

    VarSpecList     go to state 61
    VarSpec         go to state 62
    IdentifierList  go to state 43


State 41

   78 IdentifierList: IDENTIFIER .

    $default  reduce using rule 78 (IdentifierList)


State 42

   57 VarDecl: VAR VarSpec .

    $default  reduce using rule 57 (VarDecl)


State 43

   61 VarSpec: IdentifierList . Type
   62        | IdentifierList . Type ASSGN_OP ExpressionList
   63        | IdentifierList . ASSGN_OP ExpressionList
   77 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 63
    MAP         shift, and go to state 64
    MUL         shift, and go to state 65
    LEFTSQUARE  shift, and go to state 66
    COMMA       shift, and go to state 67
    IDENTIFIER  shift, and go to state 68
    ASSGN_OP    shift, and go to state 69

    LiteralType  go to state 70
    Type         go to state 71
    OperandName  go to state 72
    SliceType    go to state 73
    MapType      go to state 74
    StructType   go to state 75
    PointerType  go to state 76
    ArrayType    go to state 77


State 44

  196 TypeDecl: TYPE LEFTPARAN . TypeSpecList RIGHTPARAN

    IDENTIFIER  shift, and go to state 45

    TypeSpecList  go to state 78
    TypeSpec      go to state 79
    AliasDecl     go to state 47
    TypeDef       go to state 48


State 45

  202 AliasDecl: IDENTIFIER . ASSGN_OP Type
  203 TypeDef: IDENTIFIER . Type

    STRUCT      shift, and go to state 63
    MAP         shift, and go to state 64
    MUL         shift, and go to state 65
    LEFTSQUARE  shift, and go to state 66
    IDENTIFIER  shift, and go to state 68
    ASSGN_OP    shift, and go to state 80

    LiteralType  go to state 70
    Type         go to state 81
    OperandName  go to state 72
    SliceType    go to state 73
    MapType      go to state 74
    StructType   go to state 75
    PointerType  go to state 76
    ArrayType    go to state 77


State 46

  197 TypeDecl: TYPE TypeSpec .

    $default  reduce using rule 197 (TypeDecl)


State 47

  200 TypeSpec: AliasDecl .

    $default  reduce using rule 200 (TypeSpec)


State 48

  201 TypeSpec: TypeDef .

    $default  reduce using rule 201 (TypeSpec)


State 49

    6 ImportDeclList: ImportDeclList ImportDecl SCOLON .

    $default  reduce using rule 6 (ImportDeclList)


State 50

   17 TopLevelDeclList: TopLevelDeclList TopLevelDecl . SCOLON

    SCOLON  shift, and go to state 82


State 51

   18 TopLevelDeclList: TopLevelDecl SCOLON .

    $default  reduce using rule 18 (TopLevelDeclList)


State 52

    8 ImportDecl: IMPORT LEFTPARAN ImportSpecList RIGHTPARAN .

    $default  reduce using rule 8 (ImportDecl)


State 53

   11 ImportSpecList: ImportSpecList ImportSpec . SCOLON

    SCOLON  shift, and go to state 83


State 54

   12 ImportSpecList: ImportSpec SCOLON .

    $default  reduce using rule 12 (ImportSpecList)


State 55

   71 Parameters: LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 71 (Parameters)


State 56

   72 Parameters: LEFTPARAN ParameterList . RIGHTPARAN
   73           | LEFTPARAN ParameterList . COMMA RIGHTPARAN
   75 ParameterList: ParameterList . COMMA ParameterDecl

    RIGHTPARAN  shift, and go to state 84
    COMMA       shift, and go to state 85


State 57

   74 ParameterList: ParameterDecl .

    $default  reduce using rule 74 (ParameterList)


State 58

   76 ParameterDecl: IdentifierList . Type
   77 IdentifierList: IdentifierList . COMMA IDENTIFIER

    STRUCT      shift, and go to state 63
    MAP         shift, and go to state 64
    MUL         shift, and go to state 65
    LEFTSQUARE  shift, and go to state 66
    COMMA       shift, and go to state 67
    IDENTIFIER  shift, and go to state 68

    LiteralType  go to state 70
    Type         go to state 86
    OperandName  go to state 72
    SliceType    go to state 73
    MapType      go to state 74
    StructType   go to state 75
    PointerType  go to state 76
    ArrayType    go to state 77


State 59

   40 FunctionDecl: FUNC IDENTIFIER OpenBlock . Signature FunctionBody CloseBlock
   41             | FUNC IDENTIFIER OpenBlock . Signature CloseBlock

    LEFTPARAN  shift, and go to state 36

    Signature   go to state 87
    Parameters  go to state 88


State 60

   42 MethodDecl: FUNC Receiver IDENTIFIER . Signature
   43           | FUNC Receiver IDENTIFIER . Signature FunctionBody

    LEFTPARAN  shift, and go to state 36

    Signature   go to state 89
    Parameters  go to state 88


State 61

   58 VarDecl: VAR LEFTPARAN VarSpecList . RIGHTPARAN
   59 VarSpecList: VarSpecList . VarSpec SCOLON

    RIGHTPARAN  shift, and go to state 90
    IDENTIFIER  shift, and go to state 41

    VarSpec         go to state 91
    IdentifierList  go to state 43


State 62

   60 VarSpecList: VarSpec . SCOLON

    SCOLON  shift, and go to state 92


State 63

  205 StructType: STRUCT . LEFTBRACE FieldDeclList RIGHTBRACE
  206           | STRUCT . LEFTBRACE RIGHTBRACE

    LEFTBRACE  shift, and go to state 93


State 64

  204 MapType: MAP . LEFTSQUARE Type RIGHTSQUARE Type

    LEFTSQUARE  shift, and go to state 94


State 65

  211 PointerType: MUL . BaseType

    STRUCT      shift, and go to state 63
    MAP         shift, and go to state 64
    MUL         shift, and go to state 65
    LEFTSQUARE  shift, and go to state 66
    IDENTIFIER  shift, and go to state 68

    LiteralType  go to state 70
    Type         go to state 95
    OperandName  go to state 72
    SliceType    go to state 73
    MapType      go to state 74
    StructType   go to state 75
    PointerType  go to state 76
    BaseType     go to state 96
    ArrayType    go to state 77


State 66

   85 LiteralType: LEFTSQUARE . ELIPSIS RIGHTSQUARE Operand
   96 SliceType: LEFTSQUARE . RIGHTSQUARE Type
  213 ArrayType: LEFTSQUARE . Expression RIGHTSQUARE Type

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ELIPSIS             shift, and go to state 103
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    RIGHTSQUARE         shift, and go to state 109
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 116
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 67

   77 IdentifierList: IdentifierList COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 123


State 68

   92 OperandName: IDENTIFIER .

    $default  reduce using rule 92 (OperandName)


State 69

   63 VarSpec: IdentifierList ASSGN_OP . ExpressionList

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit    go to state 112
    LiteralType     go to state 113
    Operand         go to state 114
    OperandName     go to state 115
    SliceType       go to state 73
    Expression      go to state 124
    UnaryExpr       go to state 117
    PrimaryExpr     go to state 118
    MakeExpr        go to state 119
    ExpressionList  go to state 125
    MapType         go to state 74
    StructType      go to state 75
    PointerType     go to state 76
    ArrayType       go to state 77
    Literal         go to state 120
    BasicLit        go to state 121
    String          go to state 122


State 70

   87 Type: LiteralType .

    $default  reduce using rule 87 (Type)


State 71

   61 VarSpec: IdentifierList Type .
   62        | IdentifierList Type . ASSGN_OP ExpressionList

    ASSGN_OP  shift, and go to state 126

    $default  reduce using rule 61 (VarSpec)


State 72

   88 Type: OperandName .

    $default  reduce using rule 88 (Type)


State 73

   84 LiteralType: SliceType .

    $default  reduce using rule 84 (LiteralType)


State 74

   86 LiteralType: MapType .

    $default  reduce using rule 86 (LiteralType)


State 75

   81 LiteralType: StructType .

    $default  reduce using rule 81 (LiteralType)


State 76

   83 LiteralType: PointerType .

    $default  reduce using rule 83 (LiteralType)


State 77

   82 LiteralType: ArrayType .

    $default  reduce using rule 82 (LiteralType)


State 78

  196 TypeDecl: TYPE LEFTPARAN TypeSpecList . RIGHTPARAN
  198 TypeSpecList: TypeSpecList . TypeSpec SCOLON

    RIGHTPARAN  shift, and go to state 127
    IDENTIFIER  shift, and go to state 45

    TypeSpec   go to state 128
    AliasDecl  go to state 47
    TypeDef    go to state 48


State 79

  199 TypeSpecList: TypeSpec . SCOLON

    SCOLON  shift, and go to state 129


State 80

  202 AliasDecl: IDENTIFIER ASSGN_OP . Type

    STRUCT      shift, and go to state 63
    MAP         shift, and go to state 64
    MUL         shift, and go to state 65
    LEFTSQUARE  shift, and go to state 66
    IDENTIFIER  shift, and go to state 68

    LiteralType  go to state 70
    Type         go to state 130
    OperandName  go to state 72
    SliceType    go to state 73
    MapType      go to state 74
    StructType   go to state 75
    PointerType  go to state 76
    ArrayType    go to state 77


State 81

  203 TypeDef: IDENTIFIER Type .

    $default  reduce using rule 203 (TypeDef)


State 82

   17 TopLevelDeclList: TopLevelDeclList TopLevelDecl SCOLON .

    $default  reduce using rule 17 (TopLevelDeclList)


State 83

   11 ImportSpecList: ImportSpecList ImportSpec SCOLON .

    $default  reduce using rule 11 (ImportSpecList)


State 84

   72 Parameters: LEFTPARAN ParameterList RIGHTPARAN .

    $default  reduce using rule 72 (Parameters)


State 85

   73 Parameters: LEFTPARAN ParameterList COMMA . RIGHTPARAN
   75 ParameterList: ParameterList COMMA . ParameterDecl

    RIGHTPARAN  shift, and go to state 131
    IDENTIFIER  shift, and go to state 41

    ParameterDecl   go to state 132
    IdentifierList  go to state 58


State 86

   76 ParameterDecl: IdentifierList Type .

    $default  reduce using rule 76 (ParameterDecl)


State 87

   40 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature . FunctionBody CloseBlock
   41             | FUNC IDENTIFIER OpenBlock Signature . CloseBlock

    LEFTBRACE  shift, and go to state 133

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock    go to state 134
    Block         go to state 135
    FunctionBody  go to state 136


State 88

   65 Signature: Parameters .
   66          | Parameters . Result

    STRUCT      shift, and go to state 63
    MAP         shift, and go to state 64
    MUL         shift, and go to state 65
    LEFTPARAN   shift, and go to state 137
    LEFTSQUARE  shift, and go to state 66
    IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 65 (Signature)

    Result       go to state 138
    LiteralType  go to state 70
    Type         go to state 139
    OperandName  go to state 72
    SliceType    go to state 73
    MapType      go to state 74
    StructType   go to state 75
    PointerType  go to state 76
    ArrayType    go to state 77


State 89

   42 MethodDecl: FUNC Receiver IDENTIFIER Signature .
   43           | FUNC Receiver IDENTIFIER Signature . FunctionBody

    LEFTBRACE  shift, and go to state 133

    $default  reduce using rule 42 (MethodDecl)

    Block         go to state 135
    FunctionBody  go to state 140


State 90

   58 VarDecl: VAR LEFTPARAN VarSpecList RIGHTPARAN .

    $default  reduce using rule 58 (VarDecl)


State 91

   59 VarSpecList: VarSpecList VarSpec . SCOLON

    SCOLON  shift, and go to state 141


State 92

   60 VarSpecList: VarSpec SCOLON .

    $default  reduce using rule 60 (VarSpecList)


State 93

  205 StructType: STRUCT LEFTBRACE . FieldDeclList RIGHTBRACE
  206           | STRUCT LEFTBRACE . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 142
    IDENTIFIER  shift, and go to state 41

    IdentifierList  go to state 143
    FieldDeclList   go to state 144
    FieldDecl       go to state 145


State 94

  204 MapType: MAP LEFTSQUARE . Type RIGHTSQUARE Type

    STRUCT      shift, and go to state 63
    MAP         shift, and go to state 64
    MUL         shift, and go to state 65
    LEFTSQUARE  shift, and go to state 66
    IDENTIFIER  shift, and go to state 68

    LiteralType  go to state 70
    Type         go to state 146
    OperandName  go to state 72
    SliceType    go to state 73
    MapType      go to state 74
    StructType   go to state 75
    PointerType  go to state 76
    ArrayType    go to state 77


State 95

  212 BaseType: Type .

    $default  reduce using rule 212 (BaseType)


State 96

  211 PointerType: MUL BaseType .

    $default  reduce using rule 211 (PointerType)


State 97

  216 BasicLit: INTEGER_VAL .

    $default  reduce using rule 216 (BasicLit)


State 98

  217 BasicLit: FLOAT_VAL .

    $default  reduce using rule 217 (BasicLit)


State 99

  220 BasicLit: TRUE .

    $default  reduce using rule 220 (BasicLit)


State 100

  221 BasicLit: FALSE .

    $default  reduce using rule 221 (BasicLit)


State 101

  189 MakeExpr: NEW . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN  shift, and go to state 147


State 102

  186 MakeExpr: MAKE . LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN
  187         | MAKE . LEFTPARAN Type COMMA Expression RIGHTPARAN
  188         | MAKE . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN  shift, and go to state 148


State 103

   85 LiteralType: LEFTSQUARE ELIPSIS . RIGHTSQUARE Operand

    RIGHTSQUARE  shift, and go to state 149


State 104

  163 UnaryExpr: ADD . PrimaryExpr

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    MUL                 shift, and go to state 65
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    PrimaryExpr   go to state 150
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 105

  164 UnaryExpr: SUB . PrimaryExpr

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    MUL                 shift, and go to state 65
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    PrimaryExpr   go to state 151
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 106

  165 UnaryExpr: NOT . PrimaryExpr

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    MUL                 shift, and go to state 65
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    PrimaryExpr   go to state 152
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 107

  161 UnaryExpr: MUL . PrimaryExpr
  211 PointerType: MUL . BaseType

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    MUL                 shift, and go to state 65
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 153
    Type          go to state 95
    Operand       go to state 114
    OperandName   go to state 154
    SliceType     go to state 73
    PrimaryExpr   go to state 155
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    BaseType      go to state 96
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 108

  162 UnaryExpr: AND . PrimaryExpr

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    MUL                 shift, and go to state 65
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    PrimaryExpr   go to state 156
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 109

   96 SliceType: LEFTSQUARE RIGHTSQUARE . Type

    STRUCT      shift, and go to state 63
    MAP         shift, and go to state 64
    MUL         shift, and go to state 65
    LEFTSQUARE  shift, and go to state 66
    IDENTIFIER  shift, and go to state 68

    LiteralType  go to state 70
    Type         go to state 157
    OperandName  go to state 72
    SliceType    go to state 73
    MapType      go to state 74
    StructType   go to state 75
    PointerType  go to state 76
    ArrayType    go to state 77


State 110

   91 Operand: LEFTPARAN . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 158
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 111

  218 BasicLit: BYTE_VAL .

    $default  reduce using rule 218 (BasicLit)


State 112

  215 Literal: CompositeLit .

    $default  reduce using rule 215 (Literal)


State 113

   80 CompositeLit: LiteralType . LiteralValue

    LEFTBRACE  shift, and go to state 159

    LiteralValue  go to state 160


State 114

  167 PrimaryExpr: Operand .

    $default  reduce using rule 167 (PrimaryExpr)


State 115

   90 Operand: OperandName .
  173 PrimaryExpr: OperandName . StructLiteral

    LEFTBRACE  shift, and go to state 161

    LEFTBRACE  [reduce using rule 90 (Operand)]
    $default   reduce using rule 90 (Operand)

    StructLiteral  go to state 162


State 116

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression
  213 ArrayType: LEFTSQUARE Expression . RIGHTSQUARE Type

    ANDNOT       shift, and go to state 163
    ADD          shift, and go to state 164
    SUB          shift, and go to state 165
    XOR          shift, and go to state 166
    MUL          shift, and go to state 167
    AND          shift, and go to state 168
    OR           shift, and go to state 169
    LOGOR        shift, and go to state 170
    LOGAND       shift, and go to state 171
    ISEQ         shift, and go to state 172
    NEQ          shift, and go to state 173
    LESSEQ       shift, and go to state 174
    GRTEQ        shift, and go to state 175
    GRT          shift, and go to state 176
    LESS         shift, and go to state 177
    MOD          shift, and go to state 178
    QUOT         shift, and go to state 179
    SHL          shift, and go to state 180
    SHR          shift, and go to state 181
    RIGHTSQUARE  shift, and go to state 182


State 117

  160 Expression: UnaryExpr .

    $default  reduce using rule 160 (Expression)


State 118

  166 UnaryExpr: PrimaryExpr .
  169 PrimaryExpr: PrimaryExpr . Selector
  170            | PrimaryExpr . Index
  171            | PrimaryExpr . Slice
  172            | PrimaryExpr . Arguments
  174            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 183
    LEFTSQUARE  shift, and go to state 184
    DOT         shift, and go to state 185

    $default  reduce using rule 166 (UnaryExpr)

    Selector       go to state 186
    Index          go to state 187
    Slice          go to state 188
    TypeAssertion  go to state 189
    Arguments      go to state 190


State 119

  168 PrimaryExpr: MakeExpr .

    $default  reduce using rule 168 (PrimaryExpr)


State 120

   89 Operand: Literal .

    $default  reduce using rule 89 (Operand)


State 121

  214 Literal: BasicLit .

    $default  reduce using rule 214 (Literal)


State 122

  219 BasicLit: String .

    $default  reduce using rule 219 (BasicLit)


State 123

   77 IdentifierList: IdentifierList COMMA IDENTIFIER .

    $default  reduce using rule 77 (IdentifierList)


State 124

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression
  194 ExpressionList: Expression .

    ANDNOT  shift, and go to state 163
    ADD     shift, and go to state 164
    SUB     shift, and go to state 165
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    OR      shift, and go to state 169
    LOGOR   shift, and go to state 170
    LOGAND  shift, and go to state 171
    ISEQ    shift, and go to state 172
    NEQ     shift, and go to state 173
    LESSEQ  shift, and go to state 174
    GRTEQ   shift, and go to state 175
    GRT     shift, and go to state 176
    LESS    shift, and go to state 177
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181

    $default  reduce using rule 194 (ExpressionList)


State 125

   63 VarSpec: IdentifierList ASSGN_OP ExpressionList .
  195 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 191

    $default  reduce using rule 63 (VarSpec)


State 126

   62 VarSpec: IdentifierList Type ASSGN_OP . ExpressionList

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit    go to state 112
    LiteralType     go to state 113
    Operand         go to state 114
    OperandName     go to state 115
    SliceType       go to state 73
    Expression      go to state 124
    UnaryExpr       go to state 117
    PrimaryExpr     go to state 118
    MakeExpr        go to state 119
    ExpressionList  go to state 192
    MapType         go to state 74
    StructType      go to state 75
    PointerType     go to state 76
    ArrayType       go to state 77
    Literal         go to state 120
    BasicLit        go to state 121
    String          go to state 122


State 127

  196 TypeDecl: TYPE LEFTPARAN TypeSpecList RIGHTPARAN .

    $default  reduce using rule 196 (TypeDecl)


State 128

  198 TypeSpecList: TypeSpecList TypeSpec . SCOLON

    SCOLON  shift, and go to state 193


State 129

  199 TypeSpecList: TypeSpec SCOLON .

    $default  reduce using rule 199 (TypeSpecList)


State 130

  202 AliasDecl: IDENTIFIER ASSGN_OP Type .

    $default  reduce using rule 202 (AliasDecl)


State 131

   73 Parameters: LEFTPARAN ParameterList COMMA RIGHTPARAN .

    $default  reduce using rule 73 (Parameters)


State 132

   75 ParameterList: ParameterList COMMA ParameterDecl .

    $default  reduce using rule 75 (ParameterList)


State 133

   22 Block: LEFTBRACE . OpenBlock StatementList CloseBlock RIGHTBRACE

    $default  reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 194


State 134

   41 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature CloseBlock .

    $default  reduce using rule 41 (FunctionDecl)


State 135

   64 FunctionBody: Block .

    $default  reduce using rule 64 (FunctionBody)


State 136

   40 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature FunctionBody . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 195


State 137

   67 Result: LEFTPARAN . TypeList RIGHTPARAN

    STRUCT      shift, and go to state 63
    MAP         shift, and go to state 64
    MUL         shift, and go to state 65
    LEFTSQUARE  shift, and go to state 66
    IDENTIFIER  shift, and go to state 68

    TypeList     go to state 196
    LiteralType  go to state 70
    Type         go to state 197
    OperandName  go to state 72
    SliceType    go to state 73
    MapType      go to state 74
    StructType   go to state 75
    PointerType  go to state 76
    ArrayType    go to state 77


State 138

   66 Signature: Parameters Result .

    $default  reduce using rule 66 (Signature)


State 139

   68 Result: Type .

    $default  reduce using rule 68 (Result)


State 140

   43 MethodDecl: FUNC Receiver IDENTIFIER Signature FunctionBody .

    $default  reduce using rule 43 (MethodDecl)


State 141

   59 VarSpecList: VarSpecList VarSpec SCOLON .

    $default  reduce using rule 59 (VarSpecList)


State 142

  206 StructType: STRUCT LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 206 (StructType)


State 143

   77 IdentifierList: IdentifierList . COMMA IDENTIFIER
  209 FieldDecl: IdentifierList . Type String
  210          | IdentifierList . Type

    STRUCT      shift, and go to state 63
    MAP         shift, and go to state 64
    MUL         shift, and go to state 65
    LEFTSQUARE  shift, and go to state 66
    COMMA       shift, and go to state 67
    IDENTIFIER  shift, and go to state 68

    LiteralType  go to state 70
    Type         go to state 198
    OperandName  go to state 72
    SliceType    go to state 73
    MapType      go to state 74
    StructType   go to state 75
    PointerType  go to state 76
    ArrayType    go to state 77


State 144

  205 StructType: STRUCT LEFTBRACE FieldDeclList . RIGHTBRACE
  208 FieldDeclList: FieldDeclList . FieldDecl SCOLON

    RIGHTBRACE  shift, and go to state 199
    IDENTIFIER  shift, and go to state 41

    IdentifierList  go to state 143
    FieldDecl       go to state 200


State 145

  207 FieldDeclList: FieldDecl . SCOLON

    SCOLON  shift, and go to state 201


State 146

  204 MapType: MAP LEFTSQUARE Type . RIGHTSQUARE Type

    RIGHTSQUARE  shift, and go to state 202


State 147

  189 MakeExpr: NEW LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 63
    MAP         shift, and go to state 64
    MUL         shift, and go to state 65
    LEFTSQUARE  shift, and go to state 66
    IDENTIFIER  shift, and go to state 68

    LiteralType  go to state 70
    Type         go to state 203
    OperandName  go to state 72
    SliceType    go to state 73
    MapType      go to state 74
    StructType   go to state 75
    PointerType  go to state 76
    ArrayType    go to state 77


State 148

  186 MakeExpr: MAKE LEFTPARAN . Type COMMA Expression COMMA Expression RIGHTPARAN
  187         | MAKE LEFTPARAN . Type COMMA Expression RIGHTPARAN
  188         | MAKE LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 63
    MAP         shift, and go to state 64
    MUL         shift, and go to state 65
    LEFTSQUARE  shift, and go to state 66
    IDENTIFIER  shift, and go to state 68

    LiteralType  go to state 70
    Type         go to state 204
    OperandName  go to state 72
    SliceType    go to state 73
    MapType      go to state 74
    StructType   go to state 75
    PointerType  go to state 76
    ArrayType    go to state 77


State 149

   85 LiteralType: LEFTSQUARE ELIPSIS RIGHTSQUARE . Operand

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    MAP                 shift, and go to state 64
    MUL                 shift, and go to state 65
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 205
    OperandName   go to state 206
    SliceType     go to state 73
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 150

  163 UnaryExpr: ADD PrimaryExpr .
  169 PrimaryExpr: PrimaryExpr . Selector
  170            | PrimaryExpr . Index
  171            | PrimaryExpr . Slice
  172            | PrimaryExpr . Arguments
  174            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 183
    LEFTSQUARE  shift, and go to state 184
    DOT         shift, and go to state 185

    $default  reduce using rule 163 (UnaryExpr)

    Selector       go to state 186
    Index          go to state 187
    Slice          go to state 188
    TypeAssertion  go to state 189
    Arguments      go to state 190


State 151

  164 UnaryExpr: SUB PrimaryExpr .
  169 PrimaryExpr: PrimaryExpr . Selector
  170            | PrimaryExpr . Index
  171            | PrimaryExpr . Slice
  172            | PrimaryExpr . Arguments
  174            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 183
    LEFTSQUARE  shift, and go to state 184
    DOT         shift, and go to state 185

    $default  reduce using rule 164 (UnaryExpr)

    Selector       go to state 186
    Index          go to state 187
    Slice          go to state 188
    TypeAssertion  go to state 189
    Arguments      go to state 190


State 152

  165 UnaryExpr: NOT PrimaryExpr .
  169 PrimaryExpr: PrimaryExpr . Selector
  170            | PrimaryExpr . Index
  171            | PrimaryExpr . Slice
  172            | PrimaryExpr . Arguments
  174            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 183
    LEFTSQUARE  shift, and go to state 184
    DOT         shift, and go to state 185

    $default  reduce using rule 165 (UnaryExpr)

    Selector       go to state 186
    Index          go to state 187
    Slice          go to state 188
    TypeAssertion  go to state 189
    Arguments      go to state 190


State 153

   80 CompositeLit: LiteralType . LiteralValue
   87 Type: LiteralType .

    LEFTBRACE  shift, and go to state 159

    LEFTBRACE  [reduce using rule 87 (Type)]

    LiteralValue  go to state 160


State 154

   88 Type: OperandName .
   90 Operand: OperandName .
  173 PrimaryExpr: OperandName . StructLiteral

    LEFTBRACE  shift, and go to state 161

    LEFTBRACE  [reduce using rule 88 (Type)]
    LEFTBRACE  [reduce using rule 90 (Operand)]
    $default   reduce using rule 90 (Operand)

    StructLiteral  go to state 162


State 155

  161 UnaryExpr: MUL PrimaryExpr .
  169 PrimaryExpr: PrimaryExpr . Selector
  170            | PrimaryExpr . Index
  171            | PrimaryExpr . Slice
  172            | PrimaryExpr . Arguments
  174            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 183
    LEFTSQUARE  shift, and go to state 184
    DOT         shift, and go to state 185

    $default  reduce using rule 161 (UnaryExpr)

    Selector       go to state 186
    Index          go to state 187
    Slice          go to state 188
    TypeAssertion  go to state 189
    Arguments      go to state 190


State 156

  162 UnaryExpr: AND PrimaryExpr .
  169 PrimaryExpr: PrimaryExpr . Selector
  170            | PrimaryExpr . Index
  171            | PrimaryExpr . Slice
  172            | PrimaryExpr . Arguments
  174            | PrimaryExpr . TypeAssertion

    LEFTPARAN   shift, and go to state 183
    LEFTSQUARE  shift, and go to state 184
    DOT         shift, and go to state 185

    $default  reduce using rule 162 (UnaryExpr)

    Selector       go to state 186
    Index          go to state 187
    Slice          go to state 188
    TypeAssertion  go to state 189
    Arguments      go to state 190


State 157

   96 SliceType: LEFTSQUARE RIGHTSQUARE Type .

    $default  reduce using rule 96 (SliceType)


State 158

   91 Operand: LEFTPARAN Expression . RIGHTPARAN
  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    ANDNOT      shift, and go to state 163
    ADD         shift, and go to state 164
    SUB         shift, and go to state 165
    XOR         shift, and go to state 166
    MUL         shift, and go to state 167
    AND         shift, and go to state 168
    OR          shift, and go to state 169
    LOGOR       shift, and go to state 170
    LOGAND      shift, and go to state 171
    ISEQ        shift, and go to state 172
    NEQ         shift, and go to state 173
    LESSEQ      shift, and go to state 174
    GRTEQ       shift, and go to state 175
    GRT         shift, and go to state 176
    LESS        shift, and go to state 177
    MOD         shift, and go to state 178
    QUOT        shift, and go to state 179
    SHL         shift, and go to state 180
    SHR         shift, and go to state 181
    RIGHTPARAN  shift, and go to state 207


State 159

   93 LiteralValue: LEFTBRACE . RIGHTBRACE
   94             | LEFTBRACE . ElementList RIGHTBRACE
   95             | LEFTBRACE . ElementList COMMA RIGHTBRACE

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    RIGHTBRACE          shift, and go to state 208
    LEFTPARAN           shift, and go to state 110
    LEFTBRACE           shift, and go to state 159
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    LiteralValue  go to state 209
    SliceType     go to state 73
    ElementList   go to state 210
    KeyedElement  go to state 211
    Key           go to state 212
    Element       go to state 213
    Expression    go to state 214
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 160

   80 CompositeLit: LiteralType LiteralValue .

    $default  reduce using rule 80 (CompositeLit)


State 161

  175 StructLiteral: LEFTBRACE . KeyValueList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 215
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    KeyValueList  go to state 216
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 162

  173 PrimaryExpr: OperandName StructLiteral .

    $default  reduce using rule 173 (PrimaryExpr)


State 163

  147 Expression: Expression ANDNOT . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 217
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 164

  148 Expression: Expression ADD . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 218
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 165

  149 Expression: Expression SUB . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 219
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 166

  151 Expression: Expression XOR . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 220
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 167

  141 Expression: Expression MUL . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 221
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 168

  146 Expression: Expression AND . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 222
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 169

  150 Expression: Expression OR . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 223
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 170

  153 Expression: Expression LOGOR . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 224
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 171

  152 Expression: Expression LOGAND . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 225
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 172

  154 Expression: Expression ISEQ . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 226
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 173

  155 Expression: Expression NEQ . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 227
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 174

  158 Expression: Expression LESSEQ . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 228
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 175

  156 Expression: Expression GRTEQ . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 229
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 176

  157 Expression: Expression GRT . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 230
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 177

  159 Expression: Expression LESS . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 231
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 178

  143 Expression: Expression MOD . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 232
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 179

  142 Expression: Expression QUOT . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 233
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 180

  144 Expression: Expression SHL . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 234
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 181

  145 Expression: Expression SHR . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 235
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 182

  213 ArrayType: LEFTSQUARE Expression RIGHTSQUARE . Type

    STRUCT      shift, and go to state 63
    MAP         shift, and go to state 64
    MUL         shift, and go to state 65
    LEFTSQUARE  shift, and go to state 66
    IDENTIFIER  shift, and go to state 68

    LiteralType  go to state 70
    Type         go to state 236
    OperandName  go to state 72
    SliceType    go to state 73
    MapType      go to state 74
    StructType   go to state 75
    PointerType  go to state 76
    ArrayType    go to state 77


State 183

  191 Arguments: LEFTPARAN . RIGHTPARAN
  192          | LEFTPARAN . ExpressionList RIGHTPARAN
  193          | LEFTPARAN . ExpressionList ELIPSIS RIGHTPARAN

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    RIGHTPARAN          shift, and go to state 237
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit    go to state 112
    LiteralType     go to state 113
    Operand         go to state 114
    OperandName     go to state 115
    SliceType       go to state 73
    Expression      go to state 124
    UnaryExpr       go to state 117
    PrimaryExpr     go to state 118
    MakeExpr        go to state 119
    ExpressionList  go to state 238
    MapType         go to state 74
    StructType      go to state 75
    PointerType     go to state 76
    ArrayType       go to state 77
    Literal         go to state 120
    BasicLit        go to state 121
    String          go to state 122


State 184

  179 Index: LEFTSQUARE . Expression RIGHTSQUARE
  180 Slice: LEFTSQUARE . COLON Expression RIGHTSQUARE
  181      | LEFTSQUARE . COLON RIGHTSQUARE
  182      | LEFTSQUARE . Expression COLON RIGHTSQUARE
  183      | LEFTSQUARE . Expression COLON Expression RIGHTSQUARE
  184      | LEFTSQUARE . COLON Expression COLON Expression RIGHTSQUARE
  185      | LEFTSQUARE . Expression COLON Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    COLON               shift, and go to state 239
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 240
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 185

  178 Selector: DOT . IDENTIFIER
  190 TypeAssertion: DOT . LEFTPARAN Type RIGHTPARAN

    LEFTPARAN   shift, and go to state 241
    IDENTIFIER  shift, and go to state 242


State 186

  169 PrimaryExpr: PrimaryExpr Selector .

    $default  reduce using rule 169 (PrimaryExpr)


State 187

  170 PrimaryExpr: PrimaryExpr Index .

    $default  reduce using rule 170 (PrimaryExpr)


State 188

  171 PrimaryExpr: PrimaryExpr Slice .

    $default  reduce using rule 171 (PrimaryExpr)


State 189

  174 PrimaryExpr: PrimaryExpr TypeAssertion .

    $default  reduce using rule 174 (PrimaryExpr)


State 190

  172 PrimaryExpr: PrimaryExpr Arguments .

    $default  reduce using rule 172 (PrimaryExpr)


State 191

  195 ExpressionList: ExpressionList COMMA . Expression

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 243
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 192

   62 VarSpec: IdentifierList Type ASSGN_OP ExpressionList .
  195 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 191

    $default  reduce using rule 62 (VarSpec)


State 193

  198 TypeSpecList: TypeSpecList TypeSpec SCOLON .

    $default  reduce using rule 198 (TypeSpecList)


State 194

   22 Block: LEFTBRACE OpenBlock . StatementList CloseBlock RIGHTBRACE

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    BREAK               shift, and go to state 244
    CONTINUE            shift, and go to state 245
    RETURN              shift, and go to state 246
    STRUCT              shift, and go to state 63
    IF                  shift, and go to state 247
    FOR                 shift, and go to state 248
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 249
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    GOTO                shift, and go to state 250
    FALLTHROUGH         shift, and go to state 251
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTBRACE           shift, and go to state 133
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 252

    $default  reduce using rule 50 (EmptyStmt)

    Block            go to state 253
    StatementList    go to state 254
    Statement        go to state 255
    Declaration      go to state 256
    LabeledStmt      go to state 257
    SimpleStmt       go to state 258
    EmptyStmt        go to state 259
    ExpressionStmt   go to state 260
    IncDecStmt       go to state 261
    Assignment       go to state 262
    ShortVarDecl     go to state 263
    VarDecl          go to state 28
    IdentifierList   go to state 264
    CompositeLit     go to state 112
    LiteralType      go to state 113
    Operand          go to state 114
    OperandName      go to state 115
    SliceType        go to state 73
    ReturnStmt       go to state 265
    BreakStmt        go to state 266
    ContinueStmt     go to state 267
    GotoStmt         go to state 268
    SwitchStmt       go to state 269
    ExprSwitchStmt   go to state 270
    FallthroughStmt  go to state 271
    IfStmt           go to state 272
    ForStmt          go to state 273
    Expression       go to state 274
    UnaryExpr        go to state 117
    PrimaryExpr      go to state 118
    MakeExpr         go to state 119
    ExpressionList   go to state 275
    TypeDecl         go to state 29
    MapType          go to state 74
    StructType       go to state 75
    PointerType      go to state 76
    ArrayType        go to state 77
    Literal          go to state 120
    BasicLit         go to state 121
    String           go to state 122


State 195

   40 FunctionDecl: FUNC IDENTIFIER OpenBlock Signature FunctionBody CloseBlock .

    $default  reduce using rule 40 (FunctionDecl)


State 196

   67 Result: LEFTPARAN TypeList . RIGHTPARAN
   69 TypeList: TypeList . COMMA Type

    RIGHTPARAN  shift, and go to state 276
    COMMA       shift, and go to state 277


State 197

   70 TypeList: Type .

    $default  reduce using rule 70 (TypeList)


State 198

  209 FieldDecl: IdentifierList Type . String
  210          | IdentifierList Type .

    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14

    $default  reduce using rule 210 (FieldDecl)

    String  go to state 278


State 199

  205 StructType: STRUCT LEFTBRACE FieldDeclList RIGHTBRACE .

    $default  reduce using rule 205 (StructType)


State 200

  208 FieldDeclList: FieldDeclList FieldDecl . SCOLON

    SCOLON  shift, and go to state 279


State 201

  207 FieldDeclList: FieldDecl SCOLON .

    $default  reduce using rule 207 (FieldDeclList)


State 202

  204 MapType: MAP LEFTSQUARE Type RIGHTSQUARE . Type

    STRUCT      shift, and go to state 63
    MAP         shift, and go to state 64
    MUL         shift, and go to state 65
    LEFTSQUARE  shift, and go to state 66
    IDENTIFIER  shift, and go to state 68

    LiteralType  go to state 70
    Type         go to state 280
    OperandName  go to state 72
    SliceType    go to state 73
    MapType      go to state 74
    StructType   go to state 75
    PointerType  go to state 76
    ArrayType    go to state 77


State 203

  189 MakeExpr: NEW LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 281


State 204

  186 MakeExpr: MAKE LEFTPARAN Type . COMMA Expression COMMA Expression RIGHTPARAN
  187         | MAKE LEFTPARAN Type . COMMA Expression RIGHTPARAN
  188         | MAKE LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 282
    COMMA       shift, and go to state 283


State 205

   85 LiteralType: LEFTSQUARE ELIPSIS RIGHTSQUARE Operand .

    $default  reduce using rule 85 (LiteralType)


State 206

   90 Operand: OperandName .

    $default  reduce using rule 90 (Operand)


State 207

   91 Operand: LEFTPARAN Expression RIGHTPARAN .

    $default  reduce using rule 91 (Operand)


State 208

   93 LiteralValue: LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 93 (LiteralValue)


State 209

  102 Key: LiteralValue .
  104 Element: LiteralValue .

    COLON     reduce using rule 102 (Key)
    $default  reduce using rule 104 (Element)


State 210

   94 LiteralValue: LEFTBRACE ElementList . RIGHTBRACE
   95             | LEFTBRACE ElementList . COMMA RIGHTBRACE
   98 ElementList: ElementList . COMMA KeyedElement

    RIGHTBRACE  shift, and go to state 284
    COMMA       shift, and go to state 285


State 211

   97 ElementList: KeyedElement .

    $default  reduce using rule 97 (ElementList)


State 212

  100 KeyedElement: Key . COLON Element

    COLON  shift, and go to state 286


State 213

   99 KeyedElement: Element .

    $default  reduce using rule 99 (KeyedElement)


State 214

  101 Key: Expression .
  103 Element: Expression .
  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    ANDNOT  shift, and go to state 163
    ADD     shift, and go to state 164
    SUB     shift, and go to state 165
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    OR      shift, and go to state 169
    LOGOR   shift, and go to state 170
    LOGAND  shift, and go to state 171
    ISEQ    shift, and go to state 172
    NEQ     shift, and go to state 173
    LESSEQ  shift, and go to state 174
    GRTEQ   shift, and go to state 175
    GRT     shift, and go to state 176
    LESS    shift, and go to state 177
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181

    COLON     reduce using rule 101 (Key)
    $default  reduce using rule 103 (Element)


State 215

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression
  176 KeyValueList: Expression . COLON Expression
  177             | Expression . COLON Expression COMMA KeyValueList

    ANDNOT  shift, and go to state 163
    ADD     shift, and go to state 164
    SUB     shift, and go to state 165
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    OR      shift, and go to state 169
    LOGOR   shift, and go to state 170
    LOGAND  shift, and go to state 171
    ISEQ    shift, and go to state 172
    NEQ     shift, and go to state 173
    LESSEQ  shift, and go to state 174
    GRTEQ   shift, and go to state 175
    GRT     shift, and go to state 176
    LESS    shift, and go to state 177
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181
    COLON   shift, and go to state 287


State 216

  175 StructLiteral: LEFTBRACE KeyValueList . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 288


State 217

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  147           | Expression ANDNOT Expression .
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    $default  reduce using rule 147 (Expression)


State 218

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  148           | Expression ADD Expression .
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    ANDNOT  shift, and go to state 163
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181

    $default  reduce using rule 148 (Expression)


State 219

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  149           | Expression SUB Expression .
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    ANDNOT  shift, and go to state 163
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181

    $default  reduce using rule 149 (Expression)


State 220

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  151           | Expression XOR Expression .
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    $default  reduce using rule 151 (Expression)


State 221

  141 Expression: Expression . MUL Expression
  141           | Expression MUL Expression .
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    $default  reduce using rule 141 (Expression)


State 222

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  146           | Expression AND Expression .
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    $default  reduce using rule 146 (Expression)


State 223

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  150           | Expression OR Expression .
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    ANDNOT  shift, and go to state 163
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181

    $default  reduce using rule 150 (Expression)


State 224

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  153           | Expression LOGOR Expression .
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    ANDNOT  shift, and go to state 163
    ADD     shift, and go to state 164
    SUB     shift, and go to state 165
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    OR      shift, and go to state 169
    LOGAND  shift, and go to state 171
    ISEQ    shift, and go to state 172
    NEQ     shift, and go to state 173
    LESSEQ  shift, and go to state 174
    GRTEQ   shift, and go to state 175
    GRT     shift, and go to state 176
    LESS    shift, and go to state 177
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181

    $default  reduce using rule 153 (Expression)


State 225

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  152           | Expression LOGAND Expression .
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    ANDNOT  shift, and go to state 163
    ADD     shift, and go to state 164
    SUB     shift, and go to state 165
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    OR      shift, and go to state 169
    ISEQ    shift, and go to state 172
    NEQ     shift, and go to state 173
    LESSEQ  shift, and go to state 174
    GRTEQ   shift, and go to state 175
    GRT     shift, and go to state 176
    LESS    shift, and go to state 177
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181

    $default  reduce using rule 152 (Expression)


State 226

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  154           | Expression ISEQ Expression .
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    ANDNOT  shift, and go to state 163
    ADD     shift, and go to state 164
    SUB     shift, and go to state 165
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    OR      shift, and go to state 169
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181

    $default  reduce using rule 154 (Expression)


State 227

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  155           | Expression NEQ Expression .
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    ANDNOT  shift, and go to state 163
    ADD     shift, and go to state 164
    SUB     shift, and go to state 165
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    OR      shift, and go to state 169
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181

    $default  reduce using rule 155 (Expression)


State 228

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  158           | Expression LESSEQ Expression .
  159           | Expression . LESS Expression

    ANDNOT  shift, and go to state 163
    ADD     shift, and go to state 164
    SUB     shift, and go to state 165
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    OR      shift, and go to state 169
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181

    $default  reduce using rule 158 (Expression)


State 229

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  156           | Expression GRTEQ Expression .
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    ANDNOT  shift, and go to state 163
    ADD     shift, and go to state 164
    SUB     shift, and go to state 165
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    OR      shift, and go to state 169
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181

    $default  reduce using rule 156 (Expression)


State 230

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  157           | Expression GRT Expression .
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    ANDNOT  shift, and go to state 163
    ADD     shift, and go to state 164
    SUB     shift, and go to state 165
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    OR      shift, and go to state 169
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181

    $default  reduce using rule 157 (Expression)


State 231

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression
  159           | Expression LESS Expression .

    ANDNOT  shift, and go to state 163
    ADD     shift, and go to state 164
    SUB     shift, and go to state 165
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    OR      shift, and go to state 169
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181

    $default  reduce using rule 159 (Expression)


State 232

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  143           | Expression MOD Expression .
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    $default  reduce using rule 143 (Expression)


State 233

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  142           | Expression QUOT Expression .
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    $default  reduce using rule 142 (Expression)


State 234

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  144           | Expression SHL Expression .
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    $default  reduce using rule 144 (Expression)


State 235

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  145           | Expression SHR Expression .
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    $default  reduce using rule 145 (Expression)


State 236

  213 ArrayType: LEFTSQUARE Expression RIGHTSQUARE Type .

    $default  reduce using rule 213 (ArrayType)


State 237

  191 Arguments: LEFTPARAN RIGHTPARAN .

    $default  reduce using rule 191 (Arguments)


State 238

  192 Arguments: LEFTPARAN ExpressionList . RIGHTPARAN
  193          | LEFTPARAN ExpressionList . ELIPSIS RIGHTPARAN
  195 ExpressionList: ExpressionList . COMMA Expression

    ELIPSIS     shift, and go to state 289
    RIGHTPARAN  shift, and go to state 290
    COMMA       shift, and go to state 191


State 239

  180 Slice: LEFTSQUARE COLON . Expression RIGHTSQUARE
  181      | LEFTSQUARE COLON . RIGHTSQUARE
  184      | LEFTSQUARE COLON . Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    RIGHTSQUARE         shift, and go to state 291
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 292
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 240

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression
  179 Index: LEFTSQUARE Expression . RIGHTSQUARE
  182 Slice: LEFTSQUARE Expression . COLON RIGHTSQUARE
  183      | LEFTSQUARE Expression . COLON Expression RIGHTSQUARE
  185      | LEFTSQUARE Expression . COLON Expression COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 163
    ADD          shift, and go to state 164
    SUB          shift, and go to state 165
    XOR          shift, and go to state 166
    MUL          shift, and go to state 167
    AND          shift, and go to state 168
    OR           shift, and go to state 169
    LOGOR        shift, and go to state 170
    LOGAND       shift, and go to state 171
    ISEQ         shift, and go to state 172
    NEQ          shift, and go to state 173
    LESSEQ       shift, and go to state 174
    GRTEQ        shift, and go to state 175
    GRT          shift, and go to state 176
    LESS         shift, and go to state 177
    MOD          shift, and go to state 178
    QUOT         shift, and go to state 179
    SHL          shift, and go to state 180
    SHR          shift, and go to state 181
    RIGHTSQUARE  shift, and go to state 293
    COLON        shift, and go to state 294


State 241

  190 TypeAssertion: DOT LEFTPARAN . Type RIGHTPARAN

    STRUCT      shift, and go to state 63
    MAP         shift, and go to state 64
    MUL         shift, and go to state 65
    LEFTSQUARE  shift, and go to state 66
    IDENTIFIER  shift, and go to state 68

    LiteralType  go to state 70
    Type         go to state 295
    OperandName  go to state 72
    SliceType    go to state 73
    MapType      go to state 74
    StructType   go to state 75
    PointerType  go to state 76
    ArrayType    go to state 77


State 242

  178 Selector: DOT IDENTIFIER .

    $default  reduce using rule 178 (Selector)


State 243

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression
  195 ExpressionList: ExpressionList COMMA Expression .

    ANDNOT  shift, and go to state 163
    ADD     shift, and go to state 164
    SUB     shift, and go to state 165
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    OR      shift, and go to state 169
    LOGOR   shift, and go to state 170
    LOGAND  shift, and go to state 171
    ISEQ    shift, and go to state 172
    NEQ     shift, and go to state 173
    LESSEQ  shift, and go to state 174
    GRTEQ   shift, and go to state 175
    GRT     shift, and go to state 176
    LESS    shift, and go to state 177
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181

    $default  reduce using rule 195 (ExpressionList)


State 244

  107 BreakStmt: BREAK .
  108          | BREAK . IDENTIFIER

    IDENTIFIER  shift, and go to state 296

    $default  reduce using rule 107 (BreakStmt)


State 245

  109 ContinueStmt: CONTINUE .
  110             | CONTINUE . IDENTIFIER

    IDENTIFIER  shift, and go to state 297

    $default  reduce using rule 109 (ContinueStmt)


State 246

  105 ReturnStmt: RETURN .
  106           | RETURN . ExpressionList

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    $default  reduce using rule 105 (ReturnStmt)

    CompositeLit    go to state 112
    LiteralType     go to state 113
    Operand         go to state 114
    OperandName     go to state 115
    SliceType       go to state 73
    Expression      go to state 124
    UnaryExpr       go to state 117
    PrimaryExpr     go to state 118
    MakeExpr        go to state 119
    ExpressionList  go to state 298
    MapType         go to state 74
    StructType      go to state 75
    PointerType     go to state 76
    ArrayType       go to state 77
    Literal         go to state 120
    BasicLit        go to state 121
    String          go to state 122


State 247

  127 IfStmt: IF . OpenBlock Expression Block CloseBlock
  128       | IF . OpenBlock SimpleStmt SCOLON Expression Block CloseBlock
  129       | IF . OpenBlock Expression Block ELSE IfStmt CloseBlock
  130       | IF . OpenBlock Expression Block ELSE Block CloseBlock
  131       | IF . OpenBlock SimpleStmt SCOLON Expression Block ELSE IfStmt CloseBlock
  132       | IF . OpenBlock SimpleStmt SCOLON Expression Block ELSE Block CloseBlock

    $default  reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 299


State 248

  133 ForStmt: FOR . forMarker Block forMarkerEnd
  134        | FOR . OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR . OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  136        | FOR . OpenBlock Condition forMarker Block forMarkerEnd CloseBlock
  137        | FOR . OpenBlock EmptyStmt Empty forMarker Expression Empty EmptyStmt Block forMarkerEnd CloseBlock

    LEFTBRACE  reduce using rule 138 (forMarker)
    $default   reduce using rule 2 (OpenBlock)

    OpenBlock  go to state 300
    forMarker  go to state 301


State 249

  113 ExprSwitchStmt: SWITCH . LEFTBRACE RIGHTBRACE
  114               | SWITCH . SimpleStmt SCOLON LEFTBRACE RIGHTBRACE
  115               | SWITCH . Expression LEFTBRACE RIGHTBRACE
  116               | SWITCH . SimpleStmt SCOLON Expression LEFTBRACE RIGHTBRACE
  117               | SWITCH . LEFTBRACE ExprCaseClauseList RIGHTBRACE
  118               | SWITCH . SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE
  119               | SWITCH . Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE
  120               | SWITCH . SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTBRACE           shift, and go to state 302
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 303

    $default  reduce using rule 50 (EmptyStmt)

    SimpleStmt      go to state 304
    EmptyStmt       go to state 259
    ExpressionStmt  go to state 260
    IncDecStmt      go to state 261
    Assignment      go to state 262
    ShortVarDecl    go to state 263
    IdentifierList  go to state 264
    CompositeLit    go to state 112
    LiteralType     go to state 113
    Operand         go to state 114
    OperandName     go to state 115
    SliceType       go to state 73
    Expression      go to state 305
    UnaryExpr       go to state 117
    PrimaryExpr     go to state 118
    MakeExpr        go to state 119
    ExpressionList  go to state 275
    MapType         go to state 74
    StructType      go to state 75
    PointerType     go to state 76
    ArrayType       go to state 77
    Literal         go to state 120
    BasicLit        go to state 121
    String          go to state 122


State 250

  111 GotoStmt: GOTO . IDENTIFIER

    IDENTIFIER  shift, and go to state 306


State 251

  126 FallthroughStmt: FALLTHROUGH .

    $default  reduce using rule 126 (FallthroughStmt)


State 252

   44 LabeledStmt: IDENTIFIER . COLON Statement
   78 IdentifierList: IDENTIFIER .
   92 OperandName: IDENTIFIER .

    COLON  shift, and go to state 307

    INFER_EQ  reduce using rule 78 (IdentifierList)
    COMMA     reduce using rule 78 (IdentifierList)
    COMMA     [reduce using rule 92 (OperandName)]
    $default  reduce using rule 92 (OperandName)


State 253

   35 Statement: Block .

    $default  reduce using rule 35 (Statement)


State 254

   22 Block: LEFTBRACE OpenBlock StatementList . CloseBlock RIGHTBRACE
   24 StatementList: StatementList . Statement SCOLON

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    BREAK               shift, and go to state 244
    CONTINUE            shift, and go to state 245
    RETURN              shift, and go to state 246
    STRUCT              shift, and go to state 63
    IF                  shift, and go to state 247
    FOR                 shift, and go to state 248
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 249
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    GOTO                shift, and go to state 250
    FALLTHROUGH         shift, and go to state 251
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTBRACE           shift, and go to state 133
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 252

    SCOLON    reduce using rule 50 (EmptyStmt)
    $default  reduce using rule 3 (CloseBlock)

    CloseBlock       go to state 308
    Block            go to state 253
    Statement        go to state 309
    Declaration      go to state 256
    LabeledStmt      go to state 257
    SimpleStmt       go to state 258
    EmptyStmt        go to state 259
    ExpressionStmt   go to state 260
    IncDecStmt       go to state 261
    Assignment       go to state 262
    ShortVarDecl     go to state 263
    VarDecl          go to state 28
    IdentifierList   go to state 264
    CompositeLit     go to state 112
    LiteralType      go to state 113
    Operand          go to state 114
    OperandName      go to state 115
    SliceType        go to state 73
    ReturnStmt       go to state 265
    BreakStmt        go to state 266
    ContinueStmt     go to state 267
    GotoStmt         go to state 268
    SwitchStmt       go to state 269
    ExprSwitchStmt   go to state 270
    FallthroughStmt  go to state 271
    IfStmt           go to state 272
    ForStmt          go to state 273
    Expression       go to state 274
    UnaryExpr        go to state 117
    PrimaryExpr      go to state 118
    MakeExpr         go to state 119
    ExpressionList   go to state 275
    TypeDecl         go to state 29
    MapType          go to state 74
    StructType       go to state 75
    PointerType      go to state 76
    ArrayType        go to state 77
    Literal          go to state 120
    BasicLit         go to state 121
    String           go to state 122


State 255

   25 StatementList: Statement . SCOLON

    SCOLON  shift, and go to state 310


State 256

   26 Statement: Declaration .

    $default  reduce using rule 26 (Statement)


State 257

   27 Statement: LabeledStmt .

    $default  reduce using rule 27 (Statement)


State 258

   28 Statement: SimpleStmt .

    $default  reduce using rule 28 (Statement)


State 259

   45 SimpleStmt: EmptyStmt .

    $default  reduce using rule 45 (SimpleStmt)


State 260

   46 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 46 (SimpleStmt)


State 261

   47 SimpleStmt: IncDecStmt .

    $default  reduce using rule 47 (SimpleStmt)


State 262

   48 SimpleStmt: Assignment .

    $default  reduce using rule 48 (SimpleStmt)


State 263

   49 SimpleStmt: ShortVarDecl .

    $default  reduce using rule 49 (SimpleStmt)


State 264

   56 ShortVarDecl: IdentifierList . INFER_EQ ExpressionList
   77 IdentifierList: IdentifierList . COMMA IDENTIFIER

    INFER_EQ  shift, and go to state 311
    COMMA     shift, and go to state 67


State 265

   29 Statement: ReturnStmt .

    $default  reduce using rule 29 (Statement)


State 266

   30 Statement: BreakStmt .

    $default  reduce using rule 30 (Statement)


State 267

   31 Statement: ContinueStmt .

    $default  reduce using rule 31 (Statement)


State 268

   32 Statement: GotoStmt .

    $default  reduce using rule 32 (Statement)


State 269

   33 Statement: SwitchStmt .

    $default  reduce using rule 33 (Statement)


State 270

  112 SwitchStmt: ExprSwitchStmt .

    $default  reduce using rule 112 (SwitchStmt)


State 271

   34 Statement: FallthroughStmt .

    $default  reduce using rule 34 (Statement)


State 272

   36 Statement: IfStmt .

    $default  reduce using rule 36 (Statement)


State 273

   37 Statement: ForStmt .

    $default  reduce using rule 37 (Statement)


State 274

   52 ExpressionStmt: Expression .
   53 IncDecStmt: Expression . PLUSPLUS
   54           | Expression . MINUSMINUS
  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression
  194 ExpressionList: Expression .

    PLUSPLUS    shift, and go to state 312
    MINUSMINUS  shift, and go to state 313
    ANDNOT      shift, and go to state 163
    ADD         shift, and go to state 164
    SUB         shift, and go to state 165
    XOR         shift, and go to state 166
    MUL         shift, and go to state 167
    AND         shift, and go to state 168
    OR          shift, and go to state 169
    LOGOR       shift, and go to state 170
    LOGAND      shift, and go to state 171
    ISEQ        shift, and go to state 172
    NEQ         shift, and go to state 173
    LESSEQ      shift, and go to state 174
    GRTEQ       shift, and go to state 175
    GRT         shift, and go to state 176
    LESS        shift, and go to state 177
    MOD         shift, and go to state 178
    QUOT        shift, and go to state 179
    SHL         shift, and go to state 180
    SHR         shift, and go to state 181

    COMMA     reduce using rule 194 (ExpressionList)
    ASSGN_OP  reduce using rule 194 (ExpressionList)
    $default  reduce using rule 52 (ExpressionStmt)


State 275

   55 Assignment: ExpressionList . ASSGN_OP ExpressionList
  195 ExpressionList: ExpressionList . COMMA Expression

    COMMA     shift, and go to state 191
    ASSGN_OP  shift, and go to state 314


State 276

   67 Result: LEFTPARAN TypeList RIGHTPARAN .

    $default  reduce using rule 67 (Result)


State 277

   69 TypeList: TypeList COMMA . Type

    STRUCT      shift, and go to state 63
    MAP         shift, and go to state 64
    MUL         shift, and go to state 65
    LEFTSQUARE  shift, and go to state 66
    IDENTIFIER  shift, and go to state 68

    LiteralType  go to state 70
    Type         go to state 315
    OperandName  go to state 72
    SliceType    go to state 73
    MapType      go to state 74
    StructType   go to state 75
    PointerType  go to state 76
    ArrayType    go to state 77


State 278

  209 FieldDecl: IdentifierList Type String .

    $default  reduce using rule 209 (FieldDecl)


State 279

  208 FieldDeclList: FieldDeclList FieldDecl SCOLON .

    $default  reduce using rule 208 (FieldDeclList)


State 280

  204 MapType: MAP LEFTSQUARE Type RIGHTSQUARE Type .

    $default  reduce using rule 204 (MapType)


State 281

  189 MakeExpr: NEW LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 189 (MakeExpr)


State 282

  188 MakeExpr: MAKE LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 188 (MakeExpr)


State 283

  186 MakeExpr: MAKE LEFTPARAN Type COMMA . Expression COMMA Expression RIGHTPARAN
  187         | MAKE LEFTPARAN Type COMMA . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 316
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 284

   94 LiteralValue: LEFTBRACE ElementList RIGHTBRACE .

    $default  reduce using rule 94 (LiteralValue)


State 285

   95 LiteralValue: LEFTBRACE ElementList COMMA . RIGHTBRACE
   98 ElementList: ElementList COMMA . KeyedElement

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    RIGHTBRACE          shift, and go to state 317
    LEFTPARAN           shift, and go to state 110
    LEFTBRACE           shift, and go to state 159
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    LiteralValue  go to state 209
    SliceType     go to state 73
    KeyedElement  go to state 318
    Key           go to state 212
    Element       go to state 213
    Expression    go to state 214
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 286

  100 KeyedElement: Key COLON . Element

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTBRACE           shift, and go to state 159
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    LiteralValue  go to state 319
    SliceType     go to state 73
    Element       go to state 320
    Expression    go to state 321
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 287

  176 KeyValueList: Expression COLON . Expression
  177             | Expression COLON . Expression COMMA KeyValueList

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 322
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 288

  175 StructLiteral: LEFTBRACE KeyValueList RIGHTBRACE .

    $default  reduce using rule 175 (StructLiteral)


State 289

  193 Arguments: LEFTPARAN ExpressionList ELIPSIS . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 323


State 290

  192 Arguments: LEFTPARAN ExpressionList RIGHTPARAN .

    $default  reduce using rule 192 (Arguments)


State 291

  181 Slice: LEFTSQUARE COLON RIGHTSQUARE .

    $default  reduce using rule 181 (Slice)


State 292

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression
  180 Slice: LEFTSQUARE COLON Expression . RIGHTSQUARE
  184      | LEFTSQUARE COLON Expression . COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 163
    ADD          shift, and go to state 164
    SUB          shift, and go to state 165
    XOR          shift, and go to state 166
    MUL          shift, and go to state 167
    AND          shift, and go to state 168
    OR           shift, and go to state 169
    LOGOR        shift, and go to state 170
    LOGAND       shift, and go to state 171
    ISEQ         shift, and go to state 172
    NEQ          shift, and go to state 173
    LESSEQ       shift, and go to state 174
    GRTEQ        shift, and go to state 175
    GRT          shift, and go to state 176
    LESS         shift, and go to state 177
    MOD          shift, and go to state 178
    QUOT         shift, and go to state 179
    SHL          shift, and go to state 180
    SHR          shift, and go to state 181
    RIGHTSQUARE  shift, and go to state 324
    COLON        shift, and go to state 325


State 293

  179 Index: LEFTSQUARE Expression RIGHTSQUARE .

    $default  reduce using rule 179 (Index)


State 294

  182 Slice: LEFTSQUARE Expression COLON . RIGHTSQUARE
  183      | LEFTSQUARE Expression COLON . Expression RIGHTSQUARE
  185      | LEFTSQUARE Expression COLON . Expression COLON Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    RIGHTSQUARE         shift, and go to state 326
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 327
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 295

  190 TypeAssertion: DOT LEFTPARAN Type . RIGHTPARAN

    RIGHTPARAN  shift, and go to state 328


State 296

  108 BreakStmt: BREAK IDENTIFIER .

    $default  reduce using rule 108 (BreakStmt)


State 297

  110 ContinueStmt: CONTINUE IDENTIFIER .

    $default  reduce using rule 110 (ContinueStmt)


State 298

  106 ReturnStmt: RETURN ExpressionList .
  195 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 191

    $default  reduce using rule 106 (ReturnStmt)


State 299

  127 IfStmt: IF OpenBlock . Expression Block CloseBlock
  128       | IF OpenBlock . SimpleStmt SCOLON Expression Block CloseBlock
  129       | IF OpenBlock . Expression Block ELSE IfStmt CloseBlock
  130       | IF OpenBlock . Expression Block ELSE Block CloseBlock
  131       | IF OpenBlock . SimpleStmt SCOLON Expression Block ELSE IfStmt CloseBlock
  132       | IF OpenBlock . SimpleStmt SCOLON Expression Block ELSE Block CloseBlock

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 303

    $default  reduce using rule 50 (EmptyStmt)

    SimpleStmt      go to state 329
    EmptyStmt       go to state 259
    ExpressionStmt  go to state 260
    IncDecStmt      go to state 261
    Assignment      go to state 262
    ShortVarDecl    go to state 263
    IdentifierList  go to state 264
    CompositeLit    go to state 112
    LiteralType     go to state 113
    Operand         go to state 114
    OperandName     go to state 115
    SliceType       go to state 73
    Expression      go to state 330
    UnaryExpr       go to state 117
    PrimaryExpr     go to state 118
    MakeExpr        go to state 119
    ExpressionList  go to state 275
    MapType         go to state 74
    StructType      go to state 75
    PointerType     go to state 76
    ArrayType       go to state 77
    Literal         go to state 120
    BasicLit        go to state 121
    String          go to state 122


State 300

  134 ForStmt: FOR OpenBlock . SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR OpenBlock . SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  136        | FOR OpenBlock . Condition forMarker Block forMarkerEnd CloseBlock
  137        | FOR OpenBlock . EmptyStmt Empty forMarker Expression Empty EmptyStmt Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 303

    INTEGER_VAL         [reduce using rule 50 (EmptyStmt)]
    FLOAT_VAL           [reduce using rule 50 (EmptyStmt)]
    TRUE                [reduce using rule 50 (EmptyStmt)]
    FALSE               [reduce using rule 50 (EmptyStmt)]
    STRUCT              [reduce using rule 50 (EmptyStmt)]
    NEW                 [reduce using rule 50 (EmptyStmt)]
    MAP                 [reduce using rule 50 (EmptyStmt)]
    MAKE                [reduce using rule 50 (EmptyStmt)]
    ADD                 [reduce using rule 50 (EmptyStmt)]
    SUB                 [reduce using rule 50 (EmptyStmt)]
    NOT                 [reduce using rule 50 (EmptyStmt)]
    MUL                 [reduce using rule 50 (EmptyStmt)]
    AND                 [reduce using rule 50 (EmptyStmt)]
    LEFTPARAN           [reduce using rule 50 (EmptyStmt)]
    LEFTSQUARE          [reduce using rule 50 (EmptyStmt)]
    RAW_STRING          [reduce using rule 50 (EmptyStmt)]
    INTERPRETED_STRING  [reduce using rule 50 (EmptyStmt)]
    BYTE_VAL            [reduce using rule 50 (EmptyStmt)]
    IDENTIFIER          [reduce using rule 50 (EmptyStmt)]
    $default            reduce using rule 50 (EmptyStmt)

    Condition       go to state 331
    SimpleStmt      go to state 332
    EmptyStmt       go to state 333
    ExpressionStmt  go to state 260
    IncDecStmt      go to state 261
    Assignment      go to state 262
    ShortVarDecl    go to state 263
    IdentifierList  go to state 264
    CompositeLit    go to state 112
    LiteralType     go to state 113
    Operand         go to state 114
    OperandName     go to state 115
    SliceType       go to state 73
    Expression      go to state 334
    UnaryExpr       go to state 117
    PrimaryExpr     go to state 118
    MakeExpr        go to state 119
    ExpressionList  go to state 275
    MapType         go to state 74
    StructType      go to state 75
    PointerType     go to state 76
    ArrayType       go to state 77
    Literal         go to state 120
    BasicLit        go to state 121
    String          go to state 122


State 301

  133 ForStmt: FOR forMarker . Block forMarkerEnd

    LEFTBRACE  shift, and go to state 133

    Block  go to state 335


State 302

  113 ExprSwitchStmt: SWITCH LEFTBRACE . RIGHTBRACE
  117               | SWITCH LEFTBRACE . ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 336
    DEFAULT     shift, and go to state 337
    RIGHTBRACE  shift, and go to state 338

    ExprCaseClauseList  go to state 339
    ExprCaseClause      go to state 340
    ExprSwitchCase      go to state 341


State 303

   78 IdentifierList: IDENTIFIER .
   92 OperandName: IDENTIFIER .

    INFER_EQ  reduce using rule 78 (IdentifierList)
    COMMA     reduce using rule 78 (IdentifierList)
    COMMA     [reduce using rule 92 (OperandName)]
    $default  reduce using rule 92 (OperandName)


State 304

  114 ExprSwitchStmt: SWITCH SimpleStmt . SCOLON LEFTBRACE RIGHTBRACE
  116               | SWITCH SimpleStmt . SCOLON Expression LEFTBRACE RIGHTBRACE
  118               | SWITCH SimpleStmt . SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE
  120               | SWITCH SimpleStmt . SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

    SCOLON  shift, and go to state 342


State 305

   52 ExpressionStmt: Expression .
   53 IncDecStmt: Expression . PLUSPLUS
   54           | Expression . MINUSMINUS
  115 ExprSwitchStmt: SWITCH Expression . LEFTBRACE RIGHTBRACE
  119               | SWITCH Expression . LEFTBRACE ExprCaseClauseList RIGHTBRACE
  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression
  194 ExpressionList: Expression .

    PLUSPLUS    shift, and go to state 312
    MINUSMINUS  shift, and go to state 313
    ANDNOT      shift, and go to state 163
    ADD         shift, and go to state 164
    SUB         shift, and go to state 165
    XOR         shift, and go to state 166
    MUL         shift, and go to state 167
    AND         shift, and go to state 168
    OR          shift, and go to state 169
    LOGOR       shift, and go to state 170
    LOGAND      shift, and go to state 171
    ISEQ        shift, and go to state 172
    NEQ         shift, and go to state 173
    LESSEQ      shift, and go to state 174
    GRTEQ       shift, and go to state 175
    GRT         shift, and go to state 176
    LESS        shift, and go to state 177
    MOD         shift, and go to state 178
    QUOT        shift, and go to state 179
    SHL         shift, and go to state 180
    SHR         shift, and go to state 181
    LEFTBRACE   shift, and go to state 343

    SCOLON    reduce using rule 52 (ExpressionStmt)
    $default  reduce using rule 194 (ExpressionList)


State 306

  111 GotoStmt: GOTO IDENTIFIER .

    $default  reduce using rule 111 (GotoStmt)


State 307

   44 LabeledStmt: IDENTIFIER COLON . Statement

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    BREAK               shift, and go to state 244
    CONTINUE            shift, and go to state 245
    RETURN              shift, and go to state 246
    STRUCT              shift, and go to state 63
    IF                  shift, and go to state 247
    FOR                 shift, and go to state 248
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 249
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    GOTO                shift, and go to state 250
    FALLTHROUGH         shift, and go to state 251
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTBRACE           shift, and go to state 133
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 252

    $default  reduce using rule 50 (EmptyStmt)

    Block            go to state 253
    Statement        go to state 344
    Declaration      go to state 256
    LabeledStmt      go to state 257
    SimpleStmt       go to state 258
    EmptyStmt        go to state 259
    ExpressionStmt   go to state 260
    IncDecStmt       go to state 261
    Assignment       go to state 262
    ShortVarDecl     go to state 263
    VarDecl          go to state 28
    IdentifierList   go to state 264
    CompositeLit     go to state 112
    LiteralType      go to state 113
    Operand          go to state 114
    OperandName      go to state 115
    SliceType        go to state 73
    ReturnStmt       go to state 265
    BreakStmt        go to state 266
    ContinueStmt     go to state 267
    GotoStmt         go to state 268
    SwitchStmt       go to state 269
    ExprSwitchStmt   go to state 270
    FallthroughStmt  go to state 271
    IfStmt           go to state 272
    ForStmt          go to state 273
    Expression       go to state 274
    UnaryExpr        go to state 117
    PrimaryExpr      go to state 118
    MakeExpr         go to state 119
    ExpressionList   go to state 275
    TypeDecl         go to state 29
    MapType          go to state 74
    StructType       go to state 75
    PointerType      go to state 76
    ArrayType        go to state 77
    Literal          go to state 120
    BasicLit         go to state 121
    String           go to state 122


State 308

   22 Block: LEFTBRACE OpenBlock StatementList CloseBlock . RIGHTBRACE

    RIGHTBRACE  shift, and go to state 345


State 309

   24 StatementList: StatementList Statement . SCOLON

    SCOLON  shift, and go to state 346


State 310

   25 StatementList: Statement SCOLON .

    $default  reduce using rule 25 (StatementList)


State 311

   56 ShortVarDecl: IdentifierList INFER_EQ . ExpressionList

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit    go to state 112
    LiteralType     go to state 113
    Operand         go to state 114
    OperandName     go to state 115
    SliceType       go to state 73
    Expression      go to state 124
    UnaryExpr       go to state 117
    PrimaryExpr     go to state 118
    MakeExpr        go to state 119
    ExpressionList  go to state 347
    MapType         go to state 74
    StructType      go to state 75
    PointerType     go to state 76
    ArrayType       go to state 77
    Literal         go to state 120
    BasicLit        go to state 121
    String          go to state 122


State 312

   53 IncDecStmt: Expression PLUSPLUS .

    $default  reduce using rule 53 (IncDecStmt)


State 313

   54 IncDecStmt: Expression MINUSMINUS .

    $default  reduce using rule 54 (IncDecStmt)


State 314

   55 Assignment: ExpressionList ASSGN_OP . ExpressionList

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit    go to state 112
    LiteralType     go to state 113
    Operand         go to state 114
    OperandName     go to state 115
    SliceType       go to state 73
    Expression      go to state 124
    UnaryExpr       go to state 117
    PrimaryExpr     go to state 118
    MakeExpr        go to state 119
    ExpressionList  go to state 348
    MapType         go to state 74
    StructType      go to state 75
    PointerType     go to state 76
    ArrayType       go to state 77
    Literal         go to state 120
    BasicLit        go to state 121
    String          go to state 122


State 315

   69 TypeList: TypeList COMMA Type .

    $default  reduce using rule 69 (TypeList)


State 316

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression
  186 MakeExpr: MAKE LEFTPARAN Type COMMA Expression . COMMA Expression RIGHTPARAN
  187         | MAKE LEFTPARAN Type COMMA Expression . RIGHTPARAN

    ANDNOT      shift, and go to state 163
    ADD         shift, and go to state 164
    SUB         shift, and go to state 165
    XOR         shift, and go to state 166
    MUL         shift, and go to state 167
    AND         shift, and go to state 168
    OR          shift, and go to state 169
    LOGOR       shift, and go to state 170
    LOGAND      shift, and go to state 171
    ISEQ        shift, and go to state 172
    NEQ         shift, and go to state 173
    LESSEQ      shift, and go to state 174
    GRTEQ       shift, and go to state 175
    GRT         shift, and go to state 176
    LESS        shift, and go to state 177
    MOD         shift, and go to state 178
    QUOT        shift, and go to state 179
    SHL         shift, and go to state 180
    SHR         shift, and go to state 181
    RIGHTPARAN  shift, and go to state 349
    COMMA       shift, and go to state 350


State 317

   95 LiteralValue: LEFTBRACE ElementList COMMA RIGHTBRACE .

    $default  reduce using rule 95 (LiteralValue)


State 318

   98 ElementList: ElementList COMMA KeyedElement .

    $default  reduce using rule 98 (ElementList)


State 319

  104 Element: LiteralValue .

    $default  reduce using rule 104 (Element)


State 320

  100 KeyedElement: Key COLON Element .

    $default  reduce using rule 100 (KeyedElement)


State 321

  103 Element: Expression .
  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    ANDNOT  shift, and go to state 163
    ADD     shift, and go to state 164
    SUB     shift, and go to state 165
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    OR      shift, and go to state 169
    LOGOR   shift, and go to state 170
    LOGAND  shift, and go to state 171
    ISEQ    shift, and go to state 172
    NEQ     shift, and go to state 173
    LESSEQ  shift, and go to state 174
    GRTEQ   shift, and go to state 175
    GRT     shift, and go to state 176
    LESS    shift, and go to state 177
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181

    $default  reduce using rule 103 (Element)


State 322

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression
  176 KeyValueList: Expression COLON Expression .
  177             | Expression COLON Expression . COMMA KeyValueList

    ANDNOT  shift, and go to state 163
    ADD     shift, and go to state 164
    SUB     shift, and go to state 165
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    OR      shift, and go to state 169
    LOGOR   shift, and go to state 170
    LOGAND  shift, and go to state 171
    ISEQ    shift, and go to state 172
    NEQ     shift, and go to state 173
    LESSEQ  shift, and go to state 174
    GRTEQ   shift, and go to state 175
    GRT     shift, and go to state 176
    LESS    shift, and go to state 177
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181
    COMMA   shift, and go to state 351

    $default  reduce using rule 176 (KeyValueList)


State 323

  193 Arguments: LEFTPARAN ExpressionList ELIPSIS RIGHTPARAN .

    $default  reduce using rule 193 (Arguments)


State 324

  180 Slice: LEFTSQUARE COLON Expression RIGHTSQUARE .

    $default  reduce using rule 180 (Slice)


State 325

  184 Slice: LEFTSQUARE COLON Expression COLON . Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 352
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 326

  182 Slice: LEFTSQUARE Expression COLON RIGHTSQUARE .

    $default  reduce using rule 182 (Slice)


State 327

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression
  183 Slice: LEFTSQUARE Expression COLON Expression . RIGHTSQUARE
  185      | LEFTSQUARE Expression COLON Expression . COLON Expression RIGHTSQUARE

    ANDNOT       shift, and go to state 163
    ADD          shift, and go to state 164
    SUB          shift, and go to state 165
    XOR          shift, and go to state 166
    MUL          shift, and go to state 167
    AND          shift, and go to state 168
    OR           shift, and go to state 169
    LOGOR        shift, and go to state 170
    LOGAND       shift, and go to state 171
    ISEQ         shift, and go to state 172
    NEQ          shift, and go to state 173
    LESSEQ       shift, and go to state 174
    GRTEQ        shift, and go to state 175
    GRT          shift, and go to state 176
    LESS         shift, and go to state 177
    MOD          shift, and go to state 178
    QUOT         shift, and go to state 179
    SHL          shift, and go to state 180
    SHR          shift, and go to state 181
    RIGHTSQUARE  shift, and go to state 353
    COLON        shift, and go to state 354


State 328

  190 TypeAssertion: DOT LEFTPARAN Type RIGHTPARAN .

    $default  reduce using rule 190 (TypeAssertion)


State 329

  128 IfStmt: IF OpenBlock SimpleStmt . SCOLON Expression Block CloseBlock
  131       | IF OpenBlock SimpleStmt . SCOLON Expression Block ELSE IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt . SCOLON Expression Block ELSE Block CloseBlock

    SCOLON  shift, and go to state 355


State 330

   52 ExpressionStmt: Expression .
   53 IncDecStmt: Expression . PLUSPLUS
   54           | Expression . MINUSMINUS
  127 IfStmt: IF OpenBlock Expression . Block CloseBlock
  129       | IF OpenBlock Expression . Block ELSE IfStmt CloseBlock
  130       | IF OpenBlock Expression . Block ELSE Block CloseBlock
  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression
  194 ExpressionList: Expression .

    PLUSPLUS    shift, and go to state 312
    MINUSMINUS  shift, and go to state 313
    ANDNOT      shift, and go to state 163
    ADD         shift, and go to state 164
    SUB         shift, and go to state 165
    XOR         shift, and go to state 166
    MUL         shift, and go to state 167
    AND         shift, and go to state 168
    OR          shift, and go to state 169
    LOGOR       shift, and go to state 170
    LOGAND      shift, and go to state 171
    ISEQ        shift, and go to state 172
    NEQ         shift, and go to state 173
    LESSEQ      shift, and go to state 174
    GRTEQ       shift, and go to state 175
    GRT         shift, and go to state 176
    LESS        shift, and go to state 177
    MOD         shift, and go to state 178
    QUOT        shift, and go to state 179
    SHL         shift, and go to state 180
    SHR         shift, and go to state 181
    LEFTBRACE   shift, and go to state 133

    SCOLON    reduce using rule 52 (ExpressionStmt)
    $default  reduce using rule 194 (ExpressionList)

    Block  go to state 356


State 331

  136 ForStmt: FOR OpenBlock Condition . forMarker Block forMarkerEnd CloseBlock

    $default  reduce using rule 138 (forMarker)

    forMarker  go to state 357


State 332

  134 ForStmt: FOR OpenBlock SimpleStmt . SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR OpenBlock SimpleStmt . SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    SCOLON  shift, and go to state 358


State 333

   45 SimpleStmt: EmptyStmt .
  137 ForStmt: FOR OpenBlock EmptyStmt . Empty forMarker Expression Empty EmptyStmt Block forMarkerEnd CloseBlock

    SCOLON    reduce using rule 45 (SimpleStmt)
    $default  reduce using rule 140 (Empty)

    Empty  go to state 359


State 334

   23 Condition: Expression .
   52 ExpressionStmt: Expression .
   53 IncDecStmt: Expression . PLUSPLUS
   54           | Expression . MINUSMINUS
  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression
  194 ExpressionList: Expression .

    PLUSPLUS    shift, and go to state 312
    MINUSMINUS  shift, and go to state 313
    ANDNOT      shift, and go to state 163
    ADD         shift, and go to state 164
    SUB         shift, and go to state 165
    XOR         shift, and go to state 166
    MUL         shift, and go to state 167
    AND         shift, and go to state 168
    OR          shift, and go to state 169
    LOGOR       shift, and go to state 170
    LOGAND      shift, and go to state 171
    ISEQ        shift, and go to state 172
    NEQ         shift, and go to state 173
    LESSEQ      shift, and go to state 174
    GRTEQ       shift, and go to state 175
    GRT         shift, and go to state 176
    LESS        shift, and go to state 177
    MOD         shift, and go to state 178
    QUOT        shift, and go to state 179
    SHL         shift, and go to state 180
    SHR         shift, and go to state 181

    SCOLON     reduce using rule 52 (ExpressionStmt)
    LEFTBRACE  reduce using rule 23 (Condition)
    $default   reduce using rule 194 (ExpressionList)


State 335

  133 ForStmt: FOR forMarker Block . forMarkerEnd

    $default  reduce using rule 139 (forMarkerEnd)

    forMarkerEnd  go to state 360


State 336

  124 ExprSwitchCase: CASE . ExpressionList

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit    go to state 112
    LiteralType     go to state 113
    Operand         go to state 114
    OperandName     go to state 115
    SliceType       go to state 73
    Expression      go to state 124
    UnaryExpr       go to state 117
    PrimaryExpr     go to state 118
    MakeExpr        go to state 119
    ExpressionList  go to state 361
    MapType         go to state 74
    StructType      go to state 75
    PointerType     go to state 76
    ArrayType       go to state 77
    Literal         go to state 120
    BasicLit        go to state 121
    String          go to state 122


State 337

  125 ExprSwitchCase: DEFAULT .

    $default  reduce using rule 125 (ExprSwitchCase)


State 338

  113 ExprSwitchStmt: SWITCH LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 113 (ExprSwitchStmt)


State 339

  117 ExprSwitchStmt: SWITCH LEFTBRACE ExprCaseClauseList . RIGHTBRACE
  121 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 336
    DEFAULT     shift, and go to state 337
    RIGHTBRACE  shift, and go to state 362

    ExprCaseClause  go to state 363
    ExprSwitchCase  go to state 341


State 340

  122 ExprCaseClauseList: ExprCaseClause .

    $default  reduce using rule 122 (ExprCaseClauseList)


State 341

  123 ExprCaseClause: ExprSwitchCase . COLON StatementList

    COLON  shift, and go to state 364


State 342

  114 ExprSwitchStmt: SWITCH SimpleStmt SCOLON . LEFTBRACE RIGHTBRACE
  116               | SWITCH SimpleStmt SCOLON . Expression LEFTBRACE RIGHTBRACE
  118               | SWITCH SimpleStmt SCOLON . LEFTBRACE ExprCaseClauseList RIGHTBRACE
  120               | SWITCH SimpleStmt SCOLON . Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTBRACE           shift, and go to state 365
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 366
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 343

  115 ExprSwitchStmt: SWITCH Expression LEFTBRACE . RIGHTBRACE
  119               | SWITCH Expression LEFTBRACE . ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 336
    DEFAULT     shift, and go to state 337
    RIGHTBRACE  shift, and go to state 367

    ExprCaseClauseList  go to state 368
    ExprCaseClause      go to state 340
    ExprSwitchCase      go to state 341


State 344

   44 LabeledStmt: IDENTIFIER COLON Statement .

    $default  reduce using rule 44 (LabeledStmt)


State 345

   22 Block: LEFTBRACE OpenBlock StatementList CloseBlock RIGHTBRACE .

    $default  reduce using rule 22 (Block)


State 346

   24 StatementList: StatementList Statement SCOLON .

    $default  reduce using rule 24 (StatementList)


State 347

   56 ShortVarDecl: IdentifierList INFER_EQ ExpressionList .
  195 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 191

    $default  reduce using rule 56 (ShortVarDecl)


State 348

   55 Assignment: ExpressionList ASSGN_OP ExpressionList .
  195 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 191

    $default  reduce using rule 55 (Assignment)


State 349

  187 MakeExpr: MAKE LEFTPARAN Type COMMA Expression RIGHTPARAN .

    $default  reduce using rule 187 (MakeExpr)


State 350

  186 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA . Expression RIGHTPARAN

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 369
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 351

  177 KeyValueList: Expression COLON Expression COMMA . KeyValueList

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 215
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    KeyValueList  go to state 370
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 352

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression
  184 Slice: LEFTSQUARE COLON Expression COLON Expression . RIGHTSQUARE

    ANDNOT       shift, and go to state 163
    ADD          shift, and go to state 164
    SUB          shift, and go to state 165
    XOR          shift, and go to state 166
    MUL          shift, and go to state 167
    AND          shift, and go to state 168
    OR           shift, and go to state 169
    LOGOR        shift, and go to state 170
    LOGAND       shift, and go to state 171
    ISEQ         shift, and go to state 172
    NEQ          shift, and go to state 173
    LESSEQ       shift, and go to state 174
    GRTEQ        shift, and go to state 175
    GRT          shift, and go to state 176
    LESS         shift, and go to state 177
    MOD          shift, and go to state 178
    QUOT         shift, and go to state 179
    SHL          shift, and go to state 180
    SHR          shift, and go to state 181
    RIGHTSQUARE  shift, and go to state 371


State 353

  183 Slice: LEFTSQUARE Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 183 (Slice)


State 354

  185 Slice: LEFTSQUARE Expression COLON Expression COLON . Expression RIGHTSQUARE

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 372
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 355

  128 IfStmt: IF OpenBlock SimpleStmt SCOLON . Expression Block CloseBlock
  131       | IF OpenBlock SimpleStmt SCOLON . Expression Block ELSE IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt SCOLON . Expression Block ELSE Block CloseBlock

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 373
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 356

  127 IfStmt: IF OpenBlock Expression Block . CloseBlock
  129       | IF OpenBlock Expression Block . ELSE IfStmt CloseBlock
  130       | IF OpenBlock Expression Block . ELSE Block CloseBlock

    ELSE  shift, and go to state 374

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 375


State 357

  136 ForStmt: FOR OpenBlock Condition forMarker . Block forMarkerEnd CloseBlock

    LEFTBRACE  shift, and go to state 133

    Block  go to state 376


State 358

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON . forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR OpenBlock SimpleStmt SCOLON . forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    $default  reduce using rule 138 (forMarker)

    forMarker  go to state 377


State 359

  137 ForStmt: FOR OpenBlock EmptyStmt Empty . forMarker Expression Empty EmptyStmt Block forMarkerEnd CloseBlock

    $default  reduce using rule 138 (forMarker)

    forMarker  go to state 378


State 360

  133 ForStmt: FOR forMarker Block forMarkerEnd .

    $default  reduce using rule 133 (ForStmt)


State 361

  124 ExprSwitchCase: CASE ExpressionList .
  195 ExpressionList: ExpressionList . COMMA Expression

    COMMA  shift, and go to state 191

    $default  reduce using rule 124 (ExprSwitchCase)


State 362

  117 ExprSwitchStmt: SWITCH LEFTBRACE ExprCaseClauseList RIGHTBRACE .

    $default  reduce using rule 117 (ExprSwitchStmt)


State 363

  121 ExprCaseClauseList: ExprCaseClauseList ExprCaseClause .

    $default  reduce using rule 121 (ExprCaseClauseList)


State 364

  123 ExprCaseClause: ExprSwitchCase COLON . StatementList

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    BREAK               shift, and go to state 244
    CONTINUE            shift, and go to state 245
    RETURN              shift, and go to state 246
    STRUCT              shift, and go to state 63
    IF                  shift, and go to state 247
    FOR                 shift, and go to state 248
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 249
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    GOTO                shift, and go to state 250
    FALLTHROUGH         shift, and go to state 251
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTBRACE           shift, and go to state 133
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 252

    $default  reduce using rule 50 (EmptyStmt)

    Block            go to state 253
    StatementList    go to state 379
    Statement        go to state 255
    Declaration      go to state 256
    LabeledStmt      go to state 257
    SimpleStmt       go to state 258
    EmptyStmt        go to state 259
    ExpressionStmt   go to state 260
    IncDecStmt       go to state 261
    Assignment       go to state 262
    ShortVarDecl     go to state 263
    VarDecl          go to state 28
    IdentifierList   go to state 264
    CompositeLit     go to state 112
    LiteralType      go to state 113
    Operand          go to state 114
    OperandName      go to state 115
    SliceType        go to state 73
    ReturnStmt       go to state 265
    BreakStmt        go to state 266
    ContinueStmt     go to state 267
    GotoStmt         go to state 268
    SwitchStmt       go to state 269
    ExprSwitchStmt   go to state 270
    FallthroughStmt  go to state 271
    IfStmt           go to state 272
    ForStmt          go to state 273
    Expression       go to state 274
    UnaryExpr        go to state 117
    PrimaryExpr      go to state 118
    MakeExpr         go to state 119
    ExpressionList   go to state 275
    TypeDecl         go to state 29
    MapType          go to state 74
    StructType       go to state 75
    PointerType      go to state 76
    ArrayType        go to state 77
    Literal          go to state 120
    BasicLit         go to state 121
    String           go to state 122


State 365

  114 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE . RIGHTBRACE
  118               | SWITCH SimpleStmt SCOLON LEFTBRACE . ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 336
    DEFAULT     shift, and go to state 337
    RIGHTBRACE  shift, and go to state 380

    ExprCaseClauseList  go to state 381
    ExprCaseClause      go to state 340
    ExprSwitchCase      go to state 341


State 366

  116 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression . LEFTBRACE RIGHTBRACE
  120               | SWITCH SimpleStmt SCOLON Expression . LEFTBRACE ExprCaseClauseList RIGHTBRACE
  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    ANDNOT     shift, and go to state 163
    ADD        shift, and go to state 164
    SUB        shift, and go to state 165
    XOR        shift, and go to state 166
    MUL        shift, and go to state 167
    AND        shift, and go to state 168
    OR         shift, and go to state 169
    LOGOR      shift, and go to state 170
    LOGAND     shift, and go to state 171
    ISEQ       shift, and go to state 172
    NEQ        shift, and go to state 173
    LESSEQ     shift, and go to state 174
    GRTEQ      shift, and go to state 175
    GRT        shift, and go to state 176
    LESS       shift, and go to state 177
    MOD        shift, and go to state 178
    QUOT       shift, and go to state 179
    SHL        shift, and go to state 180
    SHR        shift, and go to state 181
    LEFTBRACE  shift, and go to state 382


State 367

  115 ExprSwitchStmt: SWITCH Expression LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 115 (ExprSwitchStmt)


State 368

  119 ExprSwitchStmt: SWITCH Expression LEFTBRACE ExprCaseClauseList . RIGHTBRACE
  121 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 336
    DEFAULT     shift, and go to state 337
    RIGHTBRACE  shift, and go to state 383

    ExprCaseClause  go to state 363
    ExprSwitchCase  go to state 341


State 369

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression
  186 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression . RIGHTPARAN

    ANDNOT      shift, and go to state 163
    ADD         shift, and go to state 164
    SUB         shift, and go to state 165
    XOR         shift, and go to state 166
    MUL         shift, and go to state 167
    AND         shift, and go to state 168
    OR          shift, and go to state 169
    LOGOR       shift, and go to state 170
    LOGAND      shift, and go to state 171
    ISEQ        shift, and go to state 172
    NEQ         shift, and go to state 173
    LESSEQ      shift, and go to state 174
    GRTEQ       shift, and go to state 175
    GRT         shift, and go to state 176
    LESS        shift, and go to state 177
    MOD         shift, and go to state 178
    QUOT        shift, and go to state 179
    SHL         shift, and go to state 180
    SHR         shift, and go to state 181
    RIGHTPARAN  shift, and go to state 384


State 370

  177 KeyValueList: Expression COLON Expression COMMA KeyValueList .

    $default  reduce using rule 177 (KeyValueList)


State 371

  184 Slice: LEFTSQUARE COLON Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 184 (Slice)


State 372

  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression
  185 Slice: LEFTSQUARE Expression COLON Expression COLON Expression . RIGHTSQUARE

    ANDNOT       shift, and go to state 163
    ADD          shift, and go to state 164
    SUB          shift, and go to state 165
    XOR          shift, and go to state 166
    MUL          shift, and go to state 167
    AND          shift, and go to state 168
    OR           shift, and go to state 169
    LOGOR        shift, and go to state 170
    LOGAND       shift, and go to state 171
    ISEQ         shift, and go to state 172
    NEQ          shift, and go to state 173
    LESSEQ       shift, and go to state 174
    GRTEQ        shift, and go to state 175
    GRT          shift, and go to state 176
    LESS         shift, and go to state 177
    MOD          shift, and go to state 178
    QUOT         shift, and go to state 179
    SHL          shift, and go to state 180
    SHR          shift, and go to state 181
    RIGHTSQUARE  shift, and go to state 385


State 373

  128 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression . Block CloseBlock
  131       | IF OpenBlock SimpleStmt SCOLON Expression . Block ELSE IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt SCOLON Expression . Block ELSE Block CloseBlock
  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    ANDNOT     shift, and go to state 163
    ADD        shift, and go to state 164
    SUB        shift, and go to state 165
    XOR        shift, and go to state 166
    MUL        shift, and go to state 167
    AND        shift, and go to state 168
    OR         shift, and go to state 169
    LOGOR      shift, and go to state 170
    LOGAND     shift, and go to state 171
    ISEQ       shift, and go to state 172
    NEQ        shift, and go to state 173
    LESSEQ     shift, and go to state 174
    GRTEQ      shift, and go to state 175
    GRT        shift, and go to state 176
    LESS       shift, and go to state 177
    MOD        shift, and go to state 178
    QUOT       shift, and go to state 179
    SHL        shift, and go to state 180
    SHR        shift, and go to state 181
    LEFTBRACE  shift, and go to state 133

    Block  go to state 386


State 374

  129 IfStmt: IF OpenBlock Expression Block ELSE . IfStmt CloseBlock
  130       | IF OpenBlock Expression Block ELSE . Block CloseBlock

    IF         shift, and go to state 247
    LEFTBRACE  shift, and go to state 133

    Block   go to state 387
    IfStmt  go to state 388


State 375

  127 IfStmt: IF OpenBlock Expression Block CloseBlock .

    $default  reduce using rule 127 (IfStmt)


State 376

  136 ForStmt: FOR OpenBlock Condition forMarker Block . forMarkerEnd CloseBlock

    $default  reduce using rule 139 (forMarkerEnd)

    forMarkerEnd  go to state 389


State 377

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker . EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock
  135        | FOR OpenBlock SimpleStmt SCOLON forMarker . ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    $default  reduce using rule 51 (EmptyExpr)

    EmptyExpr       go to state 390
    ExpressionStmt  go to state 391
    CompositeLit    go to state 112
    LiteralType     go to state 113
    Operand         go to state 114
    OperandName     go to state 115
    SliceType       go to state 73
    Expression      go to state 392
    UnaryExpr       go to state 117
    PrimaryExpr     go to state 118
    MakeExpr        go to state 119
    MapType         go to state 74
    StructType      go to state 75
    PointerType     go to state 76
    ArrayType       go to state 77
    Literal         go to state 120
    BasicLit        go to state 121
    String          go to state 122


State 378

  137 ForStmt: FOR OpenBlock EmptyStmt Empty forMarker . Expression Empty EmptyStmt Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 68

    CompositeLit  go to state 112
    LiteralType   go to state 113
    Operand       go to state 114
    OperandName   go to state 115
    SliceType     go to state 73
    Expression    go to state 393
    UnaryExpr     go to state 117
    PrimaryExpr   go to state 118
    MakeExpr      go to state 119
    MapType       go to state 74
    StructType    go to state 75
    PointerType   go to state 76
    ArrayType     go to state 77
    Literal       go to state 120
    BasicLit      go to state 121
    String        go to state 122


State 379

   24 StatementList: StatementList . Statement SCOLON
  123 ExprCaseClause: ExprSwitchCase COLON StatementList .

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    BREAK               shift, and go to state 244
    CONTINUE            shift, and go to state 245
    RETURN              shift, and go to state 246
    STRUCT              shift, and go to state 63
    IF                  shift, and go to state 247
    FOR                 shift, and go to state 248
    VAR                 shift, and go to state 20
    SWITCH              shift, and go to state 249
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    GOTO                shift, and go to state 250
    FALLTHROUGH         shift, and go to state 251
    TYPE                shift, and go to state 21
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTBRACE           shift, and go to state 133
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 252

    SCOLON    reduce using rule 50 (EmptyStmt)
    $default  reduce using rule 123 (ExprCaseClause)

    Block            go to state 253
    Statement        go to state 309
    Declaration      go to state 256
    LabeledStmt      go to state 257
    SimpleStmt       go to state 258
    EmptyStmt        go to state 259
    ExpressionStmt   go to state 260
    IncDecStmt       go to state 261
    Assignment       go to state 262
    ShortVarDecl     go to state 263
    VarDecl          go to state 28
    IdentifierList   go to state 264
    CompositeLit     go to state 112
    LiteralType      go to state 113
    Operand          go to state 114
    OperandName      go to state 115
    SliceType        go to state 73
    ReturnStmt       go to state 265
    BreakStmt        go to state 266
    ContinueStmt     go to state 267
    GotoStmt         go to state 268
    SwitchStmt       go to state 269
    ExprSwitchStmt   go to state 270
    FallthroughStmt  go to state 271
    IfStmt           go to state 272
    ForStmt          go to state 273
    Expression       go to state 274
    UnaryExpr        go to state 117
    PrimaryExpr      go to state 118
    MakeExpr         go to state 119
    ExpressionList   go to state 275
    TypeDecl         go to state 29
    MapType          go to state 74
    StructType       go to state 75
    PointerType      go to state 76
    ArrayType        go to state 77
    Literal          go to state 120
    BasicLit         go to state 121
    String           go to state 122


State 380

  114 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 114 (ExprSwitchStmt)


State 381

  118 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList . RIGHTBRACE
  121 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 336
    DEFAULT     shift, and go to state 337
    RIGHTBRACE  shift, and go to state 394

    ExprCaseClause  go to state 363
    ExprSwitchCase  go to state 341


State 382

  116 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE . RIGHTBRACE
  120               | SWITCH SimpleStmt SCOLON Expression LEFTBRACE . ExprCaseClauseList RIGHTBRACE

    CASE        shift, and go to state 336
    DEFAULT     shift, and go to state 337
    RIGHTBRACE  shift, and go to state 395

    ExprCaseClauseList  go to state 396
    ExprCaseClause      go to state 340
    ExprSwitchCase      go to state 341


State 383

  119 ExprSwitchStmt: SWITCH Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE .

    $default  reduce using rule 119 (ExprSwitchStmt)


State 384

  186 MakeExpr: MAKE LEFTPARAN Type COMMA Expression COMMA Expression RIGHTPARAN .

    $default  reduce using rule 186 (MakeExpr)


State 385

  185 Slice: LEFTSQUARE Expression COLON Expression COLON Expression RIGHTSQUARE .

    $default  reduce using rule 185 (Slice)


State 386

  128 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block . CloseBlock
  131       | IF OpenBlock SimpleStmt SCOLON Expression Block . ELSE IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt SCOLON Expression Block . ELSE Block CloseBlock

    ELSE  shift, and go to state 397

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 398


State 387

  130 IfStmt: IF OpenBlock Expression Block ELSE Block . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 399


State 388

  129 IfStmt: IF OpenBlock Expression Block ELSE IfStmt . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 400


State 389

  136 ForStmt: FOR OpenBlock Condition forMarker Block forMarkerEnd . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 401


State 390

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr . SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    SCOLON  shift, and go to state 402


State 391

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt . SCOLON SimpleStmt Block forMarkerEnd CloseBlock

    SCOLON  shift, and go to state 403


State 392

   52 ExpressionStmt: Expression .
  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    ANDNOT  shift, and go to state 163
    ADD     shift, and go to state 164
    SUB     shift, and go to state 165
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    OR      shift, and go to state 169
    LOGOR   shift, and go to state 170
    LOGAND  shift, and go to state 171
    ISEQ    shift, and go to state 172
    NEQ     shift, and go to state 173
    LESSEQ  shift, and go to state 174
    GRTEQ   shift, and go to state 175
    GRT     shift, and go to state 176
    LESS    shift, and go to state 177
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181

    $default  reduce using rule 52 (ExpressionStmt)


State 393

  137 ForStmt: FOR OpenBlock EmptyStmt Empty forMarker Expression . Empty EmptyStmt Block forMarkerEnd CloseBlock
  141 Expression: Expression . MUL Expression
  142           | Expression . QUOT Expression
  143           | Expression . MOD Expression
  144           | Expression . SHL Expression
  145           | Expression . SHR Expression
  146           | Expression . AND Expression
  147           | Expression . ANDNOT Expression
  148           | Expression . ADD Expression
  149           | Expression . SUB Expression
  150           | Expression . OR Expression
  151           | Expression . XOR Expression
  152           | Expression . LOGAND Expression
  153           | Expression . LOGOR Expression
  154           | Expression . ISEQ Expression
  155           | Expression . NEQ Expression
  156           | Expression . GRTEQ Expression
  157           | Expression . GRT Expression
  158           | Expression . LESSEQ Expression
  159           | Expression . LESS Expression

    ANDNOT  shift, and go to state 163
    ADD     shift, and go to state 164
    SUB     shift, and go to state 165
    XOR     shift, and go to state 166
    MUL     shift, and go to state 167
    AND     shift, and go to state 168
    OR      shift, and go to state 169
    LOGOR   shift, and go to state 170
    LOGAND  shift, and go to state 171
    ISEQ    shift, and go to state 172
    NEQ     shift, and go to state 173
    LESSEQ  shift, and go to state 174
    GRTEQ   shift, and go to state 175
    GRT     shift, and go to state 176
    LESS    shift, and go to state 177
    MOD     shift, and go to state 178
    QUOT    shift, and go to state 179
    SHL     shift, and go to state 180
    SHR     shift, and go to state 181

    $default  reduce using rule 140 (Empty)

    Empty  go to state 404


State 394

  118 ExprSwitchStmt: SWITCH SimpleStmt SCOLON LEFTBRACE ExprCaseClauseList RIGHTBRACE .

    $default  reduce using rule 118 (ExprSwitchStmt)


State 395

  116 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE RIGHTBRACE .

    $default  reduce using rule 116 (ExprSwitchStmt)


State 396

  120 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList . RIGHTBRACE
  121 ExprCaseClauseList: ExprCaseClauseList . ExprCaseClause

    CASE        shift, and go to state 336
    DEFAULT     shift, and go to state 337
    RIGHTBRACE  shift, and go to state 405

    ExprCaseClause  go to state 363
    ExprSwitchCase  go to state 341


State 397

  131 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE . IfStmt CloseBlock
  132       | IF OpenBlock SimpleStmt SCOLON Expression Block ELSE . Block CloseBlock

    IF         shift, and go to state 247
    LEFTBRACE  shift, and go to state 133

    Block   go to state 406
    IfStmt  go to state 407


State 398

  128 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block CloseBlock .

    $default  reduce using rule 128 (IfStmt)


State 399

  130 IfStmt: IF OpenBlock Expression Block ELSE Block CloseBlock .

    $default  reduce using rule 130 (IfStmt)


State 400

  129 IfStmt: IF OpenBlock Expression Block ELSE IfStmt CloseBlock .

    $default  reduce using rule 129 (IfStmt)


State 401

  136 ForStmt: FOR OpenBlock Condition forMarker Block forMarkerEnd CloseBlock .

    $default  reduce using rule 136 (ForStmt)


State 402

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON . SimpleStmt Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 303

    $default  reduce using rule 50 (EmptyStmt)

    SimpleStmt      go to state 408
    EmptyStmt       go to state 259
    ExpressionStmt  go to state 260
    IncDecStmt      go to state 261
    Assignment      go to state 262
    ShortVarDecl    go to state 263
    IdentifierList  go to state 264
    CompositeLit    go to state 112
    LiteralType     go to state 113
    Operand         go to state 114
    OperandName     go to state 115
    SliceType       go to state 73
    Expression      go to state 274
    UnaryExpr       go to state 117
    PrimaryExpr     go to state 118
    MakeExpr        go to state 119
    ExpressionList  go to state 275
    MapType         go to state 74
    StructType      go to state 75
    PointerType     go to state 76
    ArrayType       go to state 77
    Literal         go to state 120
    BasicLit        go to state 121
    String          go to state 122


State 403

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON . SimpleStmt Block forMarkerEnd CloseBlock

    INTEGER_VAL         shift, and go to state 97
    FLOAT_VAL           shift, and go to state 98
    TRUE                shift, and go to state 99
    FALSE               shift, and go to state 100
    STRUCT              shift, and go to state 63
    NEW                 shift, and go to state 101
    MAP                 shift, and go to state 64
    MAKE                shift, and go to state 102
    ADD                 shift, and go to state 104
    SUB                 shift, and go to state 105
    NOT                 shift, and go to state 106
    MUL                 shift, and go to state 107
    AND                 shift, and go to state 108
    LEFTPARAN           shift, and go to state 110
    LEFTSQUARE          shift, and go to state 66
    RAW_STRING          shift, and go to state 13
    INTERPRETED_STRING  shift, and go to state 14
    BYTE_VAL            shift, and go to state 111
    IDENTIFIER          shift, and go to state 303

    $default  reduce using rule 50 (EmptyStmt)

    SimpleStmt      go to state 409
    EmptyStmt       go to state 259
    ExpressionStmt  go to state 260
    IncDecStmt      go to state 261
    Assignment      go to state 262
    ShortVarDecl    go to state 263
    IdentifierList  go to state 264
    CompositeLit    go to state 112
    LiteralType     go to state 113
    Operand         go to state 114
    OperandName     go to state 115
    SliceType       go to state 73
    Expression      go to state 274
    UnaryExpr       go to state 117
    PrimaryExpr     go to state 118
    MakeExpr        go to state 119
    ExpressionList  go to state 275
    MapType         go to state 74
    StructType      go to state 75
    PointerType     go to state 76
    ArrayType       go to state 77
    Literal         go to state 120
    BasicLit        go to state 121
    String          go to state 122


State 404

  137 ForStmt: FOR OpenBlock EmptyStmt Empty forMarker Expression Empty . EmptyStmt Block forMarkerEnd CloseBlock

    $default  reduce using rule 50 (EmptyStmt)

    EmptyStmt  go to state 410


State 405

  120 ExprSwitchStmt: SWITCH SimpleStmt SCOLON Expression LEFTBRACE ExprCaseClauseList RIGHTBRACE .

    $default  reduce using rule 120 (ExprSwitchStmt)


State 406

  132 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE Block . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 411


State 407

  131 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE IfStmt . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 412


State 408

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt . Block forMarkerEnd CloseBlock

    LEFTBRACE  shift, and go to state 133

    Block  go to state 413


State 409

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt . Block forMarkerEnd CloseBlock

    LEFTBRACE  shift, and go to state 133

    Block  go to state 414


State 410

  137 ForStmt: FOR OpenBlock EmptyStmt Empty forMarker Expression Empty EmptyStmt . Block forMarkerEnd CloseBlock

    LEFTBRACE  shift, and go to state 133

    Block  go to state 415


State 411

  132 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE Block CloseBlock .

    $default  reduce using rule 132 (IfStmt)


State 412

  131 IfStmt: IF OpenBlock SimpleStmt SCOLON Expression Block ELSE IfStmt CloseBlock .

    $default  reduce using rule 131 (IfStmt)


State 413

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block . forMarkerEnd CloseBlock

    $default  reduce using rule 139 (forMarkerEnd)

    forMarkerEnd  go to state 416


State 414

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block . forMarkerEnd CloseBlock

    $default  reduce using rule 139 (forMarkerEnd)

    forMarkerEnd  go to state 417


State 415

  137 ForStmt: FOR OpenBlock EmptyStmt Empty forMarker Expression Empty EmptyStmt Block . forMarkerEnd CloseBlock

    $default  reduce using rule 139 (forMarkerEnd)

    forMarkerEnd  go to state 418


State 416

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 419


State 417

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 420


State 418

  137 ForStmt: FOR OpenBlock EmptyStmt Empty forMarker Expression Empty EmptyStmt Block forMarkerEnd . CloseBlock

    $default  reduce using rule 3 (CloseBlock)

    CloseBlock  go to state 421


State 419

  134 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker EmptyExpr SCOLON SimpleStmt Block forMarkerEnd CloseBlock .

    $default  reduce using rule 134 (ForStmt)


State 420

  135 ForStmt: FOR OpenBlock SimpleStmt SCOLON forMarker ExpressionStmt SCOLON SimpleStmt Block forMarkerEnd CloseBlock .

    $default  reduce using rule 135 (ForStmt)


State 421

  137 ForStmt: FOR OpenBlock EmptyStmt Empty forMarker Expression Empty EmptyStmt Block forMarkerEnd CloseBlock .

    $default  reduce using rule 137 (ForStmt)
